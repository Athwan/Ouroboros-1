{
    "AbilityParam": "def AbilityParam(json):\n    this={}#AbilityParamjson)\n    #returnfalse\n    if 'iname' in json:\n        this['iname'] = json['iname']\n    if 'name' in json:\n        this['name'] = json['name']\n    if 'expr' in json:\n        this['expr'] = json['expr']\n    if 'icon' in json:\n        this['icon'] = json['icon']\n    if 'type' in json:\n        this['type'] = ENUM['EAbilityType'][json['type']]\n    if 'slot' in json:\n        this['slot'] = ENUM['EAbilitySlot'][json['slot']]\n    if 'cap' in json:\n        this['lvcap'] = Math.Max(json['cap'],1)\n    if 'fix' in json:\n        this['is_fixed'] = json['fix']!=0\n        #json.skl1,\n        #json.skl2,\n        #json.skl3,\n        #json.skl4,\n        #json.skl5,\n        #json.skl6,\n        #json.skl7,\n        #json.skl8,\n        #json.skl9,\n        #json.skl10\n        #}\n        #++length\n        #if(length>0)\n                #json.lv1,\n                #json.lv2,\n                #json.lv3,\n                #json.lv4,\n                #json.lv5,\n                #json.lv6,\n                #json.lv7,\n                #json.lv8,\n                #json.lv9,\n                #json.lv10\n                #}\n                if 'units' in json:\n                    this['condition_units'] = json['units']\n                if 'jobs' in json:\n                    this['condition_jobs'] = json['jobs']\n            if 'birth' in json:\n                this['condition_birth'] = json['birth']\n            if 'sex' in json:\n                this['condition_sex'] = ENUM['ESex'][json['sex']]\n            if 'elem' in json:\n                this['condition_element'] = ENUM['EElement'][json['elem']]\n            if 'rmin' in json:\n                this['condition_raremin'] = json['rmin']\n            if 'rmax' in json:\n                this['condition_raremax'] = json['rmax']\n            #returntrue\n        #\n        #publicintGetRankCap()\n            #return(int)this.lvcap\n        #\n        #publicboolCheckEnableUseAbility(UnitDataself,intjob_index)\n            #//ISSUE:objectofacompiler-generatedtypeiscreated\n            #//ISSUE:variableofacompiler-generatedtype\n            #//ISSUE:referencetoacompiler-generatedfield\n            #//ISSUE:referencetoacompiler-generatedmethod\n            #returnfalse\n                #//ISSUE:objectofacompiler-generatedtypeiscreated\n                #//ISSUE:variableofacompiler-generatedtype\n                #//ISSUE:referencetoacompiler-generatedfield\n                #//ISSUE:referencetoacompiler-generatedfield\n                #//ISSUE:referencetoacompiler-generatedfield\n                #returnfalse\n                #//ISSUE:referencetoacompiler-generatedmethod\n                    #//ISSUE:objectofacompiler-generatedtypeiscreated\n                    #//ISSUE:variableofacompiler-generatedtype\n                    #//ISSUE:referencetoacompiler-generatedfield\n                    #if(string.IsNullOrEmpty(abilityCAnonStorey209.job.Param.origin))\n                    #returnfalse\n                    #//ISSUE:referencetoacompiler-generatedfield\n                    #//ISSUE:referencetoacompiler-generatedfield\n                    #//ISSUE:referencetoacompiler-generatedfield\n                    #//ISSUE:referencetoacompiler-generatedmethod\n                    #returnfalse\n            #//ISSUE:referencetoacompiler-generatedfield\n            #//ISSUE:referencetoacompiler-generatedfield\n            #//ISSUE:referencetoacompiler-generatedfield\n            #//ISSUE:referencetoacompiler-generatedfield\n            #//ISSUE:referencetoacompiler-generatedfield\nreturn this\n",
    "AchievementParam": "def AchievementParam(json):\n    this={}#AchievementParamjson)\n    #returnfalse\n    if 'fields' in json:\n        this['id'] = json['fields'].id\n    if 'fields' in json:\n        this['iname'] = json['fields'].iname\n    if 'fields' in json:\n        this['ios'] = json['fields'].ios\n    if 'fields' in json:\n        this['googleplay'] = json['fields'].googleplay\n    #returntrue\nreturn this\n",
    "AIParam": "def AIParam(json):\n    this={}#AIParamjson)\n    #returnfalse\n    if 'iname' in json:\n        this['iname'] = json['iname']\n    if 'role' in json:\n        this['role'] = ENUM['RoleTypes'][json['role']]\n    if 'prm' in json:\n        this['param'] = ENUM['ParamTypes'][json['prm']]\n    if 'prmprio' in json:\n        this['param_prio'] = ENUM['ParamPriorities'][json['prmprio']]\n    if 'sos' in json:\n        this['escape_border'] = json['sos']\n    if 'heal' in json:\n        this['heal_border'] = json['heal']\n    if 'gems' in json:\n        this['gems_border'] = json['gems']\n    if 'buff_border' in json:\n        this['buff_border'] = json['buff_border']\n    if 'cond_border' in json:\n        this['cond_border'] = json['cond_border']\n    if 'safe_border' in json:\n        this['safe_border'] = json['safe_border']\n    if 'gosa_border' in json:\n        this['gosa_border'] = json['gosa_border']\n    if 'notsup_hp' in json:\n        this['DisableSupportActionHpBorder'] = json['notsup_hp']\n    if 'notsup_num' in json:\n        this['DisableSupportActionMemberBorder'] = json['notsup_num']\n        if 'skil_prio' in json:\n            this['SkillCategoryPriorities'] = newSkillCategory[json['skil_prio'].Length]\n        if 'skil_prio' in json:\n            this['SkillCategoryPriorities[index]'] = ENUM['SkillCategory'][json['skil_prio']]\n        if 'buff_prio' in json:\n            this['BuffPriorities'] = newParamTypes[json['buff_prio'].Length]\n        if 'buff_prio' in json:\n            this['BuffPriorities[index]'] = ENUM['ParamTypes'][json['buff_prio']]\n        if 'cond_prio' in json:\n            this['ConditionPriorities'] = newEUnitCondition[json['cond_prio'].Length]\n        if 'cond_prio' in json:\n            this['ConditionPriorities[index]'] = ENUM['EUnitCondition'][json['cond_prio']]\n    #returntrue\nreturn this\n",
    "AppealEventShopMaster": "def AppealEventShopMaster(json):\n    this={}#AppealEventShopMasterjson)\n    #returnfalse\n    if 'fields' in json:\n        this['appeal_id'] = json['fields'].appeal_id\n    if 'fields' in json:\n        this['start_at'] = TimeManager.FromDateTime)\n    if 'fields' in json:\n        this['end_at'] = TimeManager.FromDateTime)\n    if 'fields' in json:\n        this['priority'] = json['fields'].priority\n    if 'fields' in json:\n        this['position_chara'] = json['fields'].position_chara\n    if 'fields' in json:\n        this['position_text'] = json['fields'].position_text\n    #returntrue\nreturn this\n",
    "AppealGachaMaster": "def AppealGachaMaster(json):\n    this={}#AppealGachaMasterjson)\n    #returnfalse\n    if 'fields' in json:\n        this['appeal_id'] = json['fields'].appeal_id\n    if 'fields' in json:\n        this['start_at'] = TimeManager.FromDateTime)\n    if 'fields' in json:\n        this['end_at'] = TimeManager.FromDateTime)\n    if 'fields' in json:\n        this['is_new'] = json['fields'].flag_new!=0\n    #returntrue\nreturn this\n",
    "AppealLimitedShopMaster": "def AppealLimitedShopMaster(json):\n    this={}#AppealLimitedShopMasterjson)\n    #returnfalse\n    if 'fields' in json:\n        this['appeal_id'] = json['fields'].appeal_id\n    if 'fields' in json:\n        this['start_at'] = TimeManager.FromDateTime)\n    if 'fields' in json:\n        this['end_at'] = TimeManager.FromDateTime)\n    if 'fields' in json:\n        this['priority'] = json['fields'].priority\n    if 'fields' in json:\n        this['pos_x_chara'] = json['fields'].position_chara\n    if 'fields' in json:\n        this['pos_x_text'] = json['fields'].position_text\n    #returntrue\nreturn this\n",
    "AppealQuestMaster": "def AppealQuestMaster(json):\n    this={}#AppealQuestMasterjson)\n    #returnfalse\n    if 'fields' in json:\n        this['appeal_id'] = json['fields'].appeal_id\n    if 'fields' in json:\n        this['start_at'] = TimeManager.FromDateTime)\n    if 'fields' in json:\n        this['end_at'] = TimeManager.FromDateTime)\n    #returntrue\nreturn this\n",
    "ArtifactParam": "def ArtifactParam(json):\n    this={}#ArtifactParamjson)\n    #returnfalse\n    if 'iname' in json:\n        this['iname'] = json['iname']\n    if 'name' in json:\n        this['name'] = json['name']\n    if 'expr' in json:\n        this['expr'] = json['expr']\n    if 'flavor' in json:\n        this['flavor'] = json['flavor']\n    if 'spec' in json:\n        this['spec'] = json['spec']\n    if 'asset' in json:\n        this['asset'] = json['asset']\n    if 'voice' in json:\n        this['voice'] = json['voice']\n    if 'icon' in json:\n        this['icon'] = json['icon']\n    if 'tag' in json:\n        this['tag'] = json['tag']\n    if 'type' in json:\n        this['type'] = ENUM['ArtifactTypes'][json['type']]\n    if 'rini' in json:\n        this['rareini'] = json['rini']\n    if 'rmax' in json:\n        this['raremax'] = json['rmax']\n    if 'kakera' in json:\n        this['kakera'] = json['kakera']\n    if 'maxnum' in json:\n        this['maxnum'] = json['maxnum']\n    if 'notsmn' in json:\n        this['is_create'] = json['notsmn']==0\n        if 'skills' in json:\n            this['skills'] = json['skills']\n    #Array.Clear((Array)this.equip_effects,0,this.equip_effects.Length)\n    if 'equip1' in json:\n        this['equip_effects[0]'] = json['equip1']\n    if 'equip2' in json:\n        this['equip_effects[1]'] = json['equip2']\n    if 'equip3' in json:\n        this['equip_effects[2]'] = json['equip3']\n    if 'equip4' in json:\n        this['equip_effects[3]'] = json['equip4']\n    if 'equip5' in json:\n        this['equip_effects[4]'] = json['equip5']\n    #Array.Clear((Array)this.attack_effects,0,this.attack_effects.Length)\n    if 'attack1' in json:\n        this['attack_effects[0]'] = json['attack1']\n    if 'attack2' in json:\n        this['attack_effects[1]'] = json['attack2']\n    if 'attack3' in json:\n        this['attack_effects[2]'] = json['attack3']\n    if 'attack4' in json:\n        this['attack_effects[3]'] = json['attack4']\n    if 'attack5' in json:\n        this['attack_effects[4]'] = json['attack5']\n        if 'abils' in json:\n            this['abil_inames'] = newstring[json['abils'].Length]\n        if 'ablvs' in json:\n            this['abil_levels'] = newint[json['ablvs'].Length]\n        if 'abrares' in json:\n            this['abil_rareties'] = newint[json['abrares'].Length]\n        if 'abshows' in json:\n            this['abil_shows'] = newint[json['abshows'].Length]\n        if 'abconds' in json:\n            this['abil_conds'] = newstring[json['abconds'].Length]\n            if 'abils' in json:\n                this['abil_inames[index]'] = json['abils'][index]\n            if 'ablvs' in json:\n                this['abil_levels[index]'] = json['ablvs'][index]\n            if 'abrares' in json:\n                this['abil_rareties[index]'] = json['abrares'][index]\n            if 'abshows' in json:\n                this['abil_shows[index]'] = json['abshows'][index]\n            if 'abconds' in json:\n                this['abil_conds[index]'] = json['abconds'][index]\n    if 'kc' in json:\n        this['kcoin'] = json['kc']\n    if 'tc' in json:\n        this['tcoin'] = json['tc']\n    if 'ac' in json:\n        this['acoin'] = json['ac']\n    if 'mc' in json:\n        this['mcoin'] = json['mc']\n    if 'pp' in json:\n        this['pcoin'] = json['pp']\n    if 'buy' in json:\n        this['buy'] = json['buy']\n    if 'sell' in json:\n        this['sell'] = json['sell']\n    if 'ecost' in json:\n        this['enhance_cost'] = json['ecost']\n    if 'eqlv' in json:\n        this['condition_lv'] = json['eqlv']\n    if 'sex' in json:\n        this['condition_sex'] = ENUM['ESex'][json['sex']]\n    if 'birth' in json:\n        this['condition_birth'] = json['birth']\n    if 'elem' in json:\n        this['condition_element'] = ENUM['EElement'][json['elem']]\n    if 'eqrmin' in json:\n        this['condition_raremin'] = json['eqrmin']\n    if 'eqrmax' in json:\n        this['condition_raremax'] = json['eqrmax']\n        if 'units' in json:\n            this['condition_units'] = json['units']\n        if 'jobs' in json:\n            this['condition_jobs'] = json['jobs']\n    #returntrue\nreturn this\n",
    "AwardParam": "def AwardParam(json):\n    this={}#AwardParamjson)\n    #returnfalse\n    if 'id' in json:\n        this['id'] = json['id']\n    if 'iname' in json:\n        this['iname'] = json['iname']\n    if 'name' in json:\n        this['name'] = json['name']\n    if 'expr' in json:\n        this['expr'] = json['expr']\n    if 'icon' in json:\n        this['icon'] = json['icon']\n    if 'bg' in json:\n        this['bg'] = json['bg']\n    if 'txt_img' in json:\n        this['txt_img'] = json['txt_img']\n    #if(!string.IsNullOrEmpty(json.start_at))\n    #DateTime.TryParse(json.start_at,outthis.start_at)\n    if 'grade' in json:\n        this['grade'] = json['grade']\n    if 'iname' in json:\n        this['hash'] = json['iname'].GetHashCode\n    if 'tab' in json:\n        this['tab'] = json['tab']\n    #returntrue\nreturn this\n",
    "BannerParam": "def BannerParam(json):\n    this={}#BannerParamjson)\n    #returnfalse\n    #try\n        if 'iname' in json:\n            this['iname'] = json['iname']\n        if 'type' in json:\n            this['type'] = ENUM['BannerType'][json['type']]\n        if 'sval' in json:\n            this['sval'] = json['sval']\n        if 'banr' in json:\n            this['banner'] = json['banr']\n        if 'banr_sprite' in json:\n            this['banr_sprite'] = json['banr_sprite']\n        if 'begin_at' in json:\n            this['begin_at'] = json['begin_at']\n        if 'end_at' in json:\n            this['end_at'] = json['end_at']\n        if 'priority' in json:\n            this['priority'] = json['priority']>0?json['priority']:int.MaxValue\n    #catch(Exceptionex)\n        #Debug.LogException(ex)\n        #returnfalse\n    #returntrue\nreturn this\n",
    "Ma": "def Ma(json):\n    this={}#Mapsrc)\n    #thrownewException(\"Gridsizedoesnotmatchwidthxheight\")\n    #this.mRoot.Initialize(this.mWidth,this.mHeight,this.mGrid)\n    #this.ResetMoveRoutes()\n    #returntrue\nreturn this\n",
    "BreakObjParam": "def BreakObjParam(json):\n    this={}#BreakObjParamjson)\n    #return\n    if 'iname' in json:\n        this['mIname'] = json['iname']\n    if 'name' in json:\n        this['mName'] = json['name']\n    if 'expr' in json:\n        this['mExpr'] = json['expr']\n    if 'unit_id' in json:\n        this['mUnitId'] = json['unit_id']\n    if 'clash_type' in json:\n        this['mClashType'] = ENUM['eMapBreakClashType'][json['clash_type']]\n    if 'ai_type' in json:\n        this['mAiType'] = ENUM['eMapBreakAIType'][json['ai_type']]\n    if 'side_type' in json:\n        this['mSideType'] = ENUM['eMapBreakSideType'][json['side_type']]\n    if 'ray_type' in json:\n        this['mRayType'] = ENUM['eMapBreakRayType'][json['ray_type']]\n    if 'is_ui' in json:\n        this['mIsUI'] = json['is_ui']!=0\n    #if(!string.IsNullOrEmpty(json.rest_hps))\n                #int.TryParse(strArray[index],outresult)\n    if 'clock' in json:\n        this['mAliveClock'] = json['clock']\n    if 'appear_dir' in json:\n        this['mAppearDir'] = ENUM['EUnitDirection'][json['appear_dir']]\nreturn this\n",
    "BuffEffectParam": "def BuffEffectParam(json):\n    this={}#BuffEffectParamjson)\n    #returnfalse\n    if 'iname' in json:\n        this['iname'] = json['iname']\n    if 'job' in json:\n        this['job'] = json['job']\n    if 'buki' in json:\n        this['buki'] = json['buki']\n    if 'birth' in json:\n        this['birth'] = json['birth']\n    if 'sex' in json:\n        this['sex'] = ENUM['ESex'][json['sex']]\n    if 'elem' in json:\n        this['elem'] = Convert.ToInt32,2)\n    if 'rate' in json:\n        this['rate'] = json['rate']\n    if 'turn' in json:\n        this['turn'] = json['turn']\n    if 'chktgt' in json:\n        this['chk_target'] = ENUM['EffectCheckTargets'][json['chktgt']]\n    if 'timing' in json:\n        this['chk_timing'] = ENUM['EffectCheckTimings'][json['timing']]\n    if 'cond' in json:\n        this['cond'] = ENUM['ESkillCondition'][json['cond']]\n    if 'app_type' in json:\n        this['mAppType'] = ENUM['EAppType'][json['app_type']]\n    if 'app_mct' in json:\n        this['mAppMct'] = json['app_mct']\n    if 'eff_range' in json:\n        this['mEffRange'] = ENUM['EEffRange'][json['eff_range']]\n    #++length\n    #++length\n    #++length\n    #++length\n    #++length\n    #++length\n    #++length\n    #++length\n    #++length\n    #++length\n    #if(length>0)\n            this['']\n            this['buffs[index]']\n            if 'vini1' in json:\n                this['buffs[index]']['value_ini'] = json['vini1']\n            this['buffs[index]']\n            if 'vmax1' in json:\n                this['buffs[index]']['value_max'] = json['vmax1']\n            this['buffs[index]']\n            if 'calc1' in json:\n                this['buffs[index]']['calc'] = ENUM['SkillParamCalcTypes'][json['calc1']]\n            #++index\n            if 'vini2' in json:\n                this['buffs[index]']['value_ini'] = json['vini2']\n            if 'vmax2' in json:\n                this['buffs[index]']['value_max'] = json['vmax2']\n            if 'calc2' in json:\n                this['buffs[index]']['calc'] = ENUM['SkillParamCalcTypes'][json['calc2']]\n            #++index\n            if 'vini3' in json:\n                this['buffs[index]']['value_ini'] = json['vini3']\n            if 'vmax3' in json:\n                this['buffs[index]']['value_max'] = json['vmax3']\n            if 'calc3' in json:\n                this['buffs[index]']['calc'] = ENUM['SkillParamCalcTypes'][json['calc3']]\n            #++index\n            if 'vini4' in json:\n                this['buffs[index]']['value_ini'] = json['vini4']\n            if 'vmax4' in json:\n                this['buffs[index]']['value_max'] = json['vmax4']\n            if 'calc4' in json:\n                this['buffs[index]']['calc'] = ENUM['SkillParamCalcTypes'][json['calc4']]\n            #++index\n            if 'vini5' in json:\n                this['buffs[index]']['value_ini'] = json['vini5']\n            if 'vmax5' in json:\n                this['buffs[index]']['value_max'] = json['vmax5']\n            if 'calc5' in json:\n                this['buffs[index]']['calc'] = ENUM['SkillParamCalcTypes'][json['calc5']]\n            #++index\n            if 'vini6' in json:\n                this['buffs[index]']['value_ini'] = json['vini6']\n            if 'vmax6' in json:\n                this['buffs[index]']['value_max'] = json['vmax6']\n            if 'calc6' in json:\n                this['buffs[index]']['calc'] = ENUM['SkillParamCalcTypes'][json['calc6']]\n            #++index\n            if 'vini7' in json:\n                this['buffs[index]']['value_ini'] = json['vini7']\n            if 'vmax7' in json:\n                this['buffs[index]']['value_max'] = json['vmax7']\n            if 'calc7' in json:\n                this['buffs[index]']['calc'] = ENUM['SkillParamCalcTypes'][json['calc7']]\n            #++index\n            if 'vini8' in json:\n                this['buffs[index]']['value_ini'] = json['vini8']\n            if 'vmax8' in json:\n                this['buffs[index]']['value_max'] = json['vmax8']\n            if 'calc8' in json:\n                this['buffs[index]']['calc'] = ENUM['SkillParamCalcTypes'][json['calc8']]\n            #++index\n            if 'vini9' in json:\n                this['buffs[index]']['value_ini'] = json['vini9']\n            if 'vmax9' in json:\n                this['buffs[index]']['value_max'] = json['vmax9']\n            if 'calc9' in json:\n                this['buffs[index]']['calc'] = ENUM['SkillParamCalcTypes'][json['calc9']]\n            #++index\n            if 'vini10' in json:\n                this['buffs[index]']['value_ini'] = json['vini10']\n            if 'vmax10' in json:\n                this['buffs[index]']['value_max'] = json['vmax10']\n            if 'calc10' in json:\n                this['buffs[index]']['calc'] = ENUM['SkillParamCalcTypes'][json['calc10']]\n    #returntrue\nreturn this\n",
    "BundleItemInfo[]": "def BundleItemInfo[](json):\n    this={}#BundleItemInfo[]json)\n    #return(List<BundleParam.BundleItemInfo>)null\n        #if(!bundleItemInfo.Deserialize(json[index]))\n        #return(List<BundleParam.BundleItemInfo>)null\n        #bundleItemInfoList.Add(bundleItemInfo)\n    #returnbundleItemInfoList\nreturn this\n",
    "BundleParam": "def BundleParam(json):\n    this={}#BundleParamjson)\n    #returnfalse\n    if 'product_id' in json:\n        this['mProductId'] = json['product_id']\n    if 'platform' in json:\n        this['mPlatform'] = json['platform']\n    if 'name' in json:\n        this['mName'] = json['name']\n    if 'description' in json:\n        this['mDescription'] = json['description']\n    if 'additional_paid_coin' in json:\n        this['mAdditionalPaidCoin'] = json['additional_paid_coin']\n    if 'additional_free_coin' in json:\n        this['mAdditionalFreeCoin'] = json['additional_free_coin']\n    if 'end_date' in json:\n        this['mEndDate'] = json['end_date']\n    if 'image' in json:\n        this['mImage'] = json['image']\n    if 'display_order' in json:\n        this['mDisplayOrder'] = json['display_order']\n    if 'max_purchase_limit' in json:\n        this['mMaxPurchaseLimit'] = json['max_purchase_limit']\n    if 'max_purchase_limit' in json:\n        this['mPurchaseLimit'] = json['max_purchase_limit']-json.purchase_count\n        this['']\n        this['mContents']\n        if 'contents' in json:\n            this['mContents']['Items'] = this.Deserialize\n        this['mContents']\n        if 'contents' in json:\n            this['mContents']['Units'] = this.Deserialize\n        this['mContents']\n        if 'contents' in json:\n            this['mContents']['Equipments'] = this.Deserialize\n    #returntrue\nreturn this\n",
    "BundleItemInfo": "def BundleItemInfo(json):\n    this={}#BundleItemInfojson)\n    #returnfalse\n    if 'iname' in json:\n        this['Name'] = json['iname']\n    if 'num' in json:\n        this['Quantity'] = json['num']\n    #returntrue\nreturn this\n",
    "BundleParamResponse": "def BundleParamResponse(json):\n    this={}#BundleParamResponsejson)\n    #returntrue\n    #this.bundles.Clear()\n        #if(!bundleParam.Deserialize(json.bundles[index]))\n        #returnfalse\n        #this.bundles.Add(bundleParam)\n    #this.bundles_all.Clear()\n    #foreach(JSON_BundleParamjson1injson.bundles_all)\n        #if(!bundleParam.Deserialize(json1))\n        #returnfalse\n        #this.bundles_all.Add(bundleParam)\n    #MonoSingleton<GameManager>.Instance.Player.SetBundleParam(this.bundles)\n    #returntrue\nreturn this\n",
    "ChallengeCategoryParam": "def ChallengeCategoryParam(json):\n    this={}#ChallengeCategoryParamjson)\n    #returnfalse\n    if 'iname' in json:\n        this['iname'] = json['iname']\n        #this.begin_at.Set(json.begin_at,DateTime.MinValue)\n        #this.end_at.Set(json.end_at,DateTime.MaxValue)\n    if 'prio' in json:\n        this['prio'] = json['prio']\n    #returntrue\nreturn this\n",
    "ChapterParam": "def ChapterParam(json):\n    this={}#ChapterParamjson)\n    #thrownewInvalidJSONException()\n    if 'iname' in json:\n        this['iname'] = json['iname']\n    if 'name' in json:\n        this['name'] = json['name']\n    if 'expr' in json:\n        this['expr'] = json['expr']\n    if 'world' in json:\n        this['world'] = json['world']\n    if 'start' in json:\n        this['start'] = json['start']\n    if 'end' in json:\n        this['end'] = json['end']\n    if 'hide' in json:\n        this['hidden'] = json['hide']!=0\n    if 'chap' in json:\n        this['section'] = json['chap']\n    if 'banr' in json:\n        this['banner'] = json['banr']\n    if 'item' in json:\n        this['prefabPath'] = json['item']\n    if 'hurl' in json:\n        this['helpURL'] = json['hurl']\n    #if(!string.IsNullOrEmpty(json.keyitem1)&&json.keynum1>0)\n    #this.keys.Add(newKeyItem()\n        #})\n        #if(this.keys.Count>0)\n        if 'keytime' in json:\n            this['keytime'] = json['keytime']\n        #this.quests.Clear()\n    #\n    #publicboolIsAvailable(DateTimet)\n        #return!this.hidden\n        #returnt<dateTime2\n        #returnfalse\n    #\n    #publicboolIsKeyQuest()\n        #returnthis.keys.Count>0\n    #\n    #publicKeyQuestTypesGetKeyQuestType()\n        #if(!this.IsKeyQuest())\n        #returnKeyQuestTypes.None\n    #\n    #publicboolIsGpsQuest()\n                #returntrue\n            #if(this.children[index].IsGpsQuest())\n            #returntrue\n        #returnfalse\n    #\n    #publicboolIsTowerQuest()\n                #returntrue\n            #if(this.children[index].IsTowerQuest())\n            #returntrue\n        #returnfalse\n    #\n    #publicboolIsBeginnerQuest()\n                #returntrue\n            #if(this.children[index].IsBeginnerQuest())\n            #returntrue\n        #returnfalse\n    #\n    #publicSubQuestTypesGetSubQuestType()\n        #returnthis.quests[0].subtype\n        #returnthis.children[0].GetSubQuestType()\n        #returnSubQuestTypes.Normal\n    #\n    #publicboolHasGpsQuest()\n                #if(this.quests[index].gps_enable)\n                #returntrue\n            #if(this.children[index].HasGpsQuest())\n            #returntrue\n        #returnfalse\n    #\n    #publicboolIsDateUnlock(longunixtime)\n            #if(this.quests[index].IsDateUnlock(unixtime))\n            #returntrue\n        #returnfalse\n    #\n    #publicboolIsKeyUnlock(longunixtime)\n        #if(!this.IsKeyQuest()||!this.IsDateUnlock(unixtime))\n        #returnfalse\n        #returnfalse\n        #switch(keyQuestType)\n            #caseKeyQuestTypes.Timer:\n            #returnunixtime<this.key_end\n            #caseKeyQuestTypes.Count:\n                #if(this.quests[index].CheckEnableChallange())\n                #returntrue\n            #returnfalse\n            #default:\n            #returnfalse\n    #\n    #publicboolCheckHasKeyItem()\n            #if(this.keys[index].IsHasItem())\n            #returntrue\n        #returnfalse\nreturn this\n",
    "ChargeCheckResponse": "def ChargeCheckResponse(json):\n    this={}#ChargeCheckResponsejson)\n    #returnfalse\n    if 'age' in json:\n        this['Age'] = json['age']\n    if 'accept_ids' in json:\n        this['AcceptIds'] = json['accept_ids']\n    if 'reject_ids' in json:\n        this['RejectIds'] = json['reject_ids']\n    #returntrue\nreturn this\n",
    "ChatBlackList": "def ChatBlackList(json):\n    this={}#ChatBlackListjson)\n    #return\n        if 'blacklist' in json:\n            this['lists'] = newChatBlackListParam[json['blacklist'].Length]\n        if 'blacklist' in json:\n            this['lists[index]'] = json['blacklist'][index]\n    #else\n    if 'total' in json:\n        this['total'] = json['total']\nreturn this\n",
    "ChatBlackListRes": "def ChatBlackListRes(json):\n    this={}#ChatBlackListResjson)\n    #return\n    if 'is_success' in json:\n        this['is_success'] = json['is_success']\nreturn this\n",
    "ChatChannel": "def ChatChannel(json):\n    this={}#ChatChanneljson)\n    #return\n    if 'channels' in json:\n        this['channels'] = newChatChannelParam[json['channels'].Length]\n        if 'channels' in json:\n            this['channels[index]'] = json['channels'][index]\nreturn this\n",
    "ChatChannelAutoAssign": "def ChatChannelAutoAssign(json):\n    this={}#ChatChannelAutoAssignjson)\n    #return\n    if 'channel' in json:\n        this['channel'] = json['channel']\nreturn this\n",
    "ChatLog": "def ChatLog(json):\n    this={}#ChatLogjson)\n    #return\n    #this.messages.Clear()\n    #return\n    #this.messages.AddRange((IEnumerable<ChatLogParam>)json.messages)\nreturn this\n",
    "ChatPlayerData": "def ChatPlayerData(json):\n    this={}#ChatPlayerDatajson)\n    #return\n    if 'name' in json:\n        this['name'] = json['name']\n    if 'exp' in json:\n        this['exp'] = json['exp']\n    if 'lastlogin' in json:\n        this['lastlogin'] = json['lastlogin']\n    if 'fuid' in json:\n        this['fuid'] = json['fuid']\n    if 'is_friend' in json:\n        this['is_friend'] = json['is_friend']\n    if 'is_favorite' in json:\n        this['is_favorite'] = json['is_favorite']\n    if 'award' in json:\n        this['award'] = json['award']\n    #return\n    #unitData.Deserialize(json.unit)\nreturn this\n",
    "ChatSendRes": "def ChatSendRes(json):\n    this={}#ChatSendResjson)\n    #return\n    if 'is_success' in json:\n        this['is_success'] = json['is_success']\nreturn this\n",
    "ChatStampParam": "def ChatStampParam(json):\n    this={}#ChatStampParamjson)\n    #returnfalse\n    if 'fields' in json:\n        this['id'] = json['fields'].id\n    if 'fields' in json:\n        this['img_id'] = json['fields'].img_id\n    if 'fields' in json:\n        this['iname'] = json['fields'].iname\n    if 'fields' in json:\n        this['IsPrivate'] = json['fields'].is_private==1\n    #returntrue\nreturn this\n",
    "CollaboSkillParam": "def CollaboSkillParam(json):\n    this={}#CollaboSkillParamjson)\n    #return\n    if 'iname' in json:\n        this['mIname'] = json['iname']\n    if 'uname' in json:\n        this['mUnitIname'] = json['uname']\n    if 'abid' in json:\n        this['mAbilityIname'] = json['abid']\n    #this.mLearnSkillLists.Clear()\n    #return\n    #foreach(stringlqinjson.lqs)\n    #this.mLearnSkillLists.Add(newCollaboSkillParam.LearnSkill(lq))\nreturn this\n",
    "CondEffectParam": "def CondEffectParam(json):\n    this={}#CondEffectParamjson)\n    #returnfalse\n    if 'iname' in json:\n        this['iname'] = json['iname']\n    if 'job' in json:\n        this['job'] = json['job']\n    if 'buki' in json:\n        this['buki'] = json['buki']\n    if 'birth' in json:\n        this['birth'] = json['birth']\n    if 'sex' in json:\n        this['sex'] = ENUM['ESex'][json['sex']]\n    if 'elem' in json:\n        this['elem'] = ENUM['EElement'][json['elem']]\n    if 'cond' in json:\n        this['cond'] = ENUM['ESkillCondition'][json['cond']]\n    if 'type' in json:\n        this['type'] = ENUM['ConditionEffectTypes'][json['type']]\n    if 'chktgt' in json:\n        this['chk_target'] = ENUM['EffectCheckTargets'][json['chktgt']]\n    if 'timing' in json:\n        this['chk_timing'] = ENUM['EffectCheckTimings'][json['timing']]\n    if 'vini' in json:\n        this['value_ini'] = json['vini']\n    if 'vmax' in json:\n        this['value_max'] = json['vmax']\n    if 'rini' in json:\n        this['rate_ini'] = json['rini']\n    if 'rmax' in json:\n        this['rate_max'] = json['rmax']\n    if 'tini' in json:\n        this['turn_ini'] = json['tini']\n    if 'tmax' in json:\n        this['turn_max'] = json['tmax']\n    if 'curse' in json:\n        this['curse'] = json['curse']\n        if 'conds' in json:\n            this['conditions'] = newEUnitCondition[json['conds'].Length]\n            if 'conds' in json:\n                this['conditions[index]'] = ENUM['EUnitCondition'][json['conds']]\n    if 'v_poi' in json:\n        this['v_poison_rate'] = json['v_poi']\n    if 'v_poifix' in json:\n        this['v_poison_fix'] = json['v_poifix']\n    if 'v_par' in json:\n        this['v_paralyse_rate'] = json['v_par']\n    if 'v_blihit' in json:\n        this['v_blink_hit'] = json['v_blihit']\n    if 'v_bliavo' in json:\n        this['v_blink_avo'] = json['v_bliavo']\n    if 'v_dea' in json:\n        this['v_death_count'] = json['v_dea']\n    if 'v_beratk' in json:\n        this['v_berserk_atk'] = json['v_beratk']\n    if 'v_berdef' in json:\n        this['v_berserk_def'] = json['v_berdef']\n    if 'v_fast' in json:\n        this['v_fast'] = json['v_fast']\n    if 'v_slow' in json:\n        this['v_slow'] = json['v_slow']\n    if 'v_don' in json:\n        this['v_donmov'] = json['v_don']\n    if 'v_ahp' in json:\n        this['v_auto_hp_heal'] = json['v_ahp']\n    if 'v_amp' in json:\n        this['v_auto_mp_heal'] = json['v_amp']\n    if 'v_ahpfix' in json:\n        this['v_auto_hp_heal_fix'] = json['v_ahpfix']\n    if 'v_ampfix' in json:\n        this['v_auto_mp_heal_fix'] = json['v_ampfix']\n    #returntrue\nreturn this\n",
    "EvaluationParam": "def EvaluationParam(json):\n    this={}#EvaluationParamjson)\n    #returnfalse\n    if 'iname' in json:\n        this['iname'] = json['iname']\n    if 'val' in json:\n        this['value'] = json['val']\n    #this.status.Clear()\n    this['']\n    this['status']\n    if 'hp' in json:\n        this['status']['hp'] = json['hp']\n    this['status']\n    if 'mp' in json:\n        this['status']['mp'] = json['mp']\n    this['status']\n    if 'atk' in json:\n        this['status']['atk'] = json['atk']\n    this['status']\n    if 'def' in json:\n        this['status']['def'] = json['def']\n    this['status']\n    if 'mag' in json:\n        this['status']['mag'] = json['mag']\n    this['status']\n    if 'mnd' in json:\n        this['status']['mnd'] = json['mnd']\n    this['status']\n    if 'dex' in json:\n        this['status']['dex'] = json['dex']\n    this['status']\n    if 'spd' in json:\n        this['status']['spd'] = json['spd']\n    this['status']\n    if 'cri' in json:\n        this['status']['cri'] = json['cri']\n    this['status']\n    if 'luk' in json:\n        this['status']['luk'] = json['luk']\n    #returntrue\nreturn this\n",
    "EventShopItemListSet[]shopi": "def EventShopItemListSet[]shopi(json):\n    this={}#EventShopItemListSet[]shopitems)\n    #returntrue\n    #this.items.Clear()\n        #if(!eventShopItem.Deserialize(shopitems[index]))\n        #returnfalse\n        #this.items.Add(eventShopItem)\n    #returntrue\nreturn this\n",
    "EventShopItemListSet": "def EventShopItemListSet(json):\n    this={}#EventShopItemListSetjson)\n    #returnfalse\n    if 'id' in json:\n        this['id'] = json['id']\n    if 'item' in json:\n        this['iname'] = json['item'].iname\n    if 'item' in json:\n        this['num'] = json['item'].num\n    if 'item' in json:\n        this['max_num'] = json['item'].maxnum\n    if 'item' in json:\n        this['bougthnum'] = json['item'].boughtnum\n    if 'cost' in json:\n        this['saleValue'] = json['cost'].value\n    if 'cost' in json:\n        this['saleType'] = ShopData.String2SaleType\n    if 'cost' in json:\n        this['cost_iname'] = json['cost'].iname==null?GlobalVars.EventShopItem.shop_cost_iname:json['cost'].iname\n    #returnfalse\n    if 'isreset' in json:\n        this['is_reset'] = json['isreset']==1\n    if 'sold' in json:\n        this['is_soldout'] = json['sold']>0\n    if 'children' in json:\n        this['children'] = json['children']\n    #returntrue\nreturn this\n",
    "EventTrigger": "def EventTrigger(json):\n    this={}#EventTriggerjson)\n    #returnfalse\n    if 'trg' in json:\n        this['mTrigger'] = ENUM['EEventTrigger'][json['trg']]\n    if 'type' in json:\n        this['mEventType'] = ENUM['EEventType'][json['type']]\n    if 'detail' in json:\n        this['mGimmickType'] = ENUM['EEventGimmick'][json['detail']]\n    if 'sval' in json:\n        this['mStrValue'] = json['sval']\n    if 'ival' in json:\n        this['mIntValue'] = json['ival']\n    if 'cnt' in json:\n        this['mCount'] = json['cnt']\n    #returntrue\nreturn this\n",
    "FixParam": "def FixParam(json):\n    this={}#FixParamjson)\n    #returnfalse\n    if 'mulcri' in json:\n        this['CriticalRate_Cri_Multiply'] = json['mulcri']\n    if 'divcri' in json:\n        this['CriticalRate_Cri_Division'] = json['divcri']\n    if 'mulluk' in json:\n        this['CriticalRate_Luk_Multiply'] = json['mulluk']\n    if 'divluk' in json:\n        this['CriticalRate_Luk_Division'] = json['divluk']\n    if 'mincri' in json:\n        this['MinCriticalDamageRate'] = json['mincri']\n    if 'maxcri' in json:\n        this['MaxCriticalDamageRate'] = json['maxcri']\n    if 'hatk' in json:\n        this['HighGridAtkRate'] = json['hatk']\n    if 'hdef' in json:\n        this['HighGridDefRate'] = json['hdef']\n    if 'hcri' in json:\n        this['HighGridCriRate'] = json['hcri']\n    if 'datk' in json:\n        this['DownGridAtkRate'] = json['datk']\n    if 'ddef' in json:\n        this['DownGridDefRate'] = json['ddef']\n    if 'dcri' in json:\n        this['DownGridCriRate'] = json['dcri']\n    if 'paralyse' in json:\n        this['ParalysedRate'] = json['paralyse']\n    if 'poi_rate' in json:\n        this['PoisonDamageRate'] = json['poi_rate']\n    if 'bli_hit' in json:\n        this['BlindnessHitRate'] = json['bli_hit']\n    if 'bli_avo' in json:\n        this['BlindnessAvoidRate'] = json['bli_avo']\n    if 'ber_atk' in json:\n        this['BerserkAtkRate'] = json['ber_atk']\n    if 'ber_def' in json:\n        this['BerserkDefRate'] = json['ber_def']\n    if 'tk_rate' in json:\n        this['TokkouDamageRate'] = json['tk_rate']\n    if 'abilupcoin' in json:\n        this['AbilityRankUpCountCoin'] = json['abilupcoin']\n    if 'abilupmax' in json:\n        this['AbilityRankUpCountMax'] = json['abilupmax']\n    if 'abiluprec' in json:\n        this['AbilityRankUpCountRecoveryVal'] = json['abiluprec']\n    if 'abilupsec' in json:\n        this['AbilityRankUpCountRecoverySec'] = ((long)json['abilupsec'])\n    if 'stmncoin' in json:\n        this['StaminaRecoveryCoin'] = json['stmncoin']\n    if 'stmnrec' in json:\n        this['StaminaRecoveryVal'] = json['stmnrec']\n    if 'stmnsec' in json:\n        this['StaminaRecoverySec'] = ((long)json['stmnsec'])\n    if 'stmncap' in json:\n        this['StaminaStockCap'] = json['stmncap']\n    if 'stmnadd' in json:\n        this['StaminaAdd'] = json['stmnadd']\n    if 'stmnadd2' in json:\n        this['StaminaAdd2'] = json['stmnadd2']\n        if 'stmncost' in json:\n            this['StaminaAddCost'] = newOInt[json['stmncost'].Length]\n        if 'stmncost' in json:\n            this['StaminaAddCost[index]'] = json['stmncost'][index]\n    if 'cavemax' in json:\n        this['CaveStaminaMax'] = json['cavemax']\n    if 'caverec' in json:\n        this['CaveStaminaRecoveryVal'] = json['caverec']\n    if 'cavesec' in json:\n        this['CaveStaminaRecoverySec'] = ((long)json['cavesec'])\n    if 'cavecap' in json:\n        this['CaveStaminaStockCap'] = json['cavecap']\n    if 'caveadd' in json:\n        this['CaveStaminaAdd'] = json['caveadd']\n        if 'cavecost' in json:\n            this['CaveStaminaAddCost'] = newOInt[json['cavecost'].Length]\n        if 'cavecost' in json:\n            this['CaveStaminaAddCost[index]'] = json['cavecost'][index]\n    if 'arenamax' in json:\n        this['ChallengeArenaMax'] = json['arenamax']\n    if 'arenasec' in json:\n        this['ChallengeArenaCoolDownSec'] = ((long)json['arenasec'])\n    if 'arenamedal' in json:\n        this['ArenaMedalMultipler'] = json['arenamedal']\n    if 'arenacoin' in json:\n        this['ArenaCoinRewardMultipler'] = json['arenacoin']\n    if 'arenaccost' in json:\n        this['ArenaResetCooldownCost'] = json['arenaccost']\n        if 'arenatcost' in json:\n            this['ArenaResetTicketCost'] = newOInt[json['arenatcost'].Length]\n        if 'arenatcost' in json:\n            this['ArenaResetTicketCost[index]'] = json['arenatcost'][index]\n    if 'tourmax' in json:\n        this['ChallengeTourMax'] = json['tourmax']\n    if 'multimax' in json:\n        this['ChallengeMultiMax'] = json['multimax']\n    if 'awakerate' in json:\n        this['AwakeRate'] = json['awakerate']\n    if 'na_gems' in json:\n        this['GemsGainNormalAttack'] = json['na_gems']\n    if 'sa_gems' in json:\n        this['GemsGainSideAttack'] = json['sa_gems']\n    if 'ba_gems' in json:\n        this['GemsGainBackAttack'] = json['ba_gems']\n    if 'wa_gems' in json:\n        this['GemsGainWeakAttack'] = json['wa_gems']\n    if 'ca_gems' in json:\n        this['GemsGainCriticalAttack'] = json['ca_gems']\n    if 'ki_gems' in json:\n        this['GemsGainKillBonus'] = json['ki_gems']\n    if 'di_gems_floor' in json:\n        this['GemsGainDiffFloorCount'] = json['di_gems_floor']\n    if 'di_gems_max' in json:\n        this['GemsGainDiffFloorMax'] = json['di_gems_max']\n    if 'elem_up' in json:\n        this['ElementResistUpRate'] = json['elem_up']\n    if 'elem_down' in json:\n        this['ElementResistDownRate'] = json['elem_down']\n    if 'gems_gain' in json:\n        this['GemsGainValue'] = json['gems_gain']\n    if 'gems_buff' in json:\n        this['GemsBuffValue'] = json['gems_buff']\n    if 'gems_buff_turn' in json:\n        this['GemsBuffTurn'] = json['gems_buff_turn']\n    if 'continue_cost' in json:\n        this['ContinueCoinCost'] = json['continue_cost']\n    if 'continue_cost_multi' in json:\n        this['ContinueCoinCostMulti'] = json['continue_cost_multi']\n    if 'continue_cost_multitower' in json:\n        this['ContinueCoinCostMultiTower'] = json['continue_cost_multitower']\n    if 'avoid_rate' in json:\n        this['AvoidBaseRate'] = json['avoid_rate']\n    if 'avoid_scale' in json:\n        this['AvoidParamScale'] = json['avoid_scale']\n    if 'avoid_rate_max' in json:\n        this['MaxAvoidRate'] = json['avoid_rate_max']\n        if 'shop_update_time' in json:\n            this['ShopUpdateTime'] = newOInt[json['shop_update_time'].Length]\n        if 'shop_update_time' in json:\n            this['ShopUpdateTime[index]'] = json['shop_update_time'][index]\n        if 'products' in json:\n            this['Products'] = newOString[json['products'].Length]\n        if 'products' in json:\n            this['Products[index]'] = json['products'][index]\n    if 'vip_product' in json:\n        this['VipCardProduct'] = json['vip_product']\n    if 'vip_date' in json:\n        this['VipCardDate'] = json['vip_date']\n    if 'ggmax' in json:\n        this['FreeGachaGoldMax'] = json['ggmax']\n    if 'ggsec' in json:\n        this['FreeGachaGoldCoolDownSec'] = ((long)json['ggsec'])\n    if 'cgsec' in json:\n        this['FreeGachaCoinCoolDownSec'] = ((long)json['cgsec'])\n    if 'buygoldcost' in json:\n        this['BuyGoldCost'] = json['buygoldcost']\n    if 'buygold' in json:\n        this['BuyGoldAmount'] = json['buygold']\n    if 'sp_cost' in json:\n        this['SupportCost'] = json['sp_cost']\n    if 'elitemax' in json:\n        this['ChallengeEliteMax'] = json['elitemax']\n    if 'elite_reset_max' in json:\n        this['EliteResetMax'] = json['elite_reset_max']\n        if 'elite_reset_cost' in json:\n            this['EliteResetCosts'] = newOInt[json['elite_reset_cost'].Length]\n        if 'elite_reset_cost' in json:\n            this['EliteResetCosts[index]'] = json['elite_reset_cost'][index]\n    #if(!this.DefaultCondTurns.ContainsKey(EUnitCondition.Poison))\n    #this.DefaultCondTurns.Add(EUnitCondition.Poison,(OInt)0)\n    #if(!this.DefaultCondTurns.ContainsKey(EUnitCondition.Paralysed))\n    #this.DefaultCondTurns.Add(EUnitCondition.Paralysed,(OInt)0)\n    #if(!this.DefaultCondTurns.ContainsKey(EUnitCondition.Stun))\n    #this.DefaultCondTurns.Add(EUnitCondition.Stun,(OInt)0)\n    #if(!this.DefaultCondTurns.ContainsKey(EUnitCondition.Sleep))\n    #this.DefaultCondTurns.Add(EUnitCondition.Sleep,(OInt)0)\n    #if(!this.DefaultCondTurns.ContainsKey(EUnitCondition.Charm))\n    #this.DefaultCondTurns.Add(EUnitCondition.Charm,(OInt)0)\n    #if(!this.DefaultCondTurns.ContainsKey(EUnitCondition.Stone))\n    #this.DefaultCondTurns.Add(EUnitCondition.Stone,(OInt)0)\n    #if(!this.DefaultCondTurns.ContainsKey(EUnitCondition.Blindness))\n    #this.DefaultCondTurns.Add(EUnitCondition.Blindness,(OInt)0)\n    #if(!this.DefaultCondTurns.ContainsKey(EUnitCondition.DisableSkill))\n    #this.DefaultCondTurns.Add(EUnitCondition.DisableSkill,(OInt)0)\n    #if(!this.DefaultCondTurns.ContainsKey(EUnitCondition.DisableMove))\n    #this.DefaultCondTurns.Add(EUnitCondition.DisableMove,(OInt)0)\n    #if(!this.DefaultCondTurns.ContainsKey(EUnitCondition.DisableAttack))\n    #this.DefaultCondTurns.Add(EUnitCondition.DisableAttack,(OInt)0)\n    #if(!this.DefaultCondTurns.ContainsKey(EUnitCondition.Zombie))\n    #this.DefaultCondTurns.Add(EUnitCondition.Zombie,(OInt)0)\n    #if(!this.DefaultCondTurns.ContainsKey(EUnitCondition.DeathSentence))\n    #this.DefaultCondTurns.Add(EUnitCondition.DeathSentence,(OInt)0)\n    #if(!this.DefaultCondTurns.ContainsKey(EUnitCondition.Berserk))\n    #this.DefaultCondTurns.Add(EUnitCondition.Berserk,(OInt)0)\n    #if(!this.DefaultCondTurns.ContainsKey(EUnitCondition.DisableKnockback))\n    #this.DefaultCondTurns.Add(EUnitCondition.DisableKnockback,(OInt)0)\n    #if(!this.DefaultCondTurns.ContainsKey(EUnitCondition.DisableBuff))\n    #this.DefaultCondTurns.Add(EUnitCondition.DisableBuff,(OInt)0)\n    #if(!this.DefaultCondTurns.ContainsKey(EUnitCondition.DisableDebuff))\n    #this.DefaultCondTurns.Add(EUnitCondition.DisableDebuff,(OInt)0)\n    #if(!this.DefaultCondTurns.ContainsKey(EUnitCondition.Stop))\n    #this.DefaultCondTurns.Add(EUnitCondition.Stop,(OInt)0)\n    #if(!this.DefaultCondTurns.ContainsKey(EUnitCondition.Fast))\n    #this.DefaultCondTurns.Add(EUnitCondition.Fast,(OInt)0)\n    #if(!this.DefaultCondTurns.ContainsKey(EUnitCondition.Slow))\n    #this.DefaultCondTurns.Add(EUnitCondition.Slow,(OInt)0)\n    #if(!this.DefaultCondTurns.ContainsKey(EUnitCondition.AutoHeal))\n    #this.DefaultCondTurns.Add(EUnitCondition.AutoHeal,(OInt)0)\n    #if(!this.DefaultCondTurns.ContainsKey(EUnitCondition.Donsoku))\n    #this.DefaultCondTurns.Add(EUnitCondition.Donsoku,(OInt)0)\n    #if(!this.DefaultCondTurns.ContainsKey(EUnitCondition.Rage))\n    #this.DefaultCondTurns.Add(EUnitCondition.Rage,(OInt)0)\n    #if(!this.DefaultCondTurns.ContainsKey(EUnitCondition.GoodSleep))\n    #this.DefaultCondTurns.Add(EUnitCondition.GoodSleep,(OInt)0)\n    #if(!this.DefaultCondTurns.ContainsKey(EUnitCondition.AutoJewel))\n    #this.DefaultCondTurns.Add(EUnitCondition.AutoJewel,(OInt)0)\n    #if(!this.DefaultCondTurns.ContainsKey(EUnitCondition.DisableHeal))\n    #this.DefaultCondTurns.Add(EUnitCondition.DisableHeal,(OInt)0)\n    #if(!this.DefaultCondTurns.ContainsKey(EUnitCondition.DisableSingleAttack))\n    #this.DefaultCondTurns.Add(EUnitCondition.DisableSingleAttack,(OInt)0)\n    #if(!this.DefaultCondTurns.ContainsKey(EUnitCondition.DisableAreaAttack))\n    #this.DefaultCondTurns.Add(EUnitCondition.DisableAreaAttack,(OInt)0)\n    #if(!this.DefaultCondTurns.ContainsKey(EUnitCondition.DisableDecCT))\n    #this.DefaultCondTurns.Add(EUnitCondition.DisableDecCT,(OInt)0)\n    #if(!this.DefaultCondTurns.ContainsKey(EUnitCondition.DisableIncCT))\n    #this.DefaultCondTurns.Add(EUnitCondition.DisableIncCT,(OInt)0)\n    this['']\n    this['DefaultCondTurns[EUnitCondition']\n    if 'ct_poi' in json:\n        this['DefaultCondTurns[EUnitCondition']['Poison]'] = json['ct_poi']\n    this['DefaultCondTurns[EUnitCondition']\n    if 'ct_par' in json:\n        this['DefaultCondTurns[EUnitCondition']['Paralysed]'] = json['ct_par']\n    this['DefaultCondTurns[EUnitCondition']\n    if 'ct_stu' in json:\n        this['DefaultCondTurns[EUnitCondition']['Stun]'] = json['ct_stu']\n    this['DefaultCondTurns[EUnitCondition']\n    if 'ct_sle' in json:\n        this['DefaultCondTurns[EUnitCondition']['Sleep]'] = json['ct_sle']\n    this['DefaultCondTurns[EUnitCondition']\n    if 'st_cha' in json:\n        this['DefaultCondTurns[EUnitCondition']['Charm]'] = json['st_cha']\n    this['DefaultCondTurns[EUnitCondition']\n    if 'ct_sto' in json:\n        this['DefaultCondTurns[EUnitCondition']['Stone]'] = json['ct_sto']\n    this['DefaultCondTurns[EUnitCondition']\n    if 'ct_bli' in json:\n        this['DefaultCondTurns[EUnitCondition']['Blindness]'] = json['ct_bli']\n    this['DefaultCondTurns[EUnitCondition']\n    if 'ct_dsk' in json:\n        this['DefaultCondTurns[EUnitCondition']['DisableSkill]'] = json['ct_dsk']\n    this['DefaultCondTurns[EUnitCondition']\n    if 'ct_dmo' in json:\n        this['DefaultCondTurns[EUnitCondition']['DisableMove]'] = json['ct_dmo']\n    this['DefaultCondTurns[EUnitCondition']\n    if 'ct_dat' in json:\n        this['DefaultCondTurns[EUnitCondition']['DisableAttack]'] = json['ct_dat']\n    this['DefaultCondTurns[EUnitCondition']\n    if 'ct_zom' in json:\n        this['DefaultCondTurns[EUnitCondition']['Zombie]'] = json['ct_zom']\n    this['DefaultCondTurns[EUnitCondition']\n    if 'ct_dea' in json:\n        this['DefaultCondTurns[EUnitCondition']['DeathSentence]'] = json['ct_dea']\n    this['DefaultCondTurns[EUnitCondition']\n    if 'ct_ber' in json:\n        this['DefaultCondTurns[EUnitCondition']['Berserk]'] = json['ct_ber']\n    this['DefaultCondTurns[EUnitCondition']\n    if 'ct_dkn' in json:\n        this['DefaultCondTurns[EUnitCondition']['DisableKnockback]'] = json['ct_dkn']\n    this['DefaultCondTurns[EUnitCondition']\n    if 'ct_dbu' in json:\n        this['DefaultCondTurns[EUnitCondition']['DisableBuff]'] = json['ct_dbu']\n    this['DefaultCondTurns[EUnitCondition']\n    if 'ct_ddb' in json:\n        this['DefaultCondTurns[EUnitCondition']['DisableDebuff]'] = json['ct_ddb']\n    this['DefaultCondTurns[EUnitCondition']\n    if 'ct_stop' in json:\n        this['DefaultCondTurns[EUnitCondition']['Stop]'] = json['ct_stop']\n    this['DefaultCondTurns[EUnitCondition']\n    if 'ct_fast' in json:\n        this['DefaultCondTurns[EUnitCondition']['Fast]'] = json['ct_fast']\n    this['DefaultCondTurns[EUnitCondition']\n    if 'ct_slow' in json:\n        this['DefaultCondTurns[EUnitCondition']['Slow]'] = json['ct_slow']\n    this['DefaultCondTurns[EUnitCondition']\n    if 'ct_ahe' in json:\n        this['DefaultCondTurns[EUnitCondition']['AutoHeal]'] = json['ct_ahe']\n    this['DefaultCondTurns[EUnitCondition']\n    if 'ct_don' in json:\n        this['DefaultCondTurns[EUnitCondition']['Donsoku]'] = json['ct_don']\n    this['DefaultCondTurns[EUnitCondition']\n    if 'ct_rag' in json:\n        this['DefaultCondTurns[EUnitCondition']['Rage]'] = json['ct_rag']\n    this['DefaultCondTurns[EUnitCondition']\n    if 'ct_gsl' in json:\n        this['DefaultCondTurns[EUnitCondition']['GoodSleep]'] = json['ct_gsl']\n    this['DefaultCondTurns[EUnitCondition']\n    if 'ct_aje' in json:\n        this['DefaultCondTurns[EUnitCondition']['AutoJewel]'] = json['ct_aje']\n    this['DefaultCondTurns[EUnitCondition']\n    if 'ct_dhe' in json:\n        this['DefaultCondTurns[EUnitCondition']['DisableHeal]'] = json['ct_dhe']\n    this['DefaultCondTurns[EUnitCondition']\n    if 'ct_dsa' in json:\n        this['DefaultCondTurns[EUnitCondition']['DisableSingleAttack]'] = json['ct_dsa']\n    this['DefaultCondTurns[EUnitCondition']\n    if 'ct_daa' in json:\n        this['DefaultCondTurns[EUnitCondition']['DisableAreaAttack]'] = json['ct_daa']\n    this['DefaultCondTurns[EUnitCondition']\n    if 'ct_ddc' in json:\n        this['DefaultCondTurns[EUnitCondition']['DisableDecCT]'] = json['ct_ddc']\n    this['DefaultCondTurns[EUnitCondition']\n    if 'ct_dic' in json:\n        this['DefaultCondTurns[EUnitCondition']['DisableIncCT]'] = json['ct_dic']\n    if 'yuragi' in json:\n        this['RandomEffectMax'] = json['yuragi']\n    if 'ct_max' in json:\n        this['ChargeTimeMax'] = json['ct_max']\n    if 'ct_wait' in json:\n        this['ChargeTimeDecWait'] = json['ct_wait']\n    if 'ct_mov' in json:\n        this['ChargeTimeDecMove'] = json['ct_mov']\n    if 'ct_act' in json:\n        this['ChargeTimeDecAction'] = json['ct_act']\n    if 'hit_side' in json:\n        this['AddHitRateSide'] = json['hit_side']\n    if 'hit_back' in json:\n        this['AddHitRateBack'] = json['hit_back']\n    if 'ahhp_rate' in json:\n        this['HpAutoHealRate'] = json['ahhp_rate']\n    if 'ahmp_rate' in json:\n        this['MpAutoHealRate'] = json['ahmp_rate']\n    if 'gshp_rate' in json:\n        this['GoodSleepHpHealRate'] = json['gshp_rate']\n    if 'gsmp_rate' in json:\n        this['GoodSleepMpHealRate'] = json['gsmp_rate']\n    if 'dy_rate' in json:\n        this['HpDyingRate'] = json['dy_rate']\n    if 'zsup_rate' in json:\n        this['ZeneiSupportSkillRate'] = json['zsup_rate']\n    if 'beginner_days' in json:\n        this['BeginnerDays'] = json['beginner_days']\n    if 'afcap' in json:\n        this['ArtifactBoxCap'] = json['afcap']\n    if 'cmn_pi_fire' in json:\n        this['CommonPieceFire'] = json['cmn_pi_fire']\n    if 'cmn_pi_water' in json:\n        this['CommonPieceWater'] = json['cmn_pi_water']\n    if 'cmn_pi_thunder' in json:\n        this['CommonPieceThunder'] = json['cmn_pi_thunder']\n    if 'cmn_pi_wind' in json:\n        this['CommonPieceWind'] = json['cmn_pi_wind']\n    if 'cmn_pi_shine' in json:\n        this['CommonPieceShine'] = json['cmn_pi_shine']\n    if 'cmn_pi_dark' in json:\n        this['CommonPieceDark'] = json['cmn_pi_dark']\n    if 'cmn_pi_all' in json:\n        this['CommonPieceAll'] = json['cmn_pi_all']\n    if 'ptnum_nml' in json:\n        this['PartyNumNormal'] = json['ptnum_nml']\n    if 'ptnum_evnt' in json:\n        this['PartyNumEvent'] = json['ptnum_evnt']\n    if 'ptnum_mlt' in json:\n        this['PartyNumMulti'] = json['ptnum_mlt']\n    if 'ptnum_aatk' in json:\n        this['PartyNumArenaAttack'] = json['ptnum_aatk']\n    if 'ptnum_adef' in json:\n        this['PartyNumArenaDefense'] = json['ptnum_adef']\n    if 'ptnum_chq' in json:\n        this['PartyNumChQuest'] = json['ptnum_chq']\n    if 'ptnum_tow' in json:\n        this['PartyNumTower'] = json['ptnum_tow']\n    if 'ptnum_vs' in json:\n        this['PartyNumVersus'] = json['ptnum_vs']\n    if 'ptnum_mt' in json:\n        this['PartyNumMultiTower'] = json['ptnum_mt']\n    if 'notsus' in json:\n        this['IsDisableSuspend'] = (json['notsus']!=0)\n    if 'sus_int' in json:\n        this['SuspendSaveInterval'] = json['sus_int']\n    if 'jobms' in json:\n        this['IsJobMaster'] = json['jobms']!=0\n    if 'death_count' in json:\n        this['DefaultDeathCount'] = json['death_count']\n    if 'fast_val' in json:\n        this['DefaultClockUpValue'] = json['fast_val']\n    if 'slow_val' in json:\n        this['DefaultClockDownValue'] = json['slow_val']\n        if 'equip_artifact_slot_unlock' in json:\n            this['EquipArtifactSlotUnlock'] = newOInt[json['equip_artifact_slot_unlock'].Length]\n        if 'equip_artifact_slot_unlock' in json:\n            this['EquipArtifactSlotUnlock[index]'] = json['equip_artifact_slot_unlock'][index]\n    if 'kb_gh' in json:\n        this['KnockBackHeight'] = json['kb_gh']\n    if 'th_gh' in json:\n        this['ThrowHeight'] = json['th_gh']\n        if 'art_rare_pi' in json:\n            this['ArtifactRarePiece'] = newOString[json['art_rare_pi'].Length]\n        if 'art_rare_pi' in json:\n            this['ArtifactRarePiece[index]'] = json['art_rare_pi'][index]\n    if 'art_cmn_pi' in json:\n        this['ArtifactCommonPiece'] = json['art_cmn_pi']\n    if 'soul_rare' in json:\n        this['SoulCommonPiece'] = this.ConvertOStringArray\n    if 'equ_rare_pi' in json:\n        this['EquipCommonPiece'] = this.ConvertOStringArray\n    if 'equ_rare_pi_use' in json:\n        this['EquipCommonPieceNum'] = this.ConvertOIntArray\n    if 'equ_rare_cost' in json:\n        this['EquipCommonPieceCost'] = this.ConvertOIntArray\n    if 'equip_cmn' in json:\n        this['EquipCmn'] = this.ConvertOStringArray\n    if 'aud_max' in json:\n        this['AudienceMax'] = json['aud_max']\n    if 'ab_rankup_max' in json:\n        this['AbilityRankUpPointMax'] = json['ab_rankup_max']\n    if 'ab_rankup_addmax' in json:\n        this['AbilityRankUpPointAddMax'] = json['ab_rankup_addmax']\n    if 'ab_coin_convert' in json:\n        this['AbilityRankupPointCoinRate'] = json['ab_coin_convert']\n    if 'firstfriend_max' in json:\n        this['FirstFriendMax'] = json['firstfriend_max']\n    if 'firstfriend_coin' in json:\n        this['FirstFriendCoin'] = json['firstfriend_coin']\n    if 'cmb_rate' in json:\n        this['CombinationRate'] = json['cmb_rate']\n    if 'weak_up' in json:\n        this['WeakUpRate'] = json['weak_up']\n    if 'resist_dw' in json:\n        this['ResistDownRate'] = json['resist_dw']\n    #returntrue\nreturn this\n",
    "ReqTowerResuponse": "def ReqTowerResuponse(json):\n    this={}#ReqTowerResuponsejson)\n    #towerResuponse.Deserialize(json)\nreturn this\n",
    "FriendPresentItemParam": "def FriendPresentItemParam(json):\n    this={}#FriendPresentItemParamjson)\n    #thrownewInvalidJSONException()\n    if 'iname' in json:\n        this['m_Id'] = json['iname']\n    if 'name' in json:\n        this['m_Name'] = json['name']\n    if 'expr' in json:\n        this['m_Expr'] = json['expr']\n    #if(!string.IsNullOrEmpty(json.item)&&UnityEngine.Object.op_Inequality((UnityEngine.Object)MonoSingleton<GameManager>.Instance,(UnityEngine.Object)null))\n    if 'item' in json:\n        this['m_Item'] = MonoSingleton<GameManager>.Instance.GetItemParam\n    if 'num' in json:\n        this['m_Num'] = json['num']\n    if 'zeny' in json:\n        this['m_Zeny'] = json['zeny']\n    #try\n        #if(!string.IsNullOrEmpty(json.begin_at))\n        if 'begin_at' in json:\n            this['m_BeginAt'] = TimeManager.GetUnixSec)\n        #if(!string.IsNullOrEmpty(json.end_at))\n        if 'end_at' in json:\n            this['m_EndAt'] = TimeManager.GetUnixSec)\n        #return\n    #catch(Exceptionex)\n        #DebugUtility.LogError(ex.ToString())\nreturn this\n",
    "MasterParam": "def MasterParam(json):\n    this={}#MasterParamjson)\n    #if(this.Loaded)\n    #returntrue\n    #DebugUtility.Verify((object)json,typeof(JSON_MasterParam))\n    #this.mFixParam.Deserialize(json.Fix[0])\n        if 'Unit' in json:\n            this['mUnitParam'] = newList<UnitParam>\n        if 'Unit' in json:\n            this['mUnitDictionary'] = newDictionary<string,UnitParam>\n            #//ISSUE:objectofacompiler-generatedtypeiscreated\n            #//ISSUE:variableofacompiler-generatedtype\n            #//ISSUE:referencetoacompiler-generatedfield\n            #//ISSUE:referencetoacompiler-generatedmethod\n                #this.mUnitParam.Add(unitParam)\n            #//ISSUE:referencetoacompiler-generatedfield\n            #unitParam.Deserialize(deserializeCAnonStorey21B.data)\n            #//ISSUE:referencetoacompiler-generatedfield\n            #if(this.mUnitDictionary.ContainsKey(deserializeCAnonStorey21B.data.iname))\n                #//ISSUE:referencetoacompiler-generatedfield\n                #thrownewException(\"重複エラー：Unit[\"+deserializeCAnonStorey21B.data.iname+\"]\")\n            #//ISSUE:referencetoacompiler-generatedfield\n            #this.mUnitDictionary.Add(deserializeCAnonStorey21B.data.iname,unitParam)\n        if 'Skill' in json:\n            this['mSkillParam'] = newList<SkillParam>\n        if 'Skill' in json:\n            this['mSkillDictionary'] = newDictionary<string,SkillParam>\n            #//ISSUE:objectofacompiler-generatedtypeiscreated\n            #//ISSUE:variableofacompiler-generatedtype\n            #//ISSUE:referencetoacompiler-generatedfield\n            #//ISSUE:referencetoacompiler-generatedmethod\n                #this.mSkillParam.Add(skillParam)\n            #//ISSUE:referencetoacompiler-generatedfield\n            #skillParam.Deserialize(deserializeCAnonStorey21C.data)\n            #//ISSUE:referencetoacompiler-generatedfield\n            #if(this.mSkillDictionary.ContainsKey(deserializeCAnonStorey21C.data.iname))\n                #//ISSUE:referencetoacompiler-generatedfield\n                #thrownewException(\"重複エラー：Skill[\"+deserializeCAnonStorey21C.data.iname+\"]\")\n            #//ISSUE:referencetoacompiler-generatedfield\n            #this.mSkillDictionary.Add(deserializeCAnonStorey21C.data.iname,skillParam)\n        #SkillParam.UpdateReplaceSkill(this.mSkillParam)\n        if 'Buff' in json:\n            this['mBuffEffectParam'] = newList<BuffEffectParam>\n            #//ISSUE:objectofacompiler-generatedtypeiscreated\n            #//ISSUE:variableofacompiler-generatedtype\n            #//ISSUE:referencetoacompiler-generatedfield\n            #//ISSUE:referencetoacompiler-generatedmethod\n                #this.mBuffEffectParam.Add(buffEffectParam)\n            #//ISSUE:referencetoacompiler-generatedfield\n            #buffEffectParam.Deserialize(deserializeCAnonStorey21D.data)\n        if 'Cond' in json:\n            this['mCondEffectParam'] = newList<CondEffectParam>\n            #//ISSUE:objectofacompiler-generatedtypeiscreated\n            #//ISSUE:variableofacompiler-generatedtype\n            #//ISSUE:referencetoacompiler-generatedfield\n            #//ISSUE:referencetoacompiler-generatedmethod\n                #this.mCondEffectParam.Add(condEffectParam)\n            #//ISSUE:referencetoacompiler-generatedfield\n            #condEffectParam.Deserialize(deserializeCAnonStorey21E.data)\n        if 'Ability' in json:\n            this['mAbilityParam'] = newList<AbilityParam>\n        if 'Ability' in json:\n            this['mAbilityDictionary'] = newDictionary<string,AbilityParam>\n            #//ISSUE:objectofacompiler-generatedtypeiscreated\n            #//ISSUE:variableofacompiler-generatedtype\n            #//ISSUE:referencetoacompiler-generatedfield\n            #//ISSUE:referencetoacompiler-generatedmethod\n                #this.mAbilityParam.Add(abilityParam)\n            #//ISSUE:referencetoacompiler-generatedfield\n            #abilityParam.Deserialize(deserializeCAnonStorey21F.data)\n            #//ISSUE:referencetoacompiler-generatedfield\n            #if(this.mAbilityDictionary.ContainsKey(deserializeCAnonStorey21F.data.iname))\n                #//ISSUE:referencetoacompiler-generatedfield\n                #thrownewException(\"重複エラー：Ability[\"+deserializeCAnonStorey21F.data.iname+\"]\")\n            #//ISSUE:referencetoacompiler-generatedfield\n            #this.mAbilityDictionary.Add(deserializeCAnonStorey21F.data.iname,abilityParam)\n        if 'Item' in json:\n            this['mItemParam'] = newList<ItemParam>\n        if 'Item' in json:\n            this['mItemDictionary'] = newDictionary<string,ItemParam>\n            #//ISSUE:objectofacompiler-generatedtypeiscreated\n            #//ISSUE:variableofacompiler-generatedtype\n            #//ISSUE:referencetoacompiler-generatedfield\n            #//ISSUE:referencetoacompiler-generatedmethod\n                #this.mItemParam.Add(itemParam)\n            #//ISSUE:referencetoacompiler-generatedfield\n            #itemParam.Deserialize(deserializeCAnonStorey220.data)\n            #//ISSUE:referencetoacompiler-generatedfield\n            #if(this.mItemDictionary.ContainsKey(deserializeCAnonStorey220.data.iname))\n                #//ISSUE:referencetoacompiler-generatedfield\n                #thrownewException(\"重複エラー：Item[\"+deserializeCAnonStorey220.data.iname+\"]\")\n            #//ISSUE:referencetoacompiler-generatedfield\n            #this.mItemDictionary.Add(deserializeCAnonStorey220.data.iname,itemParam)\n        #this.AddUnitToItem()\n        if 'Artifact' in json:\n            this['mArtifactParam'] = newList<ArtifactParam>\n        if 'Artifact' in json:\n            this['mArtifactDictionary'] = newDictionary<string,ArtifactParam>\n            #//ISSUE:objectofacompiler-generatedtypeiscreated\n            #//ISSUE:variableofacompiler-generatedtype\n            #//ISSUE:referencetoacompiler-generatedfield\n            #//ISSUE:referencetoacompiler-generatedfield\n                #//ISSUE:referencetoacompiler-generatedmethod\n                    #this.mArtifactParam.Add(artifactParam)\n                #//ISSUE:referencetoacompiler-generatedfield\n                #artifactParam.Deserialize(deserializeCAnonStorey221.data)\n                #//ISSUE:referencetoacompiler-generatedfield\n                #if(this.mArtifactDictionary.ContainsKey(deserializeCAnonStorey221.data.iname))\n                    #//ISSUE:referencetoacompiler-generatedfield\n                    #thrownewException(\"重複エラー：Artifact[\"+deserializeCAnonStorey221.data.iname+\"]\")\n                #//ISSUE:referencetoacompiler-generatedfield\n                #this.mArtifactDictionary.Add(deserializeCAnonStorey221.data.iname,artifactParam)\n        if 'Weapon' in json:\n            this['mWeaponParam'] = newList<WeaponParam>\n            #//ISSUE:objectofacompiler-generatedtypeiscreated\n            #//ISSUE:variableofacompiler-generatedtype\n            #//ISSUE:referencetoacompiler-generatedfield\n            #//ISSUE:referencetoacompiler-generatedmethod\n                #this.mWeaponParam.Add(weaponParam)\n            #//ISSUE:referencetoacompiler-generatedfield\n            #weaponParam.Deserialize(deserializeCAnonStorey222.data)\n        if 'Recipe' in json:\n            this['mRecipeParam'] = newList<RecipeParam>\n            #this.mRecipeParam.Add(recipeParam)\n            #recipeParam.Deserialize(json1)\n        if 'Job' in json:\n            this['mJobParam'] = newList<JobParam>\n            #//ISSUE:objectofacompiler-generatedtypeiscreated\n            #//ISSUE:variableofacompiler-generatedtype\n            #//ISSUE:referencetoacompiler-generatedfield\n            #//ISSUE:referencetoacompiler-generatedmethod\n                #this.mJobParam.Add(jobParam)\n                #//ISSUE:referencetoacompiler-generatedfield\n            #//ISSUE:referencetoacompiler-generatedfield\n            #jobParam.Deserialize(deserializeCAnonStorey223.data)\n        if 'JobSet' in json:\n            this['mJobSetParam'] = newList<JobSetParam>\n        if 'Unit' in json:\n            this['mJobsetDictionary'] = newDictionary<string,List<JobSetParam>>\n            #//ISSUE:objectofacompiler-generatedtypeiscreated\n            #//ISSUE:variableofacompiler-generatedtype\n            #//ISSUE:referencetoacompiler-generatedfield\n            #//ISSUE:referencetoacompiler-generatedmethod\n                #this.mJobSetParam.Add(jobSetParam)\n            #//ISSUE:referencetoacompiler-generatedfield\n            #jobSetParam.Deserialize(deserializeCAnonStorey224.data)\n            #if(!string.IsNullOrEmpty(jobSetParam.target_unit))\n                #List<JobSetParam>jobSetParamList\n                #if(this.mJobsetDictionary.ContainsKey(jobSetParam.target_unit))\n                #else\n                    #this.mJobsetDictionary.Add(jobSetParam.target_unit,jobSetParamList)\n                #jobSetParamList.Add(jobSetParam)\n        if 'Grow' in json:\n            this['mGrowParam'] = newList<GrowParam>\n            #//ISSUE:objectofacompiler-generatedtypeiscreated\n            #//ISSUE:variableofacompiler-generatedtype\n            #//ISSUE:referencetoacompiler-generatedfield\n            #//ISSUE:referencetoacompiler-generatedmethod\n                #this.mGrowParam.Add(growParam)\n            #//ISSUE:referencetoacompiler-generatedfield\n            #growParam.Deserialize(deserializeCAnonStorey225.data)\n        if 'AI' in json:\n            this['mAIParam'] = newList<AIParam>\n            #//ISSUE:objectofacompiler-generatedtypeiscreated\n            #//ISSUE:variableofacompiler-generatedtype\n            #//ISSUE:referencetoacompiler-generatedfield\n            #//ISSUE:referencetoacompiler-generatedmethod\n                #this.mAIParam.Add(aiParam)\n            #//ISSUE:referencetoacompiler-generatedfield\n            #aiParam.Deserialize(deserializeCAnonStorey226.data)\n        if 'Geo' in json:\n            this['mGeoParam'] = newList<GeoParam>\n            #//ISSUE:objectofacompiler-generatedtypeiscreated\n            #//ISSUE:variableofacompiler-generatedtype\n            #//ISSUE:referencetoacompiler-generatedfield\n            #//ISSUE:referencetoacompiler-generatedmethod\n                #this.mGeoParam.Add(geoParam)\n            #//ISSUE:referencetoacompiler-generatedfield\n            #geoParam.Deserialize(deserializeCAnonStorey227.data)\n        if 'Rarity' in json:\n            this['mRarityParam'] = newList<RarityParam>\n            #RarityParamrarityParam\n            #if(this.mRarityParam.Count>index)\n            #else\n                #this.mRarityParam.Add(rarityParam)\n            #rarityParam.Deserialize(json.Rarity[index])\n        if 'Shop' in json:\n            this['mShopParam'] = newList<ShopParam>\n            #ShopParamshopParam\n            #if(this.mShopParam.Count>index)\n            #else\n                #this.mShopParam.Add(shopParam)\n            #shopParam.Deserialize(json.Shop[index])\n        if 'Player' in json:\n            this['mPlayerParamTbl'] = newPlayerParam[json['Player'].Length]\n            #this.mPlayerParamTbl[index].Deserialize(json1)\n        if 'PlayerLvTbl' in json:\n            this['mPlayerExpTbl'] = newOInt[json['PlayerLvTbl'].Length]\n        if 'PlayerLvTbl' in json:\n            this['mPlayerExpTbl[index]'] = json['PlayerLvTbl'][index]\n        if 'UnitLvTbl' in json:\n            this['mUnitExpTbl'] = newOInt[json['UnitLvTbl'].Length]\n        if 'UnitLvTbl' in json:\n            this['mUnitExpTbl[index]'] = json['UnitLvTbl'][index]\n        if 'ArtifactLvTbl' in json:\n            this['mArtifactExpTbl'] = newOInt[json['ArtifactLvTbl'].Length]\n        if 'ArtifactLvTbl' in json:\n            this['mArtifactExpTbl[index]'] = json['ArtifactLvTbl'][index]\n        if 'AbilityRank' in json:\n            this['mAbilityExpTbl'] = newOInt[json['AbilityRank'].Length]\n        if 'AbilityRank' in json:\n            this['mAbilityExpTbl[index]'] = json['AbilityRank'][index]\n        if 'AwakePieceTbl' in json:\n            this['mAwakePieceTbl'] = newOInt[json['AwakePieceTbl'].Length]\n        if 'AwakePieceTbl' in json:\n            this['mAwakePieceTbl[index]'] = json['AwakePieceTbl'][index]\n        this['']\n        this['mLocalNotificationParam']\n        if 'LocalNotification' in json:\n            this['mLocalNotificationParam']['msg_stamina'] = json['LocalNotification'][0].msg_stamina\n        this['mLocalNotificationParam']\n        if 'LocalNotification' in json:\n            this['mLocalNotificationParam']['iOSAct_stamina'] = json['LocalNotification'][0].iOSAct_stamina\n        this['mLocalNotificationParam']\n        if 'LocalNotification' in json:\n            this['mLocalNotificationParam']['limitSec_stamina'] = json['LocalNotification'][0].limitSec_stamina\n            #if(trophyCategoryParam.Deserialize(json.TrophyCategory[index]))\n                #trophyCategoryParamList.Add(trophyCategoryParam)\n                #if(!dictionary.ContainsKey(trophyCategoryParam.hash_code))\n                #dictionary.Add(trophyCategoryParam.hash_code,trophyCategoryParam)\n            #if(trophyParam.Deserialize(json.Trophy[index]))\n                #if(dictionary.ContainsKey(trophyParam.category_hash_code))\n                #else\n                #if(trophyParam.IsPlanningToUse())\n                #trophyParamList.Add(trophyParam)\n        #foreach(TrophyParamtrophyParaminthis.mTrophy)\n        #this.mTrophyInameDict.Add(trophyParam.iname,trophyParam)\n            #if(challengeCategoryParam.Deserialize(json.ChallengeCategory[index]))\n            #challengeCategoryParamList.Add(challengeCategoryParam)\n            #if(trophyParam.Deserialize(json.Challenge[index]))\n                #trophyParamList.Add(trophyParam)\n        #Array.Resize<TrophyParam>(refthis.mTrophy,length+this.mChallenge.Length)\n        #Array.Copy((Array)this.mChallenge,0,(Array)this.mTrophy,length,this.mChallenge.Length)\n        #foreach(TrophyParamtrophyParaminthis.mChallenge)\n        #this.mTrophyInameDict.Add(trophyParam.iname,trophyParam)\n    #this.CreateTrophyDict()\n            #if(unlockParam.Deserialize(json.Unlock[index]))\n            #unlockParamList.Add(unlockParam)\n            #if(vipParam.Deserialize(json.Vip[index]))\n            #vipParamList.Add(vipParam)\n        if 'Mov' in json:\n            this['mStreamingMovies'] = newJSON_StreamingMovie[json['Mov'].Length]\n            this['']\n            this['mStreamingMovies[index]']\n            if 'Mov' in json:\n                this['mStreamingMovies[index]']['alias'] = json['Mov'][index].alias\n            this['mStreamingMovies[index]']\n            if 'Mov' in json:\n                this['mStreamingMovies[index]']['path'] = json['Mov'][index].path\n            #if(bannerParam.Deserialize(json.Banner[index]))\n            #bannerParamList.Add(bannerParam)\n    #this.mJobParam[index].UpdateJobRankTransfarStatus(this)\n            #unlockUnitDataParam.Deserialize(json.QuestClearUnlockUnitData[index])\n            #unlockUnitDataParamList.Add(unlockUnitDataParam)\n        if 'Award' in json:\n            this['mAwardParam'] = newList<AwardParam>\n        if 'Award' in json:\n            this['mAwardDictionary'] = newDictionary<string,AwardParam>\n            #//ISSUE:objectofacompiler-generatedtypeiscreated\n            #//ISSUE:variableofacompiler-generatedtype\n            #//ISSUE:referencetoacompiler-generatedfield\n            #//ISSUE:referencetoacompiler-generatedfield\n                #//ISSUE:referencetoacompiler-generatedmethod\n                    #this.mAwardParam.Add(awardParam)\n                #//ISSUE:referencetoacompiler-generatedfield\n                #awardParam.Deserialize(deserializeCAnonStorey228.data)\n                #if(this.mAwardDictionary.ContainsKey(awardParam.iname))\n                #thrownewException(\"Overlap:Award[\"+awardParam.iname+\"]\")\n                #this.mAwardDictionary.Add(awardParam.iname,awardParam)\n            #if(loginInfoParam.Deserialize(json.LoginInfo[index]))\n            #loginInfoParamList.Add(loginInfoParam)\n            #collaboSkillParam.Deserialize(json.CollaboSkill[index])\n            #collaboSkillParamList.Add(collaboSkillParam)\n        #CollaboSkillParam.UpdateCollaboSkill(this.mCollaboSkillParam)\n            #trickParam.Deserialize(json.Trick[index])\n            #trickParamList.Add(trickParam)\n            #breakObjParam.Deserialize(json.BreakObj[index])\n            #breakObjParamList.Add(breakObjParam)\n        if 'VersusMatchKey' in json:\n            this['mVersusMatching'] = newList<VersusMatchingParam>\n            #versusMatchingParam.Deserialize(json.VersusMatchKey[index])\n            #this.mVersusMatching.Add(versusMatchingParam)\n        if 'VersusMatchCond' in json:\n            this['mVersusMatchCond'] = newList<VersusMatchCondParam>\n            #versusMatchCondParam.Deserialize(json.VersusMatchCond[index])\n            #this.mVersusMatchCond.Add(versusMatchCondParam)\n        if 'TowerScore' in json:\n            this['mTowerScore'] = newList<TowerScoreParam>\n            #this.mTowerScore.Add(towerScoreParam)\n        if 'TowerRank' in json:\n            this['mTowerRankTbl'] = newOInt[json['TowerRank'].Length]\n        if 'TowerRank' in json:\n            this['mTowerRankTbl[index]'] = json['TowerRank'][index]\n        if 'MultilimitUnitLv' in json:\n            this['mMultiLimitUnitLv'] = newOInt[json['MultilimitUnitLv'].Length]\n        if 'MultilimitUnitLv' in json:\n            this['mMultiLimitUnitLv[index]'] = json['MultilimitUnitLv'][index]\n            #presentItemParam.Deserialize(json.FriendPresentItem[index])\n            #this.mFriendPresentItemParam.Add(presentItemParam.iname,presentItemParam)\n            #weatherParam.Deserialize(json.Weather[index])\n            #weatherParamList.Add(weatherParam)\n    #returntrue\nreturn this\n",
    "QuestProgress[]": "def QuestProgress[](json):\n    this={}#QuestProgress[]json)\n    #returntrue\n        #if(!this.Deserialize(json[index]))\n        #returnfalse\n    #returntrue\nreturn this\n",
    "QuestProgress": "def QuestProgress(json):\n    this={}#QuestProgressjson)\n    #returntrue\n    #returntrue\n        #if(quest.Chapter.IsKeyQuest())\n    #returntrue\nreturn this\n",
    "ArenaRankingjson,ReqBtlColoRanking.RankingTypes": "def ArenaRankingjson,ReqBtlColoRanking.RankingTypes(json):\n    this={}#ArenaRankingjson,ReqBtlColoRanking.RankingTypestype)\n    #arenaPlayerList.Clear()\n            #try\n                #arenaPlayer.Deserialize(json.coloenemies[index])\n                #arenaPlayerList.Add(arenaPlayer)\n            #catch(Exceptionex)\n                #DebugUtility.LogException(ex)\n    #returntrue\nreturn this\n",
    "ArenaHistory": "def ArenaHistory(json):\n    this={}#ArenaHistoryjson)\n    #mArenaHistory.Clear()\n            #try\n                #arenaPlayerHistory.Deserialize(json.colohistories[index])\n                #mArenaHistory.Add(arenaPlayerHistory)\n            #catch(Exceptionex)\n                #DebugUtility.LogException(ex)\n    #returntrue\nreturn this\n",
    "GeoParam": "def GeoParam(json):\n    this={}#GeoParamjson)\n    #returnfalse\n    if 'iname' in json:\n        this['iname'] = json['iname']\n    if 'name' in json:\n        this['name'] = json['name']\n    if 'cost' in json:\n        this['cost'] = Math.Max(json['cost'],1)\n    if 'stop' in json:\n        this['DisableStopped'] = (json['stop']!=0)\n    #returntrue\nreturn this\n",
    "GrowParam": "def GrowParam(json):\n    this={}#GrowParamjson)\n    #returnfalse\n    if 'type' in json:\n        this['type'] = json['type']\n        #this.curve.Add(newGrowSample()\n            #},\n            #},\n            #},\n            #},\n    #})\nreturn this\n",
    "ItemParam": "def ItemParam(json):\n    this={}#ItemParamjson)\n    #returnfalse\n    if 'iname' in json:\n        this['iname'] = json['iname']\n    if 'name' in json:\n        this['name'] = json['name']\n    if 'expr' in json:\n        this['expr'] = json['expr']\n    if 'flavor' in json:\n        this['flavor'] = json['flavor']\n    if 'type' in json:\n        this['type'] = ENUM['EItemType'][json['type']]\n    if 'rare' in json:\n        this['rare'] = json['rare']\n    if 'cap' in json:\n        this['cap'] = json['cap']\n    if 'invcap' in json:\n        this['invcap'] = json['invcap']\n    if 'eqlv' in json:\n        this['equipLv'] = Math.Max(json['eqlv'],1)\n    if 'coin' in json:\n        this['coin'] = json['coin']\n    if 'tc' in json:\n        this['tour_coin'] = json['tc']\n    if 'ac' in json:\n        this['arena_coin'] = json['ac']\n    if 'mc' in json:\n        this['multi_coin'] = json['mc']\n    if 'pp' in json:\n        this['piece_point'] = json['pp']\n    if 'buy' in json:\n        this['buy'] = json['buy']\n    if 'sell' in json:\n        this['sell'] = json['sell']\n    if 'encost' in json:\n        this['enhace_cost'] = json['encost']\n    if 'enpt' in json:\n        this['enhace_point'] = json['enpt']\n    if 'val' in json:\n        this['value'] = json['val']\n    if 'icon' in json:\n        this['icon'] = json['icon']\n    if 'skill' in json:\n        this['skill'] = json['skill']\n    if 'recipe' in json:\n        this['recipe'] = json['recipe']\n    if 'is_valuables' in json:\n        this['is_valuables'] = json['is_valuables']>0\n    if 'cmn_type' in json:\n        this['cmn_type'] = json['cmn_type']\n        if 'quests' in json:\n            this['quests'] = json['quests']\n    #returntrue\nreturn this\n",
    "JobParam": "def JobParam(json):\n    this={}#JobParamjson)\n    #returnfalse\n    if 'iname' in json:\n        this['iname'] = json['iname']\n    if 'name' in json:\n        this['name'] = json['name']\n    if 'expr' in json:\n        this['expr'] = json['expr']\n    if 'mdl' in json:\n        this['model'] = json['mdl']\n    if 'ac2d' in json:\n        this['ac2d'] = json['ac2d']\n    if 'mdlp' in json:\n        this['modelp'] = json['mdlp']\n    if 'pet' in json:\n        this['pet'] = json['pet']\n    if 'buki' in json:\n        this['buki'] = json['buki']\n    if 'origin' in json:\n        this['origin'] = json['origin']\n    if 'type' in json:\n        this['type'] = ENUM['JobTypes'][json['type']]\n    if 'role' in json:\n        this['role'] = ENUM['RoleTypes'][json['role']]\n    if 'wepmdl' in json:\n        this['wepmdl'] = json['wepmdl']\n    if 'jmov' in json:\n        this['mov'] = json['jmov']\n    if 'jjmp' in json:\n        this['jmp'] = json['jjmp']\n    if 'atkskl' in json:\n        this['atkskill[0]'] = string.IsNullOrEmpty?string.Empty:json['atkskl']\n    if 'atkfi' in json:\n        this['atkskill[1]'] = string.IsNullOrEmpty?string.Empty:json['atkfi']\n    if 'atkwa' in json:\n        this['atkskill[2]'] = string.IsNullOrEmpty?string.Empty:json['atkwa']\n    if 'atkwi' in json:\n        this['atkskill[3]'] = string.IsNullOrEmpty?string.Empty:json['atkwi']\n    if 'atkth' in json:\n        this['atkskill[4]'] = string.IsNullOrEmpty?string.Empty:json['atkth']\n    if 'atksh' in json:\n        this['atkskill[5]'] = string.IsNullOrEmpty?string.Empty:json['atksh']\n    if 'atkda' in json:\n        this['atkskill[6]'] = string.IsNullOrEmpty?string.Empty:json['atkda']\n    if 'fixabl' in json:\n        this['fixed_ability'] = json['fixabl']\n    if 'artifact' in json:\n        this['artifact'] = json['artifact']\n    if 'ai' in json:\n        this['ai'] = json['ai']\n    if 'master' in json:\n        this['master'] = json['master']\n    if 'me_abl' in json:\n        this['MapEffectAbility'] = json['me_abl']\n    if 'is_me_rr' in json:\n        this['IsMapEffectRevReso'] = json['is_me_rr']!=0\n    if 'desc_ch' in json:\n        this['DescCharacteristic'] = json['desc_ch']\n    if 'desc_ot' in json:\n        this['DescOther'] = json['desc_ot']\n    #Array.Clear((Array)this.ranks,0,this.ranks.Length)\n            #if(!this.ranks[index].Deserialize(json.ranks[index]))\n            #returnfalse\n    #returntrue\nreturn this\n",
    "JobRankParam": "def JobRankParam(json):\n    this={}#JobRankParamjson)\n    #returnfalse\n    if 'chcost' in json:\n        this['JobChangeCost'] = json['chcost']\n    if 'chitm1' in json:\n        this['JobChangeItems[0]'] = json['chitm1']\n    if 'chitm2' in json:\n        this['JobChangeItems[1]'] = json['chitm2']\n    if 'chitm3' in json:\n        this['JobChangeItems[2]'] = json['chitm3']\n    if 'chnum1' in json:\n        this['JobChangeItemNums[0]'] = json['chnum1']\n    if 'chnum2' in json:\n        this['JobChangeItemNums[1]'] = json['chnum2']\n    if 'chnum3' in json:\n        this['JobChangeItemNums[2]'] = json['chnum3']\n    if 'cost' in json:\n        this['cost'] = json['cost']\n    if 'eqid1' in json:\n        this['equips[0]'] = json['eqid1']\n    if 'eqid2' in json:\n        this['equips[1]'] = json['eqid2']\n    if 'eqid3' in json:\n        this['equips[2]'] = json['eqid3']\n    if 'eqid4' in json:\n        this['equips[3]'] = json['eqid4']\n    if 'eqid5' in json:\n        this['equips[4]'] = json['eqid5']\n    if 'eqid6' in json:\n        this['equips[5]'] = json['eqid6']\n    this['']\n    this['status']\n    if 'hp' in json:\n        this['status']['hp'] = json['hp']\n    this['status']\n    if 'mp' in json:\n        this['status']['mp'] = json['mp']\n    this['status']\n    if 'atk' in json:\n        this['status']['atk'] = json['atk']\n    this['status']\n    if 'def' in json:\n        this['status']['def'] = json['def']\n    this['status']\n    if 'mag' in json:\n        this['status']['mag'] = json['mag']\n    this['status']\n    if 'mnd' in json:\n        this['status']['mnd'] = json['mnd']\n    this['status']\n    if 'dex' in json:\n        this['status']['dex'] = json['dex']\n    this['status']\n    if 'spd' in json:\n        this['status']['spd'] = json['spd']\n    this['status']\n    if 'cri' in json:\n        this['status']['cri'] = json['cri']\n    this['status']\n    if 'luk' in json:\n        this['status']['luk'] = json['luk']\n    if 'avoid' in json:\n        this['avoid'] = json['avoid']\n    if 'inimp' in json:\n        this['inimp'] = json['inimp']\n    #if(!string.IsNullOrEmpty(json.learn1))\n    #++length\n    #if(!string.IsNullOrEmpty(json.learn2))\n    #++length\n    #if(!string.IsNullOrEmpty(json.learn3))\n    #++length\n    #if(length>0)\n        #if(!string.IsNullOrEmpty(json.learn1))\n        if 'learn1' in json:\n            this['learnings[num1++]'] = json['learn1']\n        #if(!string.IsNullOrEmpty(json.learn2))\n        if 'learn2' in json:\n            this['learnings[num1++]'] = json['learn2']\n        #if(!string.IsNullOrEmpty(json.learn3))\n    #returntrue\nreturn this\n",
    "JobSetParam": "def JobSetParam(json):\n    this={}#JobSetParamjson)\n    #returnfalse\n    if 'iname' in json:\n        this['iname'] = json['iname']\n    if 'job' in json:\n        this['job'] = json['job']\n    if 'cjob' in json:\n        this['jobchange'] = json['cjob']\n    if 'target_unit' in json:\n        this['target_unit'] = json['target_unit']\n    if 'lrare' in json:\n        this['lock_rarity'] = json['lrare']\n    if 'lplus' in json:\n        this['lock_awakelv'] = json['lplus']\n    #if(!string.IsNullOrEmpty(json.ljob1))\n    #++length\n    #if(!string.IsNullOrEmpty(json.ljob2))\n    #++length\n    #if(!string.IsNullOrEmpty(json.ljob3))\n    #++length\n    #if(length>0)\n        #if(!string.IsNullOrEmpty(json.ljob1))\n            this['']\n            this['lock_jobs[index]']\n            if 'ljob1' in json:\n                this['lock_jobs[index]']['iname'] = json['ljob1']\n            this['lock_jobs[index]']\n            if 'llv1' in json:\n                this['lock_jobs[index]']['lv'] = json['llv1']\n            #++index\n        #if(!string.IsNullOrEmpty(json.ljob2))\n            if 'ljob2' in json:\n                this['lock_jobs[index]']['iname'] = json['ljob2']\n            if 'llv2' in json:\n                this['lock_jobs[index]']['lv'] = json['llv2']\n            #++index\n        #if(!string.IsNullOrEmpty(json.ljob3))\n            if 'ljob3' in json:\n                this['lock_jobs[index]']['iname'] = json['ljob3']\n            if 'llv3' in json:\n                this['lock_jobs[index]']['lv'] = json['llv3']\n    #returntrue\nreturn this\n",
    "LimitedShopItemListSet[]shopi": "def LimitedShopItemListSet[]shopi(json):\n    this={}#LimitedShopItemListSet[]shopitems)\n    #returntrue\n    #this.items.Clear()\n        #if(!limitedShopItem.Deserialize(shopitems[index]))\n        #returnfalse\n        #this.items.Add(limitedShopItem)\n    #returntrue\nreturn this\n",
    "LimitedShopItemListSet": "def LimitedShopItemListSet(json):\n    this={}#LimitedShopItemListSetjson)\n    #returnfalse\n    if 'id' in json:\n        this['id'] = json['id']\n    if 'item' in json:\n        this['iname'] = json['item'].iname\n    if 'item' in json:\n        this['num'] = json['item'].num\n    if 'item' in json:\n        this['max_num'] = json['item'].maxnum\n    if 'item' in json:\n        this['bougthnum'] = json['item'].boughtnum\n    if 'cost' in json:\n        this['saleValue'] = json['cost'].value\n    if 'cost' in json:\n        this['saleType'] = ShopData.String2SaleType\n    if 'isreset' in json:\n        this['is_reset'] = json['isreset']==1\n    if 'sold' in json:\n        this['is_soldout'] = json['sold']>0\n    if 'children' in json:\n        this['children'] = json['children']\n    #returntrue\nreturn this\n",
    "LoginInfoParam": "def LoginInfoParam(json):\n    this={}#LoginInfoParamjson)\n    #returnfalse\n    if 'iname' in json:\n        this['iname'] = json['iname']\n    if 'path' in json:\n        this['path'] = json['path']\n    if 'scene' in json:\n        this['scene'] = json['scene']\n    #if(!string.IsNullOrEmpty(json.begin_at))\n    #DateTime.TryParse(json.begin_at,outresult1)\n    #if(!string.IsNullOrEmpty(json.end_at))\n    #DateTime.TryParse(json.end_at,outresult2)\n    if 'conditions' in json:\n        this['conditions'] = json['conditions']\n    if 'conditions_value' in json:\n        this['conditions_value'] = json['conditions_value']\n    #returntrue\nreturn this\n",
    "MagnificationParam": "def MagnificationParam(json):\n    this={}#MagnificationParamjson)\n    #thrownewInvalidJSONException()\n    if 'iname' in json:\n        this['iname'] = json['iname']\n    if 'atk' in json:\n        this['atkMagnifications'] = json['atk']\nreturn this\n",
    "MapEffectParam": "def MapEffectParam(json):\n    this={}#MapEffectParamjson)\n    #return\n    if 'iname' in json:\n        this['mIname'] = json['iname']\n    if 'name' in json:\n        this['mName'] = json['name']\n    if 'expr' in json:\n        this['mExpr'] = json['expr']\n    #this.mValidSkillLists.Clear()\n    #return\n    #foreach(stringskillinjson.skills)\n    #this.mValidSkillLists.Add(skill)\nreturn this\n",
    "MapParam": "def MapParam(json):\n    this={}#MapParamjson)\n    #thrownewInvalidJSONException()\n    if 'scn' in json:\n        this['mapSceneName'] = json['scn']\n    if 'set' in json:\n        this['mapSetName'] = json['set']\n    if 'btl' in json:\n        this['battleSceneName'] = json['btl']\n    if 'ev' in json:\n        this['eventSceneName'] = json['ev']\n    if 'bgm' in json:\n        this['bgmName'] = json['bgm']\nreturn this\n",
    "MultiTowerFloorParam": "def MultiTowerFloorParam(json):\n    this={}#MultiTowerFloorParamjson)\n    #thrownewInvalidJSONException()\n    if 'id' in json:\n        this['id'] = json['id']\n    if 'title' in json:\n        this['title'] = json['title']\n    if 'name' in json:\n        this['name'] = json['name']\n    if 'expr' in json:\n        this['expr'] = json['expr']\n    if 'cond' in json:\n        this['cond'] = json['cond']\n    if 'tower_id' in json:\n        this['tower_id'] = json['tower_id']\n    if 'cond_floor' in json:\n        this['cond_floor'] = json['cond_floor']\n    if 'pt' in json:\n        this['pt'] = json['pt']\n    if 'lv' in json:\n        this['lv'] = json['lv']\n    if 'joblv' in json:\n        this['joblv'] = json['joblv']\n    if 'reward_id' in json:\n        this['reward_id'] = json['reward_id']\n    if 'floor' in json:\n        this['floor'] = json['floor']\n    if 'unitnum' in json:\n        this['unitnum'] = json['unitnum']\n    if 'notcon' in json:\n        this['notcon'] = json['notcon']\n    if 'me_id' in json:\n        this['me_id'] = json['me_id']\n    if 'is_wth_no_chg' in json:\n        this['is_wth_no_chg'] = json['is_wth_no_chg']\n    if 'wth_set_id' in json:\n        this['wth_set_id'] = json['wth_set_id']\n    #this.map.Clear()\n            #mapParam.Deserialize(json.map[index])\n            #this.map.Add(mapParam)\n    #instance.AddMTQuest(questParam.iname,questParam)\nreturn this\n",
    "MultiTowerRewardItem": "def MultiTowerRewardItem(json):\n    this={}#MultiTowerRewardItemjson)\n    #thrownewInvalidJSONException()\n    if 'round_st' in json:\n        this['round_st'] = json['round_st']\n    if 'round_ed' in json:\n        this['round_ed'] = json['round_ed']\n    if 'itemname' in json:\n        this['itemname'] = json['itemname']\n    if 'num' in json:\n        this['num'] = json['num']\n    if 'type' in json:\n        this['type'] = json['type']\nreturn this\n",
    "MultiTowerRewardParam": "def MultiTowerRewardParam(json):\n    this={}#MultiTowerRewardParamjson)\n    #thrownewInvalidJSONException()\n    if 'iname' in json:\n        this['iname'] = json['iname']\n    #return\n    if 'rewards' in json:\n        this['mReward'] = newMultiTowerRewardItem[json['rewards'].Length]\n        #this.mReward[index].Deserialize(json.rewards[index])\nreturn this\n",
    "ObjectiveParam": "def ObjectiveParam(json):\n    this={}#ObjectiveParamjson)\n    #thrownewInvalidJSONException()\n    if 'iname' in json:\n        this['iname'] = json['iname']\n    #thrownewInvalidJSONException()\n    if 'objective' in json:\n        this['objective'] = json['objective']\nreturn this\n",
    "PlayerParam": "def PlayerParam(json):\n    this={}#PlayerParamjson)\n    #returnfalse\n    if 'pt' in json:\n        this['pt'] = json['pt']\n    if 'ucap' in json:\n        this['ucap'] = json['ucap']\n    if 'icap' in json:\n        this['icap'] = json['icap']\n    if 'ecap' in json:\n        this['ecap'] = json['ecap']\n    if 'fcap' in json:\n        this['fcap'] = json['fcap']\n    #returntrue\nreturn this\n",
    "ProductParam": "def ProductParam(json):\n    this={}#ProductParamjson)\n    #returnfalse\n    if 'product_id' in json:\n        this['mProductId'] = json['product_id']\n    if 'platform' in json:\n        this['mPlatform'] = json['platform']\n    if 'name' in json:\n        this['mName'] = LocalizedText.Get\n    if 'description' in json:\n        this['mDescription'] = LocalizedText.Get\n    if 'additional_paid_coin' in json:\n        this['mAdditionalPaidCoin'] = json['additional_paid_coin']\n    if 'additional_free_coin' in json:\n        this['mAdditionalFreeCoin'] = json['additional_free_coin']\n        this['']\n        this['mSale']\n        if 'sale' in json:\n            this['mSale']['Name'] = !string.IsNullOrEmpty?LocalizedText.Get:string.Empty\n        this['mSale']\n        if 'sale' in json:\n            this['mSale']['Description'] = !string.IsNullOrEmpty?LocalizedText.Get:string.Empty\n        this['mSale']\n        if 'sale' in json:\n            this['mSale']['AdditionalFreeCoin'] = json['sale'].additional_free_coin>0?json['sale'].additional_free_coin:0\n    if 'enabled' in json:\n        this['mEnabled'] = json['enabled']\n    if 'remaining_days' in json:\n        this['mRemainingDays'] = json['remaining_days']\n    #returntrue\nreturn this\n",
    "ProductParamResponse": "def ProductParamResponse(json):\n    this={}#ProductParamResponsejson)\n    #returntrue\n    #this.products.Clear()\n        #if(!productParam.Deserialize(json.products[index]))\n        #returnfalse\n        #this.products.Add(productParam)\n    #returntrue\nreturn this\n",
    "ProductSaleParam": "def ProductSaleParam(json):\n    this={}#ProductSaleParamjson)\n    #returnfalse\n    if 'fields' in json:\n        this['ProductId'] = json['fields'].product_id\n    if 'fields' in json:\n        this['Platform'] = json['fields'].platform\n    if 'fields' in json:\n        this['Name'] = json['fields'].name\n    if 'fields' in json:\n        this['Description'] = json['fields'].description\n    if 'fields' in json:\n        this['AdditionalFreeCoin'] = json['fields'].additional_free_coin\n    this['']\n    this['Condition']\n    if 'fields' in json:\n        this['Condition']['type'] = json['fields'].condition_type\n    this['Condition']\n    if 'fields' in json:\n        this['Condition']['value'] = json['fields'].condition_value\n    #returntrue\nreturn this\n",
    "QuestCampaignChildParam": "def QuestCampaignChildParam(json):\n    this={}#QuestCampaignChildParamjson)\n    if 'iname' in json:\n        this['iname'] = json['iname']\n    if 'scope' in json:\n        this['scope'] = ENUM['QuestCampaignScopes'][json['scope']]\n    if 'quest_type' in json:\n        this['questType'] = ENUM['QuestTypes'][json['quest_type']]\n    if 'quest_mode' in json:\n        this['questMode'] = ENUM['QuestDifficulties'][json['quest_mode']]\n    if 'quest_id' in json:\n        this['questId'] = json['quest_id']\n    if 'unit' in json:\n        this['unit'] = json['unit']\n    if 'drop_rate' in json:\n        this['dropRate'] = json['drop_rate']\n    if 'drop_num' in json:\n        this['dropNum'] = json['drop_num']\n    if 'exp_player' in json:\n        this['expPlayer'] = json['exp_player']\n    if 'exp_unit' in json:\n        this['expUnit'] = json['exp_unit']\n    if 'ap_rate' in json:\n        this['apRate'] = json['ap_rate']\n    #returntrue\nreturn this\n",
    "QuestCampaignParentParam": "def QuestCampaignParentParam(json):\n    this={}#QuestCampaignParentParamjson)\n    if 'iname' in json:\n        this['iname'] = json['iname']\n    if 'children' in json:\n        this['children'] = json['children']\n    #if(!string.IsNullOrEmpty(json.begin_at))\n    #DateTime.TryParse(json.begin_at,outthis.beginAt)\n    #if(!string.IsNullOrEmpty(json.end_at))\n    #DateTime.TryParse(json.end_at,outthis.endAt)\n    #returntrue\nreturn this\n",
    "QuestClearUnlockUnitDataParam": "def QuestClearUnlockUnitDataParam(json):\n    this={}#QuestClearUnlockUnitDataParamjson)\n    #return\n    if 'iname' in json:\n        this['iname'] = json['iname']\n    if 'uid' in json:\n        this['uid'] = json['uid']\n    if 'add' in json:\n        this['add'] = json['add']>0\n    if 'type' in json:\n        this['type'] = json['type']\n    if 'new_id' in json:\n        this['new_id'] = json['new_id']\n    if 'old_id' in json:\n        this['old_id'] = json['old_id']\n    if 'parent_id' in json:\n        this['parent_id'] = json['parent_id']\n    if 'ulv' in json:\n        this['ulv'] = json['ulv']\n    if 'aid' in json:\n        this['aid'] = json['aid']\n    if 'alv' in json:\n        this['alv'] = json['alv']\n    if 'qcnd' in json:\n        this['qcnd'] = json['qcnd']>0\n    #return\n    if 'qids' in json:\n        this['qids'] = newstring[json['qids'].Length]\n    #json.qids.CopyTo((Array)this.qids,0)\nreturn this\n",
    "QuestCondParam": "def QuestCondParam(json):\n    this={}#QuestCondParamjson)\n    if 'iname' in json:\n        this['iname'] = json['iname']\n    if 'plvmax' in json:\n        this['plvmax'] = json['plvmax']\n    if 'plvmin' in json:\n        this['plvmin'] = json['plvmin']\n    if 'ulvmax' in json:\n        this['ulvmax'] = json['ulvmax']\n    if 'ulvmin' in json:\n        this['ulvmin'] = json['ulvmin']\n    if 'sex' in json:\n        this['sex'] = ENUM['ESex'][json['sex']]\n    if 'rmax' in json:\n        this['rmax'] = json['rmax']\n    if 'rmin' in json:\n        this['rmin'] = json['rmin']\n    if 'hmax' in json:\n        this['hmax'] = json['hmax']\n    if 'hmin' in json:\n        this['hmin'] = json['hmin']\n    if 'wmax' in json:\n        this['wmax'] = json['wmax']\n    if 'wmin' in json:\n        this['wmin'] = json['wmin']\n    if 'el_none' in json:\n        this['isElemLimit'] = num1++(this.elem[1]=json.el_fire)+(this.elem[2]=json.el_watr)+(this.elem[3]=json.el_wind)+(this.elem[4]=json.el_thdr)+(this.elem[5]=json.el_lit)+(this.elem[6]=json.el_drk)>0\n        if 'job' in json:\n            this['job'] = newstring[json['job'].Length]\n        if 'job' in json:\n            this['job[index4]'] = json['job'][index4]\n        if 'unit' in json:\n            this['unit'] = newstring[json['unit'].Length]\n        if 'unit' in json:\n            this['unit[index4]'] = json['unit'][index4]\n        if 'birth' in json:\n            this['birth'] = newstring[json['birth'].Length]\n        if 'birth' in json:\n            this['birth[index4]'] = json['birth'][index4]\n    if 'party_type' in json:\n        this['party_type'] = !Enum.IsDefined,(object)json['party_type'])?PartyCondType.None:(PartyCondType)json['party_type']\n    #returntrue\nreturn this\n",
    "QuestDropParam": "def QuestDropParam(json):\n    this={}#QuestDropParamjson)\n    #this.mSimpleDropTables.Clear()\n    #this.mSimpleLocalMaps.Clear()\n    #this.mSimpleQuestDrops.Clear()\n            #if(simpleDropTableParam.Deserialize(json.simpleDropTable[index]))\n            #this.mSimpleDropTables.Add(simpleDropTableParam)\n            #if(simpleLocalMapsParam.Deserialize(json.simpleLocalMaps[index]))\n            #this.mSimpleLocalMaps.Add(simpleLocalMapsParam)\n    #return\n        #if(simpleQuestDropParam.Deserialize(json.simpleQuestDrops[index]))\n        #this.mSimpleQuestDrops.Add(simpleQuestDropParam)\nreturn this\n",
    "QuestParam": "def QuestParam(json):\n    this={}#QuestParamjson)\n    #thrownewInvalidJSONException()\n    if 'iname' in json:\n        this['iname'] = json['iname']\n    if 'name' in json:\n        this['name'] = json['name']\n    if 'expr' in json:\n        this['expr'] = json['expr']\n    if 'cond' in json:\n        this['cond'] = json['cond']\n    if 'mission' in json:\n        this['mission'] = json['mission']\n    if 'pexp' in json:\n        this['pexp'] = json['pexp']\n    if 'uexp' in json:\n        this['uexp'] = json['uexp']\n    if 'gold' in json:\n        this['gold'] = json['gold']\n    if 'mcoin' in json:\n        this['mcoin'] = json['mcoin']\n    if 'pt' in json:\n        this['point'] = CheckCast.to_short\n    if 'multi' in json:\n        this['multi'] = CheckCast.to_short(json['multi'])\n    if 'multi_dead' in json:\n        this['multiDead'] = CheckCast.to_short(json['multi_dead'])\n    if 'pnum' in json:\n        this['playerNum'] = CheckCast.to_short(json['pnum'])\n    if 'unum' in json:\n        this['unitNum'] = CheckCast.to_short(json['unum']<=QuestParam.MULTI_MAX_PLAYER_UNIT?json['unum']:QuestParam.MULTI_MAX_PLAYER_UNIT)\n    if 'aplv' in json:\n        this['aplv'] = CheckCast.to_short\n    if 'limit' in json:\n        this['challengeLimit'] = CheckCast.to_short\n    if 'dayreset' in json:\n        this['dayReset'] = json['dayreset']\n        #if(json.pnum*json.unum>QuestParam.MULTI_MAX_TOTAL_UNIT)\n        #DebugUtility.LogError(\"iname:\"+json.iname+\"/Currenttotalunitis\"+(object)(json.pnum*json.unum)+\".Pleasesetthetotalnumberofunitsto\"+(object)QuestParam.MULTI_MAX_TOTAL_UNIT)\n        #if(json.unum>QuestParam.MULTI_MAX_PLAYER_UNIT)\n        #DebugUtility.LogError(\"iname:\"+json.iname+\"/Current1playerunitis\"+(object)json.unum+\".Pleasesetthe1playernumberofunitsto\"+(object)QuestParam.MULTI_MAX_PLAYER_UNIT)\n    if 'key_limit' in json:\n        this['key_limit'] = json['key_limit']\n    if 'ctw' in json:\n        this['clock_win'] = CheckCast.to_short(json['ctw'])\n    if 'ctl' in json:\n        this['clock_lose'] = CheckCast.to_short(json['ctl'])\n    if 'lv' in json:\n        this['lv'] = CheckCast.to_short)\n    if 'win' in json:\n        this['win'] = CheckCast.to_short(json['win'])\n    if 'lose' in json:\n        this['lose'] = CheckCast.to_short(json['lose'])\n    if 'type' in json:\n        this['type'] = ENUM['QuestTypes'][json['type']]\n    if 'subtype' in json:\n        this['subtype'] = ENUM['SubQuestTypes'][json['subtype']]\n    #this.units.Clear()\n    if 'area' in json:\n        this['ChapterID'] = json['area']\n    if 'world' in json:\n        this['world'] = json['world']\n    if 'text' in json:\n        this['storyTextID'] = json['text']\n    if 'hide' in json:\n        this['hidden'] = json['hide']!=0\n    if 'replay_limit' in json:\n        this['replayLimit'] = json['replay_limit']!=0\n    if 'ticket' in json:\n        this['ticket'] = json['ticket']\n    if 'title' in json:\n        this['title'] = json['title']\n    if 'nav' in json:\n        this['navigation'] = json['nav']\n    if 'ajob' in json:\n        this['AllowedJobs'] = json['ajob']\n    #if(!string.IsNullOrEmpty(json.atag))\n            #if(!string.IsNullOrEmpty(strArray[index]))\n    if 'phyb' in json:\n        this['PhysBonus'] = json['phyb']+100\n    if 'magb' in json:\n        this['MagBonus'] = json['magb']+100\n    if 'bgnr' in json:\n        this['IsBeginner'] = 0!=json['bgnr']\n    if 'i_lyt' in json:\n        this['ItemLayout'] = json['i_lyt']\n    if 'not_search' in json:\n        this['notSearch'] = json['not_search']!=0\n    if 'mode' in json:\n        this['difficulty'] = ENUM['QuestDifficulties'][json['mode']]\n        #this.units.Setup(json.units.Length)\n        #this.units.Set(index,json.units[index])\n        if 'cond_quests' in json:\n            this['cond_quests'] = json['cond_quests']\n    #this.map.Clear()\n            #mapParam.Deserialize(json.map[index])\n            #this.map.Add(mapParam)\n    if 'evst' in json:\n        this['event_start'] = json['evst']\n    if 'evw' in json:\n        this['event_clear'] = json['evw']\n    if 'retr' in json:\n        this['AllowRetreat'] = json['retr']==0\n    if 'naut' in json:\n        this['AllowAutoPlay'] = json['naut']==0||json['naut']==2\n    if 'naut' in json:\n        this['FirstAutoPlayProhibit'] = json['naut']==2\n    if 'swin' in json:\n        this['Silent'] = json['swin']!=0\n    if 'notabl' in json:\n        this['DisableAbilities'] = json['notabl']!=0\n    if 'notitm' in json:\n        this['DisableItems'] = json['notitm']!=0\n    if 'notcon' in json:\n        this['DisableContinue'] = json['notcon']!=0\n    if 'fix_editor' in json:\n        this['UseFixEditor'] = json['fix_editor']!=0\n    if 'is_no_start_voice' in json:\n        this['IsNoStartVoice'] = json['is_no_start_voice']!=0\n    if 'sprt' in json:\n        this['UseSupportUnit'] = json['sprt']==0\n    if 'is_unit_chg' in json:\n        this['IsUnitChange'] = json['is_unit_chg']!=0\n    if 'thumnail' in json:\n        this['VersusThumnail'] = json['thumnail']\n    if 'mskill' in json:\n        this['MapBuff'] = json['mskill']\n    if 'vsmovecnt' in json:\n        this['VersusMoveCount'] = json['vsmovecnt']\n    if 'dmg_up_pl' in json:\n        this['DamageUpprPl'] = json['dmg_up_pl']\n    if 'dmg_up_en' in json:\n        this['DamageUpprEn'] = json['dmg_up_en']\n    if 'dmg_rt_pl' in json:\n        this['DamageRatePl'] = json['dmg_rt_pl']\n    if 'dmg_rt_en' in json:\n        this['DamageRateEn'] = json['dmg_rt_en']\n    if 'extra' in json:\n        this['IsExtra'] = json['extra']==1\n    if 'review' in json:\n        this['ShowReviewPopup'] = json['review']==1\n    if 'is_multileader' in json:\n        this['IsMultiLeaderSkill'] = json['is_multileader']!=0\n    if 'me_id' in json:\n        this['MapEffectId'] = json['me_id']\n    if 'is_wth_no_chg' in json:\n        this['IsWeatherNoChange'] = json['is_wth_no_chg']!=0\n    if 'wth_set_id' in json:\n        this['WeatherSetId'] = json['wth_set_id']\nreturn this\n",
    "RankingQuestParam": "def RankingQuestParam(json):\n    this={}#RankingQuestParamjson)\n    if 'schedule_id' in json:\n        this['schedule_id'] = json['schedule_id']\n    #if(Enum.GetNames(typeof(RankingQuestType)).Length>json.type)\n    if 'type' in json:\n        this['type'] = ENUM['RankingQuestType'][json['type']]\n    #else\n    #DebugUtility.LogError(\"定義されていない列挙値が指定されようとしました\")\n    if 'iname' in json:\n        this['iname'] = json['iname']\n    if 'reward_id' in json:\n        this['reward_id'] = json['reward_id']\n    #returntrue\nreturn this\n",
    "RankingQuestRewardParam": "def RankingQuestRewardParam(json):\n    this={}#RankingQuestRewardParamjson)\n    if 'id' in json:\n        this['id'] = json['id']\n    #try\n        if 'type' in json:\n            this['type'] = ENUM['RankingQuestRewardType'][json['type']]\n    #catch\n        #DebugUtility.LogError(\"定義されていない列挙値が指定されようとしました\")\n    if 'iname' in json:\n        this['iname'] = json['iname']\n    if 'num' in json:\n        this['num'] = json['num']\n    #returntrue\nreturn this\n",
    "RankingQuestScheduleParam": "def RankingQuestScheduleParam(json):\n    this={}#RankingQuestScheduleParamjson)\n    if 'id' in json:\n        this['id'] = json['id']\n    #if(!string.IsNullOrEmpty(json.begin_at))\n    #DateTime.TryParse(json.begin_at,outthis.beginAt)\n    #if(!string.IsNullOrEmpty(json.end_at))\n    #DateTime.TryParse(json.end_at,outthis.endAt)\n    #if(!string.IsNullOrEmpty(json.reward_begin_at))\n    #DateTime.TryParse(json.reward_begin_at,outthis.reward_begin_at)\n    #if(!string.IsNullOrEmpty(json.reward_end_at))\n    #DateTime.TryParse(json.reward_end_at,outthis.reward_end_at)\n    #if(!string.IsNullOrEmpty(json.visible_begin_at))\n    #DateTime.TryParse(json.visible_begin_at,outthis.visible_begin_at)\n    #if(!string.IsNullOrEmpty(json.visible_end_at))\n    #DateTime.TryParse(json.visible_end_at,outthis.visible_end_at)\n    #returntrue\nreturn this\n",
    "RarityParam": "def RarityParam(json):\n    this={}#RarityParamjson)\n    #returnfalse\n    if 'unitcap' in json:\n        this['UnitLvCap'] = json['unitcap']\n    if 'jobcap' in json:\n        this['UnitJobLvCap'] = json['jobcap']\n    if 'awakecap' in json:\n        this['UnitAwakeLvCap'] = json['awakecap']\n    if 'piece' in json:\n        this['UnitUnlockPieceNum'] = json['piece']\n    if 'ch_piece' in json:\n        this['UnitChangePieceNum'] = json['ch_piece']\n    if 'ch_piece_select' in json:\n        this['UnitSelectChangePieceNum'] = json['ch_piece_select']\n    if 'rareup_cost' in json:\n        this['UnitRarityUpCost'] = json['rareup_cost']\n    if 'gain_pp' in json:\n        this['PieceToPoint'] = json['gain_pp']\n    this['']\n    this['EquipEnhanceParam']\n    if 'eq_costscale' in json:\n        this['EquipEnhanceParam']['cost_scale'] = json['eq_costscale']\n    #if(length>0)\n        #returnfalse\n            this['EquipEnhanceParam']\n            this['EquipEnhanceParam']['ranks[index]']\n            if 'eq_points' in json:\n                this['EquipEnhanceParam']['ranks[index]']['need_point'] = json['eq_points'][index]\n    if 'af_lvcap' in json:\n        this['ArtifactLvCap'] = json['af_lvcap']\n    if 'af_upcost' in json:\n        this['ArtifactCostRate'] = json['af_upcost']\n    if 'af_unlock' in json:\n        this['ArtifactCreatePieceNum'] = json['af_unlock']\n    if 'af_gousei' in json:\n        this['ArtifactGouseiPieceNum'] = json['af_gousei']\n    if 'af_change' in json:\n        this['ArtifactChangePieceNum'] = json['af_change']\n    if 'af_unlock_cost' in json:\n        this['ArtifactCreateCost'] = json['af_unlock_cost']\n    if 'af_gousei_cost' in json:\n        this['ArtifactRarityUpCost'] = json['af_gousei_cost']\n    if 'af_change_cost' in json:\n        this['ArtifactChangeCost'] = json['af_change_cost']\n    this['']\n    this['GrowStatus']\n    if 'hp' in json:\n        this['GrowStatus']['hp'] = json['hp']\n    this['GrowStatus']\n    if 'mp' in json:\n        this['GrowStatus']['mp'] = json['mp']\n    this['GrowStatus']\n    if 'atk' in json:\n        this['GrowStatus']['atk'] = json['atk']\n    this['GrowStatus']\n    if 'def' in json:\n        this['GrowStatus']['def'] = json['def']\n    this['GrowStatus']\n    if 'mag' in json:\n        this['GrowStatus']['mag'] = json['mag']\n    this['GrowStatus']\n    if 'mnd' in json:\n        this['GrowStatus']['mnd'] = json['mnd']\n    this['GrowStatus']\n    if 'dex' in json:\n        this['GrowStatus']['dex'] = json['dex']\n    this['GrowStatus']\n    if 'spd' in json:\n        this['GrowStatus']['spd'] = json['spd']\n    this['GrowStatus']\n    if 'cri' in json:\n        this['GrowStatus']['cri'] = json['cri']\n    this['GrowStatus']\n    if 'luk' in json:\n        this['GrowStatus']['luk'] = json['luk']\n    if 'drop' in json:\n        this['DropSE'] = json['drop']\n    #returntrue\nreturn this\n",
    "RecipeParam": "def RecipeParam(json):\n    this={}#RecipeParamjson)\n    #returnfalse\n    if 'iname' in json:\n        this['iname'] = json['iname']\n    if 'cost' in json:\n        this['cost'] = json['cost']\n    #++length\n    #if(length>0)\n    #returntrue\nreturn this\n",
    "SectionParam": "def SectionParam(json):\n    this={}#SectionParamjson)\n    #thrownewInvalidJSONException()\n    if 'iname' in json:\n        this['iname'] = json['iname']\n    if 'name' in json:\n        this['name'] = json['name']\n    if 'expr' in json:\n        this['expr'] = json['expr']\n    if 'start' in json:\n        this['start'] = json['start']\n    if 'end' in json:\n        this['end'] = json['end']\n    if 'hide' in json:\n        this['hidden'] = json['hide']!=0\n    if 'home' in json:\n        this['home'] = json['home']\n    if 'unit' in json:\n        this['unit'] = json['unit']\n    if 'item' in json:\n        this['prefabPath'] = json['item']\n    if 'shop' in json:\n        this['shop'] = json['shop']\n    if 'inn' in json:\n        this['inn'] = json['inn']\n    if 'bar' in json:\n        this['bar'] = json['bar']\n    if 'bgm' in json:\n        this['bgm'] = json['bgm']\nreturn this\n",
    "ShopParam": "def ShopParam(json):\n    this={}#ShopParamjson)\n    #returnfalse\n    if 'iname' in json:\n        this['iname'] = json['iname']\n    if 'upd_type' in json:\n        this['UpdateCostType'] = ENUM['ESaleType'][json['upd_type']]\n        if 'upd_costs' in json:\n            this['UpdateCosts'] = newint[json['upd_costs'].Length]\n        if 'upd_costs' in json:\n            this['UpdateCosts[index]'] = json['upd_costs'][index]\n    #returntrue\nreturn this\n",
    "SimpleDropTableParam": "def SimpleDropTableParam(json):\n    this={}#SimpleDropTableParamjson)\n    if 'iname' in json:\n        this['iname'] = json['iname']\n    if 'droplist' in json:\n        this['dropList'] = json['droplist']\n    #if(!string.IsNullOrEmpty(json.begin_at))\n    #DateTime.TryParse(json.begin_at,outthis.beginAt)\n    #if(!string.IsNullOrEmpty(json.end_at))\n    #DateTime.TryParse(json.end_at,outthis.endAt)\n    #returntrue\nreturn this\n",
    "SimpleLocalMapsParam": "def SimpleLocalMapsParam(json):\n    this={}#SimpleLocalMapsParamjson)\n    if 'iname' in json:\n        this['iname'] = json['iname']\n    if 'droplist' in json:\n        this['droplist'] = json['droplist']\n    #returntrue\nreturn this\n",
    "SimpleQuestDropParam": "def SimpleQuestDropParam(json):\n    this={}#SimpleQuestDropParamjson)\n    if 'iname' in json:\n        this['item_iname'] = json['iname']\n    if 'questlist' in json:\n        this['questlist'] = json['questlist']\n    #returntrue\nreturn this\n",
    "SkillParam": "def SkillParam(json):\n    this={}#SkillParamjson)\n    #returnfalse\n    if 'iname' in json:\n        this['iname'] = json['iname']\n    if 'name' in json:\n        this['name'] = json['name']\n    if 'expr' in json:\n        this['expr'] = json['expr']\n    if 'motnm' in json:\n        this['motion'] = json['motnm']\n    if 'effnm' in json:\n        this['effect'] = json['effnm']\n    if 'effdef' in json:\n        this['defend_effect'] = json['effdef']\n    if 'weapon' in json:\n        this['weapon'] = json['weapon']\n    if 'tktag' in json:\n        this['tokkou'] = json['tktag']\n    if 'tkrate' in json:\n        this['tk_rate'] = json['tkrate']\n    if 'type' in json:\n        this['type'] = ENUM['ESkillType'][json['type']]\n    if 'timing' in json:\n        this['timing'] = ENUM['ESkillTiming'][json['timing']]\n    if 'cond' in json:\n        this['condition'] = ENUM['ESkillCondition'][json['cond']]\n    if 'target' in json:\n        this['target'] = ENUM['ESkillTarget'][json['target']]\n    if 'line' in json:\n        this['line_type'] = ENUM['ELineType'][json['line']]\n    if 'cap' in json:\n        this['lvcap'] = json['cap']\n    if 'cost' in json:\n        this['cost'] = json['cost']\n    if 'count' in json:\n        this['count'] = json['count']\n    if 'rate' in json:\n        this['rate'] = json['rate']\n    if 'sran' in json:\n        this['select_range'] = ENUM['ESelectType'][json['sran']]\n    if 'rangemin' in json:\n        this['range_min'] = json['rangemin']\n    if 'range' in json:\n        this['range_max'] = json['range']\n    if 'ssco' in json:\n        this['select_scope'] = ENUM['ESelectType'][json['ssco']]\n    if 'scope' in json:\n        this['scope'] = json['scope']\n    if 'eff_h' in json:\n        this['effect_height'] = json['eff_h']\n    if 'bdb' in json:\n        this['back_defrate'] = json['bdb']\n    if 'sdb' in json:\n        this['side_defrate'] = json['sdb']\n    if 'idr' in json:\n        this['ignore_defense_rate'] = json['idr']\n    if 'job' in json:\n        this['job'] = json['job']\n    if 'scn' in json:\n        this['SceneName'] = json['scn']\n    if 'combo_num' in json:\n        this['ComboNum'] = json['combo_num']\n    if 'combo_rate' in json:\n        this['ComboDamageRate'] = (100-Math.Abs(json['combo_rate']))\n    if 'is_cri' in json:\n        this['IsCritical'] = (json['is_cri']!=0)\n    if 'jdtype' in json:\n        this['JewelDamageType'] = ENUM['JewelDamageTypes'][json['jdtype']]\n    if 'jdv' in json:\n        this['JewelDamageValue'] = json['jdv']\n    if 'jdabs' in json:\n        this['IsJewelAbsorb'] = (json['jdabs']!=0)\n    if 'dupli' in json:\n        this['DuplicateCount'] = json['dupli']\n    if 'cs_main_id' in json:\n        this['CollaboMainId'] = json['cs_main_id']\n    if 'cs_height' in json:\n        this['CollaboHeight'] = json['cs_height']\n    if 'kb_rate' in json:\n        this['KnockBackRate'] = json['kb_rate']\n    if 'kb_val' in json:\n        this['KnockBackVal'] = json['kb_val']\n    if 'kb_dir' in json:\n        this['KnockBackDir'] = ENUM['eKnockBackDir'][json['kb_dir']]\n    if 'kb_ds' in json:\n        this['KnockBackDs'] = ENUM['eKnockBackDs'][json['kb_ds']]\n    if 'dmg_dt' in json:\n        this['DamageDispType'] = ENUM['eDamageDispType'][json['dmg_dt']]\n    #this.ReplaceTargetIdLists.Clear()\n        #foreach(stringrpTgtIdinjson.rp_tgt_ids)\n        #this.ReplaceTargetIdLists.Add(rpTgtId)\n    #this.ReplaceChangeIdLists.Clear()\n        #foreach(stringrpChgIdinjson.rp_chg_ids)\n        #this.ReplaceChangeIdLists.Add(rpChgId)\n        #this.ReplaceTargetIdLists.Clear()\n        #this.ReplaceChangeIdLists.Clear()\n    #this.AbilityReplaceTargetIdLists.Clear()\n        #foreach(stringabRpTgtIdinjson.ab_rp_tgt_ids)\n        #this.AbilityReplaceTargetIdLists.Add(abRpTgtId)\n    #this.AbilityReplaceChangeIdLists.Clear()\n        #foreach(stringabRpChgIdinjson.ab_rp_chg_ids)\n        #this.AbilityReplaceChangeIdLists.Add(abRpChgId)\n        #this.AbilityReplaceTargetIdLists.Clear()\n        #this.AbilityReplaceChangeIdLists.Clear()\n    if 'cs_voice' in json:\n        this['CollaboVoiceId'] = json['cs_voice']\n    if 'cs_vp_df' in json:\n        this['CollaboVoicePlayDelayFrame'] = json['cs_vp_df']\n    if 'tl_type' in json:\n        this['TeleportType'] = ENUM['eTeleportType'][json['tl_type']]\n    if 'tl_target' in json:\n        this['TeleportTarget'] = ENUM['ESkillTarget'][json['tl_target']]\n    if 'tl_height' in json:\n        this['TeleportHeight'] = json['tl_height']\n    if 'tl_is_mov' in json:\n        this['TeleportIsMove'] = json['tl_is_mov']!=0\n    if 'tr_id' in json:\n        this['TrickId'] = json['tr_id']\n    if 'tr_set' in json:\n        this['TrickSetType'] = ENUM['eTrickSetType'][json['tr_set']]\n    if 'bo_id' in json:\n        this['BreakObjId'] = json['bo_id']\n    if 'me_desc' in json:\n        this['MapEffectDesc'] = json['me_desc']\n    if 'wth_rate' in json:\n        this['WeatherRate'] = json['wth_rate']\n    if 'wth_id' in json:\n        this['WeatherId'] = json['wth_id']\n    if 'elem_tk' in json:\n        this['ElementSpcAtkRate'] = json['elem_tk']\n    if 'max_dmg' in json:\n        this['MaxDamageValue'] = json['max_dmg']\n    if 'hp_cost' in json:\n        this['hp_cost'] = json['hp_cost']\n    if 'hp_cost_rate' in json:\n        this['hp_cost_rate'] = Math.Min(Math.Max(json['hp_cost_rate'],0),100)\n    if 'rhit' in json:\n        this['random_hit_rate'] = json['rhit']\n    if 'eff_type' in json:\n        this['effect_type'] = ENUM['SkillEffectTypes'][json['eff_type']]\n    if 'eff_calc' in json:\n        this['effect_calc'] = ENUM['SkillParamCalcTypes'][json['eff_calc']]\n    this['']\n    this['effect_rate']\n    if 'eff_rate_ini' in json:\n        this['effect_rate']['ini'] = json['eff_rate_ini']\n    this['effect_rate']\n    if 'eff_rate_max' in json:\n        this['effect_rate']['max'] = json['eff_rate_max']\n    this['']\n    this['effect_value']\n    if 'eff_val_ini' in json:\n        this['effect_value']['ini'] = json['eff_val_ini']\n    this['effect_value']\n    if 'eff_val_max' in json:\n        this['effect_value']['max'] = json['eff_val_max']\n    this['']\n    this['effect_range']\n    if 'eff_range_ini' in json:\n        this['effect_range']['ini'] = json['eff_range_ini']\n    this['effect_range']\n    if 'eff_range_max' in json:\n        this['effect_range']['max'] = json['eff_range_max']\n    if 'eff_hprate' in json:\n        this['effect_hprate'] = json['eff_hprate']\n    if 'eff_mprate' in json:\n        this['effect_mprate'] = json['eff_mprate']\n    if 'eff_durate' in json:\n        this['effect_dead_rate'] = json['eff_durate']\n    if 'eff_lvrate' in json:\n        this['effect_lvrate'] = json['eff_lvrate']\n    if 'atk_type' in json:\n        this['attack_type'] = ENUM['AttackTypes'][json['atk_type']]\n    if 'atk_det' in json:\n        this['attack_detail'] = ENUM['AttackDetailTypes'][json['atk_det']]\n    if 'elem' in json:\n        this['element_type'] = ENUM['EElement'][json['elem']]\n        this['']\n        this['element_value']\n        if 'elem_ini' in json:\n            this['element_value']['ini'] = json['elem_ini']\n        this['element_value']\n        if 'elem_max' in json:\n            this['element_value']['max'] = json['elem_max']\n    if 'ct_type' in json:\n        this['cast_type'] = ENUM['ECastTypes'][json['ct_type']]\n    if 'ct_spd_ini' in json:\n        this['type'] = =ESkillType.Skill&&)\n        this['']\n        this['cast_speed']\n        if 'ct_spd_ini' in json:\n            this['cast_speed']['ini'] = json['ct_spd_ini']\n        this['cast_speed']\n        if 'ct_spd_max' in json:\n            this['cast_speed']['max'] = json['ct_spd_max']\n    if 'abs_d_rate' in json:\n        this['absorb_damage_rate'] = json['abs_d_rate']\n    if 'react_d_type' in json:\n        this['reaction_damage_type'] = ENUM['DamageTypes'][json['react_d_type']]\n    #this.reaction_det_lists.Clear()\n        #foreach(AttackDetailTypesreactDetinjson.react_dets)\n        #this.reaction_det_lists.Add(reactDet)\n    if 'ct_val_ini' in json:\n        this['control_ct_calc'] = =SkillParamCalcTypes.Fixed||json['ct_val_ini']!=0||json.ct_val_max!=0)\n        this['']\n        this['control_ct_rate']\n        if 'ct_rate_ini' in json:\n            this['control_ct_rate']['ini'] = json['ct_rate_ini']\n        this['control_ct_rate']\n        if 'ct_rate_max' in json:\n            this['control_ct_rate']['max'] = json['ct_rate_max']\n        this['']\n        this['control_ct_value']\n        if 'ct_val_ini' in json:\n            this['control_ct_value']['ini'] = json['ct_val_ini']\n        this['control_ct_value']\n        if 'ct_val_max' in json:\n            this['control_ct_value']['max'] = json['ct_val_max']\n        if 'ct_calc' in json:\n            this['control_ct_calc'] = ENUM['SkillParamCalcTypes'][json['ct_calc']]\n    if 't_buff' in json:\n        this['target_buff_iname'] = json['t_buff']\n    if 't_cond' in json:\n        this['target_cond_iname'] = json['t_cond']\n    if 's_buff' in json:\n        this['self_buff_iname'] = json['s_buff']\n    if 's_cond' in json:\n        this['self_cond_iname'] = json['s_cond']\n    if 'shield_type' in json:\n        this['shield_type'] = ENUM['ShieldTypes'][json['shield_type']]\n    if 'shield_d_type' in json:\n        this['shield_damage_type'] = ENUM['DamageTypes'][json['shield_d_type']]\n        this['']\n        this['shield_turn']\n        if 'shield_turn_ini' in json:\n            this['shield_turn']['ini'] = json['shield_turn_ini']\n        this['shield_turn']\n        if 'shield_turn_max' in json:\n            this['shield_turn']['max'] = json['shield_turn_max']\n        this['']\n        this['shield_value']\n        if 'shield_ini' in json:\n            this['shield_value']['ini'] = json['shield_ini']\n        this['shield_value']\n        if 'shield_max' in json:\n            this['shield_value']['max'] = json['shield_max']\n        this['']\n        this['control_damage_rate']\n        if 'ctrl_d_rate_ini' in json:\n            this['control_damage_rate']['ini'] = json['ctrl_d_rate_ini']\n        this['control_damage_rate']\n        if 'ctrl_d_rate_max' in json:\n            this['control_damage_rate']['max'] = json['ctrl_d_rate_max']\n        this['']\n        this['control_damage_value']\n        if 'ctrl_d_ini' in json:\n            this['control_damage_value']['ini'] = json['ctrl_d_ini']\n        this['control_damage_value']\n        if 'ctrl_d_max' in json:\n            this['control_damage_value']['max'] = json['ctrl_d_max']\n        if 'ctrl_d_calc' in json:\n            this['control_damage_calc'] = ENUM['SkillParamCalcTypes'][json['ctrl_d_calc']]\n    #switch(effectType)\n        #caseSkillEffectTypes.Teleport:\n        #caseSkillEffectTypes.Changing:\n        #caseSkillEffectTypes.Throw:\n        #break\n        #caseSkillEffectTypes.RateDamage:\n            #break\n        #break\n        #default:\n        #gotocaseSkillEffectTypes.RateDamage\n        #else\n        #break\n    #else\n        #switch(this.select_range)\n            #caseESelectType.LaserSpread:\n            #break\n            #caseESelectType.LaserWide:\n            #break\n            #caseESelectType.LaserTwin:\n            #break\n            #caseESelectType.LaserTriple:\n            #break\n        #switch(this.select_scope)\n            #caseESelectType.LaserSpread:\n            #caseESelectType.LaserWide:\n            #caseESelectType.LaserTwin:\n            #caseESelectType.LaserTriple:\n            #break\n        #if(this.IsTargetTeleport)\n            #if(this.IsCastSkill())\n    #if(this.IsTargetValidGrid&&!this.IsTrickSkill())\n    #returntrue\nreturn this\n",
    "TowerFloorParam": "def TowerFloorParam(json):\n    this={}#TowerFloorParamjson)\n    #thrownewInvalidJSONException()\n    if 'iname' in json:\n        this['iname'] = json['iname']\n    if 'title' in json:\n        this['title'] = json['title']\n    if 'name' in json:\n        this['name'] = json['name']\n    if 'expr' in json:\n        this['expr'] = json['expr']\n    if 'cond' in json:\n        this['cond'] = json['cond']\n    if 'tower_id' in json:\n        this['tower_id'] = json['tower_id']\n    if 'cond_quest' in json:\n        this['cond_quest'] = json['cond_quest']\n    if 'hp_recover_rate' in json:\n        this['hp_recover_rate'] = json['hp_recover_rate']\n    if 'pt' in json:\n        this['pt'] = json['pt']\n    if 'lv' in json:\n        this['lv'] = json['lv']\n    if 'joblv' in json:\n        this['joblv'] = json['joblv']\n    if 'can_help' in json:\n        this['can_help'] = json['can_help']==1\n    if 'rdy_cnd' in json:\n        this['rdy_cnd'] = json['rdy_cnd']\n    if 'reward_id' in json:\n        this['reward_id'] = json['reward_id']\n    if 'floor' in json:\n        this['floor'] = json['floor']\n    if 'is_unit_chg' in json:\n        this['is_unit_chg'] = json['is_unit_chg']\n    if 'me_id' in json:\n        this['me_id'] = json['me_id']\n    if 'is_wth_no_chg' in json:\n        this['is_wth_no_chg'] = json['is_wth_no_chg']\n    if 'wth_set_id' in json:\n        this['wth_set_id'] = json['wth_set_id']\n        if 'rand_tag' in json:\n            this['rand_tag'] = newbyte[json['rand_tag'].Length]\n        if 'rand_tag' in json:\n            this['rand_tag[index]'] = json['rand_tag'][index]\n    if 'naut' in json:\n        this['naut'] = json['naut']\n    #this.map.Clear()\n            #mapParam.Deserialize(json.map[index])\n            #this.map.Add(mapParam)\nreturn this\n",
    "TowerParam": "def TowerParam(json):\n    this={}#TowerParamjson)\n    #thrownewInvalidJSONException()\n    if 'iname' in json:\n        this['iname'] = json['iname']\n    if 'name' in json:\n        this['name'] = json['name']\n    if 'expr' in json:\n        this['expr'] = json['expr']\n    if 'banr' in json:\n        this['banr'] = json['banr']\n    if 'item' in json:\n        this['prefabPath'] = json['item']\n    if 'bg' in json:\n        this['bg'] = json['bg']\n    if 'floor_bg_open' in json:\n        this['floor_bg_open'] = json['floor_bg_open']\n    if 'floor_bg_close' in json:\n        this['floor_bg_close'] = json['floor_bg_close']\n    if 'can_unit_recover' in json:\n        this['can_unit_recover'] = json['can_unit_recover']==1\n    if 'unit_recover_minute' in json:\n        this['unit_recover_minute'] = json['unit_recover_minute']\n    if 'unit_recover_coin' in json:\n        this['unit_recover_coin'] = json['unit_recover_coin']\n    if 'eventURL' in json:\n        this['eventURL'] = json['eventURL']\n    if 'is_down' in json:\n        this['is_down'] = json['is_down']>0\n    if 'is_view_ranking' in json:\n        this['is_view_ranking'] = json['is_view_ranking']>0\n    if 'unlock_level' in json:\n        this['unlock_level'] = json['unlock_level']\n    if 'unlock_quest' in json:\n        this['unlock_quest'] = json['unlock_quest']\n    if 'url' in json:\n        this['URL'] = json['url']\nreturn this\n",
    "ReqTowerResupons": "def ReqTowerResupons(json):\n    this={}#ReqTowerResuponseres)\n    #return\n        #this.Deserialize(res.stats)\n    #else\n        #this.Deserialize(newJSON_ReqTowerResuponse.Json_TowerStatus()\n            #})\n                #this.pdeck.Add(newTowerResuponse.PlayerUnit())\n        #this.Deserialize(res.edeck)\n        #this.UpdateCurrentFloor()\n    #\n    #publicvoidDeserialize(JSON_ReqTowerResuponse.Json_TowerPlayerUnit[]res)\n        #return\n            #this.pdeck.Add(newTowerResuponse.PlayerUnit())\n    #\n    #publicvoidDeserialize(JSON_ReqTowerResuponse.Json_TowerEnemyUnit[]res)\n        #return\n            #this.edeck.Add(newTowerResuponse.EnemyUnit())\n    #\n    #publicvoidDeserialize(ReqTowerRank.JSON_TowerRankResponsejson)\n        #return\n            if 'speed' in json:\n                this['SpdRank'] = newTowerResuponse.TowerRankParam[json['speed'].Length]\n                this['']\n                this['SpdRank[index]']\n                if 'speed' in json:\n                    this['SpdRank[index]']['lv'] = json['speed'][index].lv\n                this['SpdRank[index]']\n                if 'speed' in json:\n                    this['SpdRank[index]']['name'] = json['speed'][index].name\n                this['SpdRank[index]']\n                if 'speed' in json:\n                    this['SpdRank[index]']['rank'] = json['speed'][index].rank\n                this['SpdRank[index]']\n                if 'speed' in json:\n                    this['SpdRank[index]']['score'] = json['speed'][index].score\n                #this.SpdRank[index].unit.Deserialize(json.speed[index].unit)\n        #return\n        if 'technical' in json:\n            this['TecRank'] = newTowerResuponse.TowerRankParam[json['technical'].Length]\n            this['']\n            this['TecRank[index]']\n            if 'technical' in json:\n                this['TecRank[index]']['lv'] = json['technical'][index].lv\n            this['TecRank[index]']\n            if 'technical' in json:\n                this['TecRank[index]']['name'] = json['technical'][index].name\n            this['TecRank[index]']\n            if 'technical' in json:\n                this['TecRank[index]']['rank'] = json['technical'][index].rank\n            this['TecRank[index]']\n            if 'technical' in json:\n                this['TecRank[index]']['score'] = json['technical'][index].score\n            #this.TecRank[index].unit.Deserialize(json.technical[index].unit)\n    #\n    #privatevoidUpdateCurrentFloor()\n        #else\n            #return\n            #return\n    #\n    #publicvoidDeserialize(JSON_ReqTowerResuponse.Json_TowerStatusjson)\n        this['']\n        this['status']\n        if 'fname' in json:\n            this['status']['fname'] = json['fname']\n        this['status']\n        if 'questStates' in json:\n            this['status']['state'] = json['questStates']\n        #return\n            #referenceQuestList.Add(towerFloors[(int)index].GetQuestParam())\n            #while(enumerator.MoveNext())\n        #this.SetQuestState(referenceQuestList,questParam,QuestStates.Cleared,true)\n    #\n    #privatevoidUpdateFloorQuestsState()\n    #\n    #privatevoidSetQuestState(List<QuestParam>referenceQuestList,QuestParamquestParam,QuestStatesstate,boolcond_recursive)\n        #return\n        #return\n        #//ISSUE:objectofacompiler-generatedtypeiscreated\n        #//ISSUE:variableofacompiler-generatedtype\n        #foreach(stringcondQuestinquestParam.cond_quests)\n            #//ISSUE:referencetoacompiler-generatedfield\n            #//ISSUE:referencetoacompiler-generatedmethod\n            #this.SetQuestState(referenceQuestList,questParam1,state,cond_recursive)\n    #\n    #publicTowerFloorParamGetCurrentFloor()\n        #returnthis.currentFloor\n    #\n    #publicvoidCalcDamage(List<Unit>player)\n        #return\n        #//ISSUE:objectofacompiler-generatedtypeiscreated\n        #//ISSUE:variableofacompiler-generatedtype\n        #//ISSUE:referencetoacompiler-generatedfield\n        #//ISSUE:referencetoacompiler-generatedfield\n        #//ISSUE:referencetoacompiler-generatedfield\n        #//ISSUE:referencetoacompiler-generatedfield\n            #//ISSUE:referencetoacompiler-generatedmethod\n                #//ISSUE:referencetoacompiler-generatedfield\n                #unit.Damage(num,false)\n    #\n    #publicintGetPlayerUnitHP(UnitDatadata)\n        #return(int)data.Status.param.hp\n        #return(int)data.Status.param.hp\n        #return(int)data.Status.param.hp-num\n    #\n        #return\n                        #unitList.Add(unit)\n                    #else\n                        #unit.Damage((int)unit.MaximumStatus.param.hp-this.edeck[index1].hp,false)\n            #if(!x.IsGimmick)\n            #returnfalse\n            #}))\n                #enemy.Remove(unitList[index])\n        #\n        #publicintCalcRecoverCost()\n            #return0\n            #returnMathf.Clamp((int)Math.Ceiling((double)tower.unit_recover_coin*num),0,(int)tower.unit_recover_coin)\n        #\n        #publicboolExistDamagedUnit()\n            #returnfalse\n                #if(this.pdeck[index].dmg>0)\n                #returntrue\n            #returnfalse\n        #\n        #publicintGetDiedUnitNum()\n            #returnnum\n                #if(this.pdeck[index].isDied)\n                #++num\n            #returnnum\n        #\n        #publicList<UnitData>GetAvailableUnits()\n        #\n        #publicTowerResuponse.PlayerUnitFindPlayerUnit(UnitDataunit)\n            #return(TowerResuponse.PlayerUnit)null\n        #\n        #publicclassStatus\n            #publicstringfname\n            #publicQuestStatesstate\n        #\n        #publicclassPlayerUnit\n            #publicstringunitname\n            #publicintdmg\n            #publicintis_died\n            #\n            #publicboolisDied\n                #get\n        #\n        #publicclassEnemyUnit\n            #publiclongid\n            #publicstringiname\n            #publicstringeid\n            #publicinthp\n            #publicintjewel\n        #\n        #publicclassTowerRankParam\n            #publicstringname\n            #publicintlv\n            #publicintrank\n            #publicintscore\n            #publicstringuid\n            #publicUnitDataunit\nreturn this\n",
    "ReqTowerResuponse.Json_TowerPlayerUnit[": "def ReqTowerResuponse.Json_TowerPlayerUnit[(json):\n    this={}#ReqTowerResuponse.Json_TowerPlayerUnit[]res)\n    #return\n        #this.pdeck.Add(newTowerResuponse.PlayerUnit())\nreturn this\n",
    "ReqTowerResuponse.Json_TowerEnemyUnit[": "def ReqTowerResuponse.Json_TowerEnemyUnit[(json):\n    this={}#ReqTowerResuponse.Json_TowerEnemyUnit[]res)\n    #return\n        #this.edeck.Add(newTowerResuponse.EnemyUnit())\nreturn this\n",
    "ReqTowerResuponse.Json_TowerStatus": "def ReqTowerResuponse.Json_TowerStatus(json):\n    this={}#ReqTowerResuponse.Json_TowerStatusjson)\n    this['']\n    this['status']\n    if 'fname' in json:\n        this['status']['fname'] = json['fname']\n    this['status']\n    if 'questStates' in json:\n        this['status']['state'] = json['questStates']\n    #return\n        #referenceQuestList.Add(towerFloors[(int)index].GetQuestParam())\n        #while(enumerator.MoveNext())\n    #this.SetQuestState(referenceQuestList,questParam,QuestStates.Cleared,true)\nreturn this\n",
    "TowerRewardItem": "def TowerRewardItem(json):\n    this={}#TowerRewardItemjson)\n    #thrownewInvalidJSONException()\n    if 'iname' in json:\n        this['iname'] = json['iname']\n    if 'type' in json:\n        this['type'] = json['type']\n    if 'num' in json:\n        this['num'] = json['num']\n    if 'visible' in json:\n        this['visible'] = json['visible']==1\nreturn this\n",
    "TowerRewardParam": "def TowerRewardParam(json):\n    this={}#TowerRewardParamjson)\n    #thrownewInvalidJSONException()\n    if 'iname' in json:\n        this['iname'] = json['iname']\n    #return\n        #towerRewardItem.Deserialize(json.rewards[index])\n        #this.mTowerRewardItems.Add(towerRewardItem)\nreturn this\n",
    "TowerRoundRewardParam": "def TowerRoundRewardParam(json):\n    this={}#TowerRoundRewardParamjson)\n    #thrownewInvalidJSONException()\n    if 'iname' in json:\n        this['iname'] = json['iname']\n    #return\n        #towerRewardItem.Deserialize((JSON_TowerRewardItem)json.rewards[index])\n        #this.mTowerRewardItems.Add(towerRewardItem)\n        #this.mRoundList.Add(json.rewards[index].round_num)\nreturn this\n",
    "TowerScore": "def TowerScore(json):\n    this={}#TowerScorejson)\n    #returnfalse\n    if 'rank' in json:\n        this['Rank'] = json['rank']\n    if 'score' in json:\n        this['Score'] = json['score']\n    if 'turn' in json:\n        this['TurnCnt'] = json['turn']\n    if 'died' in json:\n        this['DiedCnt'] = json['died']\n    if 'retire' in json:\n        this['RetireCnt'] = json['retire']\n    if 'recover' in json:\n        this['RecoverCnt'] = json['recover']\n    #returntrue\nreturn this\n",
    "TrickParam": "def TrickParam(json):\n    this={}#TrickParamjson)\n    #return\n    if 'iname' in json:\n        this['mIname'] = json['iname']\n    if 'name' in json:\n        this['mName'] = json['name']\n    if 'expr' in json:\n        this['mExpr'] = json['expr']\n    if 'dmg_type' in json:\n        this['mDamageType'] = ENUM['eTrickDamageType'][json['dmg_type']]\n    if 'dmg_val' in json:\n        this['mDamageVal'] = json['dmg_val']\n    if 'calc' in json:\n        this['mCalcType'] = ENUM['SkillParamCalcTypes'][json['calc']]\n    if 'elem' in json:\n        this['mElem'] = ENUM['EElement'][json['elem']]\n    if 'atk_det' in json:\n        this['mAttackDetail'] = ENUM['AttackDetailTypes'][json['atk_det']]\n    if 'buff' in json:\n        this['mBuffId'] = json['buff']\n    if 'cond' in json:\n        this['mCondId'] = json['cond']\n    if 'kb_rate' in json:\n        this['mKnockBackRate'] = json['kb_rate']\n    if 'kb_val' in json:\n        this['mKnockBackVal'] = json['kb_val']\n    if 'target' in json:\n        this['mTarget'] = ENUM['ESkillTarget'][json['target']]\n    if 'visual' in json:\n        this['mVisualType'] = ENUM['eTrickVisualType'][json['visual']]\n    if 'count' in json:\n        this['mActionCount'] = json['count']\n    if 'clock' in json:\n        this['mValidClock'] = json['clock']\n    if 'is_no_ow' in json:\n        this['mIsNoOverWrite'] = (json['is_no_ow']!=0)\n    if 'marker' in json:\n        this['mMarkerName'] = json['marker']\n    if 'effect' in json:\n        this['mEffectName'] = json['effect']\n    if 'eff_target' in json:\n        this['mEffTarget'] = ENUM['ESkillTarget'][json['eff_target']]\n    if 'eff_shape' in json:\n        this['mEffShape'] = ENUM['ESelectType'][json['eff_shape']]\n    if 'eff_scope' in json:\n        this['mEffScope'] = json['eff_scope']\n    if 'eff_height' in json:\n        this['mEffHeight'] = json['eff_height']\nreturn this\n",
    "TrophyCategoryParam": "def TrophyCategoryParam(json):\n    this={}#TrophyCategoryParamjson)\n    #returnfalse\n    if 'iname' in json:\n        this['iname'] = json['iname']\n    if 'name' in json:\n        this['name'] = json['name']\n    if 'is_not_pull' in json:\n        this['is_not_pull'] = json['is_not_pull']==1\n    if 'day_reset' in json:\n        this['days'] = json['day_reset']\n    if 'bgnr' in json:\n        this['beginner'] = json['bgnr']\n    #this.begin_at.Set(json.begin_at,DateTime.MinValue)\n    #this.end_at.Set(json.end_at,DateTime.MaxValue)\n    if 'category' in json:\n        this['category'] = ENUM['TrophyCategorys'][json['category']]\n    if 'linked_quest' in json:\n        this['linked_quest'] = json['linked_quest']\n    #returntrue\nreturn this\n",
    "TrophyParam": "def TrophyParam(json):\n    this={}#TrophyParamjson)\n    #returnfalse\n    #else\n        if 'flg_quests' in json:\n            this['RequiredTrophies'] = json['flg_quests']\n        this['']\n        this['Objectives[index]']\n        if 'type' in json:\n            this['Objectives[index]']['type'] = ENUM['TrophyConditionTypes'][json['type']]\n        this['Objectives[index]']\n        if 'ival' in json:\n            this['Objectives[index]']['ival'] = json['ival']\n        this['Objectives[index]']\n        if 'sval' in json:\n            this['Objectives[index]']['sval'] = newList<string>json['sval'])\n    if 'iname' in json:\n        this['iname'] = json['iname']\n    if 'name' in json:\n        this['Name'] = json['name']\n    if 'expr' in json:\n        this['Expr'] = json['expr']\n    if 'reward_gold' in json:\n        this['Gold'] = json['reward_gold']\n    if 'reward_coin' in json:\n        this['Coin'] = json['reward_coin']\n    if 'reward_exp' in json:\n        this['Exp'] = json['reward_exp']\n    if 'reward_stamina' in json:\n        this['Stamina'] = json['reward_stamina']\n    if 'parent_iname' in json:\n        this['ParentTrophy'] = json['parent_iname']\n    if 'help' in json:\n        this['help'] = json['help']\n    #if(!string.IsNullOrEmpty(json.category))\n        if 'category' in json:\n            this['category_hash_code'] = json['category'].GetHashCode\n    if 'category' in json:\n        this['Category'] = json['category']\n    if 'disp' in json:\n        this['DispType'] = ENUM['TrophyDispType'][json['disp']]\n    #returntrue\nreturn this\n",
    "UnitParam": "def UnitParam(json):\n    this={}#UnitParamjson)\n    #returnfalse\n    if 'no' in json:\n        this['no'] = json['no']\n    if 'iname' in json:\n        this['iname'] = json['iname']\n    if 'name' in json:\n        this['name'] = json['name']\n    if 'ai' in json:\n        this['ai'] = json['ai']\n    if 'mdl' in json:\n        this['model'] = json['mdl']\n    if 'grow' in json:\n        this['grow'] = json['grow']\n    if 'piece' in json:\n        this['piece'] = json['piece']\n    if 'birth' in json:\n        this['birth'] = json['birth']\n    if 'skill' in json:\n        this['skill'] = json['skill']\n    if 'ability' in json:\n        this['ability'] = json['ability']\n    if 'ma_quest' in json:\n        this['ma_quest'] = json['ma_quest']\n    if 'sw' in json:\n        this['sw'] = Math.Max(json['sw'],1)\n    if 'sh' in json:\n        this['sh'] = Math.Max(json['sh'],1)\n    if 'sex' in json:\n        this['sex'] = ENUM['ESex'][json['sex']]\n    if 'rare' in json:\n        this['rare'] = json['rare']\n    if 'raremax' in json:\n        this['raremax'] = json['raremax']\n    if 'type' in json:\n        this['type'] = ENUM['EUnitType'][json['type']]\n    if 'elem' in json:\n        this['element'] = ENUM['EElement'][json['elem']]\n    if 'hero' in json:\n        this['hero'] = json['hero']\n    if 'search' in json:\n        this['search'] = json['search']\n    if 'stop' in json:\n        this['stopped'] = (json['stop']!=0)\n    if 'notsmn' in json:\n        this['summon'] = json['notsmn']==0\n    #if(!string.IsNullOrEmpty(json.available_at))\n        #try\n            if 'available_at' in json:\n                this['available_at'] = DateTime.Parse\n        #catch\n    if 'height' in json:\n        this['height'] = json['height']\n    if 'weight' in json:\n        this['weight'] = json['weight']\n    if 'jt' in json:\n        this['jobtype'] = ENUM['JobTypes'][json['jt']]\n    if 'role' in json:\n        this['role'] = ENUM['RoleTypes'][json['role']]\n    if 'mov' in json:\n        this['mov'] = json['mov']\n    if 'jmp' in json:\n        this['jmp'] = json['jmp']\n    if 'inimp' in json:\n        this['inimp'] = json['inimp']\n    if 'ma_rarity' in json:\n        this['ma_rarity'] = json['ma_rarity']\n    if 'ma_lv' in json:\n        this['ma_lv'] = json['ma_lv']\n        if 'skins' in json:\n            this['skins'] = newOString[json['skins'].Length]\n        if 'skins' in json:\n            this['skins[index]'] = json['skins'][index]\n    if 'djob' in json:\n        this['djob'] = json['djob']\n    if 'dbuki' in json:\n        this['dbuki'] = json['dbuki']\n    if 'dskl' in json:\n        this['default_skill'] = json['dskl']\n        if 'dabi' in json:\n            this['default_abilities'] = newOString[json['dabi'].Length]\n        if 'dabi' in json:\n            this['default_abilities[index]'] = json['dabi'][index]\n    #returntrue\n        if 'jobsets' in json:\n            this['jobsets'] = newOString[json['jobsets'].Length]\n        if 'jobsets' in json:\n            this['jobsets[index]'] = json['jobsets'][index]\n    if 'tag' in json:\n        this['tags'] = json['tag'].Split\n    this['']\n    this['ini_status']\n    this['ini_status']['param']\n    if 'hp' in json:\n        this['ini_status']['param']['hp'] = json['hp']\n    this['ini_status']['param']\n    if 'mp' in json:\n        this['ini_status']['param']['mp'] = json['mp']\n    this['ini_status']['param']\n    if 'atk' in json:\n        this['ini_status']['param']['atk'] = json['atk']\n    this['ini_status']['param']\n    if 'def' in json:\n        this['ini_status']['param']['def'] = json['def']\n    this['ini_status']['param']\n    if 'mag' in json:\n        this['ini_status']['param']['mag'] = json['mag']\n    this['ini_status']['param']\n    if 'mnd' in json:\n        this['ini_status']['param']['mnd'] = json['mnd']\n    this['ini_status']['param']\n    if 'dex' in json:\n        this['ini_status']['param']['dex'] = json['dex']\n    this['ini_status']['param']\n    if 'spd' in json:\n        this['ini_status']['param']['spd'] = json['spd']\n    this['ini_status']['param']\n    if 'cri' in json:\n        this['ini_status']['param']['cri'] = json['cri']\n    this['ini_status']['param']\n    if 'luk' in json:\n        this['ini_status']['param']['luk'] = json['luk']\n    this['ini_status']\n    this['ini_status']['enchant_resist']\n    if 'rpo' in json:\n        this['ini_status']['enchant_resist']['poison'] = json['rpo']\n    this['ini_status']['enchant_resist']\n    if 'rpa' in json:\n        this['ini_status']['enchant_resist']['paralyse'] = json['rpa']\n    this['ini_status']['enchant_resist']\n    if 'rst' in json:\n        this['ini_status']['enchant_resist']['stun'] = json['rst']\n    this['ini_status']['enchant_resist']\n    if 'rsl' in json:\n        this['ini_status']['enchant_resist']['sleep'] = json['rsl']\n    this['ini_status']['enchant_resist']\n    if 'rch' in json:\n        this['ini_status']['enchant_resist']['charm'] = json['rch']\n    this['ini_status']['enchant_resist']\n    if 'rsn' in json:\n        this['ini_status']['enchant_resist']['stone'] = json['rsn']\n    this['ini_status']['enchant_resist']\n    if 'rbl' in json:\n        this['ini_status']['enchant_resist']['blind'] = json['rbl']\n    this['ini_status']['enchant_resist']\n    if 'rns' in json:\n        this['ini_status']['enchant_resist']['notskl'] = json['rns']\n    this['ini_status']['enchant_resist']\n    if 'rnm' in json:\n        this['ini_status']['enchant_resist']['notmov'] = json['rnm']\n    this['ini_status']['enchant_resist']\n    if 'rna' in json:\n        this['ini_status']['enchant_resist']['notatk'] = json['rna']\n    this['ini_status']['enchant_resist']\n    if 'rzo' in json:\n        this['ini_status']['enchant_resist']['zombie'] = json['rzo']\n    this['ini_status']['enchant_resist']\n    if 'rde' in json:\n        this['ini_status']['enchant_resist']['death'] = json['rde']\n    this['ini_status']['enchant_resist']\n    if 'rkn' in json:\n        this['ini_status']['enchant_resist']['knockback'] = json['rkn']\n    this['ini_status']['enchant_resist']\n    if 'rdf' in json:\n        this['ini_status']['enchant_resist']['resist_debuff'] = json['rdf']\n    this['ini_status']['enchant_resist']\n    if 'rbe' in json:\n        this['ini_status']['enchant_resist']['berserk'] = json['rbe']\n    this['ini_status']['enchant_resist']\n    if 'rcs' in json:\n        this['ini_status']['enchant_resist']['stop'] = json['rcs']\n    this['ini_status']['enchant_resist']\n    if 'rcu' in json:\n        this['ini_status']['enchant_resist']['fast'] = json['rcu']\n    this['ini_status']['enchant_resist']\n    if 'rcd' in json:\n        this['ini_status']['enchant_resist']['slow'] = json['rcd']\n    this['ini_status']['enchant_resist']\n    if 'rdo' in json:\n        this['ini_status']['enchant_resist']['donsoku'] = json['rdo']\n    this['ini_status']['enchant_resist']\n    if 'rra' in json:\n        this['ini_status']['enchant_resist']['rage'] = json['rra']\n    this['ini_status']['enchant_resist']\n    if 'rsa' in json:\n        this['ini_status']['enchant_resist']['single_attack'] = json['rsa']\n    this['ini_status']['enchant_resist']\n    if 'raa' in json:\n        this['ini_status']['enchant_resist']['area_attack'] = json['raa']\n    this['ini_status']['enchant_resist']\n    if 'rdc' in json:\n        this['ini_status']['enchant_resist']['dec_ct'] = json['rdc']\n    this['ini_status']['enchant_resist']\n    if 'ric' in json:\n        this['ini_status']['enchant_resist']['inc_ct'] = json['ric']\n    this['']\n    this['max_status']\n    this['max_status']['param']\n    if 'mhp' in json:\n        this['max_status']['param']['hp'] = json['mhp']\n    this['max_status']['param']\n    if 'mmp' in json:\n        this['max_status']['param']['mp'] = json['mmp']\n    this['max_status']['param']\n    if 'matk' in json:\n        this['max_status']['param']['atk'] = json['matk']\n    this['max_status']['param']\n    if 'mdef' in json:\n        this['max_status']['param']['def'] = json['mdef']\n    this['max_status']['param']\n    if 'mmag' in json:\n        this['max_status']['param']['mag'] = json['mmag']\n    this['max_status']['param']\n    if 'mmnd' in json:\n        this['max_status']['param']['mnd'] = json['mmnd']\n    this['max_status']['param']\n    if 'mdex' in json:\n        this['max_status']['param']['dex'] = json['mdex']\n    this['max_status']['param']\n    if 'mspd' in json:\n        this['max_status']['param']['spd'] = json['mspd']\n    this['max_status']['param']\n    if 'mcri' in json:\n        this['max_status']['param']['cri'] = json['mcri']\n    this['max_status']['param']\n    if 'mluk' in json:\n        this['max_status']['param']['luk'] = json['mluk']\n    this['max_status']\n    this['max_status']['enchant_resist']\n    if 'mrpo' in json:\n        this['max_status']['enchant_resist']['poison'] = json['mrpo']\n    this['max_status']['enchant_resist']\n    if 'mrpa' in json:\n        this['max_status']['enchant_resist']['paralyse'] = json['mrpa']\n    this['max_status']['enchant_resist']\n    if 'mrst' in json:\n        this['max_status']['enchant_resist']['stun'] = json['mrst']\n    this['max_status']['enchant_resist']\n    if 'mrsl' in json:\n        this['max_status']['enchant_resist']['sleep'] = json['mrsl']\n    this['max_status']['enchant_resist']\n    if 'mrch' in json:\n        this['max_status']['enchant_resist']['charm'] = json['mrch']\n    this['max_status']['enchant_resist']\n    if 'mrsn' in json:\n        this['max_status']['enchant_resist']['stone'] = json['mrsn']\n    this['max_status']['enchant_resist']\n    if 'mrbl' in json:\n        this['max_status']['enchant_resist']['blind'] = json['mrbl']\n    this['max_status']['enchant_resist']\n    if 'mrns' in json:\n        this['max_status']['enchant_resist']['notskl'] = json['mrns']\n    this['max_status']['enchant_resist']\n    if 'mrnm' in json:\n        this['max_status']['enchant_resist']['notmov'] = json['mrnm']\n    this['max_status']['enchant_resist']\n    if 'mrna' in json:\n        this['max_status']['enchant_resist']['notatk'] = json['mrna']\n    this['max_status']['enchant_resist']\n    if 'mrzo' in json:\n        this['max_status']['enchant_resist']['zombie'] = json['mrzo']\n    this['max_status']['enchant_resist']\n    if 'mrde' in json:\n        this['max_status']['enchant_resist']['death'] = json['mrde']\n    this['max_status']['enchant_resist']\n    if 'mrkn' in json:\n        this['max_status']['enchant_resist']['knockback'] = json['mrkn']\n    this['max_status']['enchant_resist']\n    if 'mrdf' in json:\n        this['max_status']['enchant_resist']['resist_debuff'] = json['mrdf']\n    this['max_status']['enchant_resist']\n    if 'mrbe' in json:\n        this['max_status']['enchant_resist']['berserk'] = json['mrbe']\n    this['max_status']['enchant_resist']\n    if 'mrcs' in json:\n        this['max_status']['enchant_resist']['stop'] = json['mrcs']\n    this['max_status']['enchant_resist']\n    if 'mrcu' in json:\n        this['max_status']['enchant_resist']['fast'] = json['mrcu']\n    this['max_status']['enchant_resist']\n    if 'mrcd' in json:\n        this['max_status']['enchant_resist']['slow'] = json['mrcd']\n    this['max_status']['enchant_resist']\n    if 'mrdo' in json:\n        this['max_status']['enchant_resist']['donsoku'] = json['mrdo']\n    this['max_status']['enchant_resist']\n    if 'mrra' in json:\n        this['max_status']['enchant_resist']['rage'] = json['mrra']\n    this['max_status']['enchant_resist']\n    if 'mrsa' in json:\n        this['max_status']['enchant_resist']['single_attack'] = json['mrsa']\n    this['max_status']['enchant_resist']\n    if 'mraa' in json:\n        this['max_status']['enchant_resist']['area_attack'] = json['mraa']\n    this['max_status']['enchant_resist']\n    if 'mrdc' in json:\n        this['max_status']['enchant_resist']['dec_ct'] = json['mrdc']\n    this['max_status']['enchant_resist']\n    if 'mric' in json:\n        this['max_status']['enchant_resist']['inc_ct'] = json['mric']\n    if 'ls1' in json:\n        this['leader_skills[0]'] = json['ls1']\n    if 'ls2' in json:\n        this['leader_skills[1]'] = json['ls2']\n    if 'ls3' in json:\n        this['leader_skills[2]'] = json['ls3']\n    if 'ls4' in json:\n        this['leader_skills[3]'] = json['ls4']\n    if 'ls5' in json:\n        this['leader_skills[4]'] = json['ls5']\n    if 'ls6' in json:\n        this['leader_skills[5]'] = json['ls6']\n    if 'recipe1' in json:\n        this['recipes[0]'] = json['recipe1']\n    if 'recipe2' in json:\n        this['recipes[1]'] = json['recipe2']\n    if 'recipe3' in json:\n        this['recipes[2]'] = json['recipe3']\n    if 'recipe4' in json:\n        this['recipes[3]'] = json['recipe4']\n    if 'recipe5' in json:\n        this['recipes[4]'] = json['recipe5']\n    if 'recipe6' in json:\n        this['recipes[5]'] = json['recipe6']\n    if 'img' in json:\n        this['image'] = json['img']\n    if 'vce' in json:\n        this['voice'] = json['vce']\n        if 'jidx' in json:\n            this['job_option_index'] = newOString[json['jidx'].Length]\n        if 'jidx' in json:\n            this['job_option_index[index]'] = json['jidx'][index]\n        if 'jimgs' in json:\n            this['job_images'] = newOString[json['jimgs'].Length]\n        if 'jimgs' in json:\n            this['job_images[index]'] = json['jimgs'][index]\n        if 'jvcs' in json:\n            this['job_voices'] = newOString[json['jvcs'].Length]\n        if 'jvcs' in json:\n            this['job_voices[index]'] = json['jvcs'][index]\n    if 'no_trw' in json:\n        this['is_throw'] = (json['no_trw']==0)\n    if 'no_kb' in json:\n        this['is_knock_back'] = (json['no_kb']==0)\n    #returntrue\nreturn this\n",
    "UnlockParam": "def UnlockParam(json):\n    this={}#UnlockParamjson)\n    #returnfalse\n    if 'iname' in json:\n        this['iname'] = json['iname']\n    #try\n        if 'iname' in json:\n            this['UnlockTarget'] = ENUM['UnlockTargets'][json['iname']]\n    #catch(Exceptionex)\n        #returnfalse\n    if 'lv' in json:\n        this['PlayerLevel'] = json['lv']\n    if 'vip' in json:\n        this['VipRank'] = json['vip']\n    #returntrue\nreturn this\n",
    "VersusCoin": "def VersusCoin(json):\n    this={}#VersusCoinjson)\n    #return\n    if 'iname' in json:\n        this['iname'] = json['iname']\n    if 'coin_iname' in json:\n        this['coin_iname'] = json['coin_iname']\n    if 'win_cnt' in json:\n        this['win_cnt'] = json['win_cnt']\n    if 'lose_cnt' in json:\n        this['lose_cnt'] = json['lose_cnt']\n    if 'draw_cnt' in json:\n        this['draw_cnt'] = json['draw_cnt']\nreturn this\n",
    "VersusMatchCondParam": "def VersusMatchCondParam(json):\n    this={}#VersusMatchCondParamjson)\n    #return\n    if 'floor' in json:\n        this['Floor'] = json['floor']\n    if 'lvrang' in json:\n        this['LvRange'] = json['lvrang']\n    if 'floorrange' in json:\n        this['FloorRange'] = json['floorrange']\nreturn this\n",
    "VersusMatchingParam": "def VersusMatchingParam(json):\n    this={}#VersusMatchingParamjson)\n    #return\n    if 'key' in json:\n        this['MatchKey'] = json['key']\n    if 'key' in json:\n        this['MatchKeyHash'] = VersusMatchingParam.CalcHash\n    if 'point' in json:\n        this['MatchLinePoint'] = json['point']\nreturn this\n",
    "VersusSchedule": "def VersusSchedule(json):\n    this={}#VersusSchedulejson)\n    #return\n    if 'tower_iname' in json:\n        this['tower_iname'] = json['tower_iname']\n    if 'iname' in json:\n        this['iname'] = json['iname']\n    if 'begin_at' in json:\n        this['begin_at'] = json['begin_at']\n    if 'end_at' in json:\n        this['end_at'] = json['end_at']\n    if 'gift_begin_at' in json:\n        this['gift_begin_at'] = json['gift_begin_at']\n    if 'gift_end_at' in json:\n        this['gift_end_at'] = json['gift_end_at']\n    #try\n    #catch(Exceptionex)\n        #DebugUtility.Log(ex.ToString())\nreturn this\n",
    "VersusTowerParam": "def VersusTowerParam(json):\n    this={}#VersusTowerParamjson)\n    #return\n    if 'vstower_id' in json:\n        this['VersusTowerID'] = json['vstower_id']\n    if 'iname' in json:\n        this['FloorName'] = json['iname']\n    if 'floor' in json:\n        this['Floor'] = json['floor']\n    if 'rankup_num' in json:\n        this['RankupNum'] = json['rankup_num']\n    if 'win_num' in json:\n        this['WinNum'] = json['win_num']\n    if 'lose_num' in json:\n        this['LoseNum'] = json['lose_num']\n    if 'bonus_num' in json:\n        this['BonusNum'] = json['bonus_num']\n    if 'downfloor' in json:\n        this['DownFloor'] = json['downfloor']\n    if 'resetfloor' in json:\n        this['ResetFloor'] = json['resetfloor']\n        #Debug.LogError((object)\"VersusTowerParam[WinItem]isInvalid\")\n        if 'winitem' in json:\n            this['WinIteminame'] = newOString[json['winitem'].Length]\n        if 'win_itemnum' in json:\n            this['WinItemNum'] = newOInt[json['win_itemnum'].Length]\n        if 'winitem' in json:\n            this['WinIteminame[index]'] = json['winitem'][index]\n        if 'win_itemnum' in json:\n            this['WinItemNum[index]'] = json['win_itemnum'][index]\n        #Debug.LogError((object)\"VersusTowerParam[LoseItem]isInvalid\")\n        if 'joinitem' in json:\n            this['JoinIteminame'] = newOString[json['joinitem'].Length]\n        if 'join_itemnum' in json:\n            this['JoinItemNum'] = newOInt[json['join_itemnum'].Length]\n        if 'joinitem' in json:\n            this['JoinIteminame[index]'] = json['joinitem'][index]\n        if 'join_itemnum' in json:\n            this['JoinItemNum[index]'] = json['join_itemnum'][index]\n        #Debug.LogError((object)\"VersusTowerParam[SpecialItem]isInvalid\")\n        if 'spbtl_item' in json:\n            this['SpIteminame'] = newOString[json['spbtl_item'].Length]\n        if 'spbtl_itemnum' in json:\n            this['SpItemnum'] = newOInt[json['spbtl_itemnum'].Length]\n        if 'spbtl_item' in json:\n            this['SpIteminame[index]'] = json['spbtl_item'][index]\n        if 'spbtl_itemnum' in json:\n            this['SpItemnum[index]'] = json['spbtl_itemnum'][index]\n        #Debug.LogError((object)\"VersusTowerParam[SeasonItem]isInvalid\")\n        if 'season_item' in json:\n            this['SeasonIteminame'] = newOString[json['season_item'].Length]\n        if 'season_itype' in json:\n            this['SeasonItemType'] = newVERSUS_ITEM_TYPE[json['season_itype'].Length]\n        if 'season_itemnum' in json:\n            this['SeasonItemnum'] = newOInt[json['season_itemnum'].Length]\n        if 'season_item' in json:\n            this['SeasonIteminame[index]'] = json['season_item'][index]\n        if 'season_itype' in json:\n            this['SeasonItemType[index]'] = ENUM['VERSUS_ITEM_TYPE'][json['season_itype']]\n        if 'season_itemnum' in json:\n            this['SeasonItemnum[index]'] = json['season_itemnum'][index]\n    #if(string.IsNullOrEmpty(json.arrival_item))\n    #return\n    if 'arrival_item' in json:\n        this['ArrivalIteminame'] = json['arrival_item']\n    if 'arrival_type' in json:\n        this['ArrivalItemType'] = ENUM['VERSUS_ITEM_TYPE'][json['arrival_type']]\n    if 'arrival_num' in json:\n        this['ArrivalItemNum'] = json['arrival_num']\nreturn this\n",
    "VipParam": "def VipParam(json):\n    this={}#VipParamjson)\n    #returnfalse\n    if 'exp' in json:\n        this['NextRankNeedPoint'] = json['exp']\n    if 'ticket' in json:\n        this['Ticket'] = json['ticket']\n    if 'buy_coin_bonus' in json:\n        this['BuyCoinBonus'] = json['buy_coin_bonus']\n    if 'buy_coin_num' in json:\n        this['BuyCoinNum'] = json['buy_coin_num']\n    if 'buy_stmn_num' in json:\n        this['BuyStaminaNum'] = json['buy_stmn_num']\n    if 'reset_elite' in json:\n        this['ResetEliteNum'] = json['reset_elite']\n    if 'reset_arena' in json:\n        this['ResetArenaNum'] = json['reset_arena']\n    #returntrue\nreturn this\n",
    "WeaponParam": "def WeaponParam(json):\n    this={}#WeaponParamjson)\n    #returnfalse\n    if 'iname' in json:\n        this['iname'] = json['iname']\n    if 'atk' in json:\n        this['atk'] = json['atk']\n    if 'formula' in json:\n        this['formula'] = json['formula']\n    #returntrue\nreturn this\n",
    "WeatherParam": "def WeatherParam(json):\n    this={}#WeatherParamjson)\n    #return\n    if 'iname' in json:\n        this['mIname'] = json['iname']\n    if 'name' in json:\n        this['mName'] = json['name']\n    if 'expr' in json:\n        this['mExpr'] = json['expr']\n    if 'icon' in json:\n        this['mIcon'] = json['icon']\n    if 'effect' in json:\n        this['mEffect'] = json['effect']\n    #this.mBuffIdLists.Clear()\n        #foreach(stringbuffIdinjson.buff_ids)\n        #this.mBuffIdLists.Add(buffId)\n    #this.mCondIdLists.Clear()\n    #return\n    #foreach(stringcondIdinjson.cond_ids)\n    #this.mCondIdLists.Add(condId)\nreturn this\n",
    "WeatherSetParam": "def WeatherSetParam(json):\n    this={}#WeatherSetParamjson)\n    #return\n    if 'iname' in json:\n        this['mIname'] = json['iname']\n    if 'name' in json:\n        this['mName'] = json['name']\n    #this.mStartWeatherIdLists.Clear()\n        #foreach(stringstrinjson.st_wth)\n        #this.mStartWeatherIdLists.Add(str)\n    #this.mStartWeatherRateLists.Clear()\n        #foreach(intnuminjson.st_rate)\n        #this.mStartWeatherRateLists.Add(num)\n    #if(this.mStartWeatherIdLists.Count>this.mStartWeatherRateLists.Count)\n        #this.mStartWeatherRateLists.Add(0)\n    if 'ch_cl_min' in json:\n        this['mChangeClockMin'] = json['ch_cl_min']\n    if 'ch_cl_max' in json:\n        this['mChangeClockMax'] = json['ch_cl_max']\n    #if(this.mChangeClockMin>this.mChangeClockMax)\n    #this.mChangeWeatherIdLists.Clear()\n        #foreach(stringstrinjson.ch_wth)\n        #this.mChangeWeatherIdLists.Add(str)\n    #this.mChangeWeatherRateLists.Clear()\n        #foreach(intnuminjson.ch_rate)\n        #this.mChangeWeatherRateLists.Add(num)\n    #return\n    #this.mChangeWeatherRateLists.Add(0)\nreturn this\n"
}