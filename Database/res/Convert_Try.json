{
    "AbilityPara": [
        "#returnfalse;",
        [
            "this.iname",
            "json.iname;"
        ],
        [
            "this.name",
            "json.name;"
        ],
        [
            "this.expr",
            "json.expr;"
        ],
        [
            "this.icon",
            "json.icon;"
        ],
        [
            "this.type",
            "(EAbilityType)json.type;"
        ],
        [
            "this.slot",
            "(EAbilitySlot)json.slot;"
        ],
        [
            "this.lvcap",
            "(OInt)Math.Max(json.cap,1);"
        ],
        [
            "this.is_fixed",
            "json.fix!=0;"
        ],
        "#json.skl1,",
        "#json.skl2,",
        "#json.skl3,",
        "#json.skl4,",
        "#json.skl5,",
        "#json.skl6,",
        "#json.skl7,",
        "#json.skl8,",
        "#json.skl9,",
        "#json.skl10",
        "#};",
        "#++length;",
        "#if(length>0)",
        "#json.lv1,",
        "#json.lv2,",
        "#json.lv3,",
        "#json.lv4,",
        "#json.lv5,",
        "#json.lv6,",
        "#json.lv7,",
        "#json.lv8,",
        "#json.lv9,",
        "#json.lv10",
        "#};",
        [
            "this.condition_units",
            "newstring[json.units.Length];"
        ],
        [
            "this.condition_units[index]",
            "json.units[index];"
        ],
        [
            "this.condition_jobs",
            "newstring[json.jobs.Length];"
        ],
        [
            "this.condition_jobs[index]",
            "json.jobs[index];"
        ],
        [
            "this.condition_birth",
            "json.birth;"
        ],
        [
            "this.condition_sex",
            "(ESex)json.sex;"
        ],
        [
            "this.condition_element",
            "(EElement)json.elem;"
        ],
        [
            "this.condition_raremin",
            "(OInt)json.rmin;"
        ],
        [
            "this.condition_raremax",
            "(OInt)json.rmax;"
        ],
        "#returntrue;",
        "#",
        "#publicintGetRankCap()",
        "#return(int)this.lvcap;",
        "#",
        "#publicboolCheckEnableUseAbility(UnitDataself,intjob_index)",
        "#//ISSUE:objectofacompiler-generatedtypeiscreated",
        "#//ISSUE:variableofacompiler-generatedtype",
        "#//ISSUE:referencetoacompiler-generatedfield",
        "#//ISSUE:referencetoacompiler-generatedmethod",
        "#returnfalse;",
        "#//ISSUE:objectofacompiler-generatedtypeiscreated",
        "#//ISSUE:variableofacompiler-generatedtype",
        "#//ISSUE:referencetoacompiler-generatedfield",
        "#//ISSUE:referencetoacompiler-generatedfield",
        "#//ISSUE:referencetoacompiler-generatedfield",
        "#returnfalse;",
        "#//ISSUE:referencetoacompiler-generatedmethod",
        "#//ISSUE:objectofacompiler-generatedtypeiscreated",
        "#//ISSUE:variableofacompiler-generatedtype",
        "#//ISSUE:referencetoacompiler-generatedfield",
        "#if(string.IsNullOrEmpty(abilityCAnonStorey209.job.Param.origin))",
        "#returnfalse;",
        "#//ISSUE:referencetoacompiler-generatedfield",
        "#//ISSUE:referencetoacompiler-generatedfield",
        "#//ISSUE:referencetoacompiler-generatedfield",
        "#//ISSUE:referencetoacompiler-generatedmethod",
        "#returnfalse;",
        "#//ISSUE:referencetoacompiler-generatedfield",
        "#//ISSUE:referencetoacompiler-generatedfield",
        "#//ISSUE:referencetoacompiler-generatedfield",
        "#//ISSUE:referencetoacompiler-generatedfield",
        "#//ISSUE:referencetoacompiler-generatedfield"
    ],
    "AchievementPara": [
        "#returnfalse;",
        [
            "this.id",
            "json.fields.id;"
        ],
        [
            "this.iname",
            "json.fields.iname;"
        ],
        [
            "this.ios",
            "json.fields.ios;"
        ],
        [
            "this.googleplay",
            "json.fields.googleplay;"
        ],
        "#returntrue;"
    ],
    "AIPara": [
        "#returnfalse;",
        [
            "this.iname",
            "json.iname;"
        ],
        [
            "this.role",
            "(RoleTypes)json.role;"
        ],
        [
            "this.param",
            "(ParamTypes)json.prm;"
        ],
        [
            "this.param_prio",
            "(ParamPriorities)json.prmprio;"
        ],
        [
            "this.escape_border",
            "(OInt)json.sos;"
        ],
        [
            "this.heal_border",
            "(OInt)json.heal;"
        ],
        [
            "this.gems_border",
            "(OInt)json.gems;"
        ],
        [
            "this.buff_border",
            "(OInt)json.buff_border;"
        ],
        [
            "this.cond_border",
            "(OInt)json.cond_border;"
        ],
        [
            "this.safe_border",
            "(OInt)json.safe_border;"
        ],
        [
            "this.gosa_border",
            "(OInt)json.gosa_border;"
        ],
        [
            "this.DisableSupportActionHpBorder",
            "(OInt)json.notsup_hp;"
        ],
        [
            "this.DisableSupportActionMemberBorder",
            "(OInt)json.notsup_num;"
        ],
        [
            "this.SkillCategoryPriorities",
            "newSkillCategory[json.skil_prio.Length];"
        ],
        [
            "this.SkillCategoryPriorities[index]",
            "(SkillCategory)json.skil_prio[index];"
        ],
        [
            "this.BuffPriorities",
            "newParamTypes[json.buff_prio.Length];"
        ],
        [
            "this.BuffPriorities[index]",
            "(ParamTypes)json.buff_prio[index];"
        ],
        [
            "this.ConditionPriorities",
            "newEUnitCondition[json.cond_prio.Length];"
        ],
        [
            "this.ConditionPriorities[index]",
            "(EUnitCondition)(1<<json.cond_prio[index]);"
        ],
        "#returntrue;"
    ],
    "AppealEventShopMaste": [
        "#returnfalse;",
        [
            "this.appeal_id",
            "json.fields.appeal_id;"
        ],
        [
            "this.start_at",
            "TimeManager.FromDateTime(DateTime.Parse(json.fields.start_at));"
        ],
        [
            "this.end_at",
            "TimeManager.FromDateTime(DateTime.Parse(json.fields.end_at));"
        ],
        [
            "this.priority",
            "json.fields.priority;"
        ],
        [
            "this.position_chara",
            "json.fields.position_chara;"
        ],
        [
            "this.position_text",
            "json.fields.position_text;"
        ],
        "#returntrue;"
    ],
    "AppealGachaMaste": [
        "#returnfalse;",
        [
            "this.appeal_id",
            "json.fields.appeal_id;"
        ],
        [
            "this.start_at",
            "TimeManager.FromDateTime(DateTime.Parse(json.fields.start_at));"
        ],
        [
            "this.end_at",
            "TimeManager.FromDateTime(DateTime.Parse(json.fields.end_at));"
        ],
        [
            "this.is_new",
            "json.fields.flag_new!=0;"
        ],
        "#returntrue;"
    ],
    "AppealLimitedShopMaste": [
        "#returnfalse;",
        [
            "this.appeal_id",
            "json.fields.appeal_id;"
        ],
        [
            "this.start_at",
            "TimeManager.FromDateTime(DateTime.Parse(json.fields.start_at));"
        ],
        [
            "this.end_at",
            "TimeManager.FromDateTime(DateTime.Parse(json.fields.end_at));"
        ],
        [
            "this.priority",
            "json.fields.priority;"
        ],
        [
            "this.pos_x_chara",
            "json.fields.position_chara;"
        ],
        [
            "this.pos_x_text",
            "json.fields.position_text;"
        ],
        "#returntrue;"
    ],
    "AppealQuestMaste": [
        "#returnfalse;",
        [
            "this.appeal_id",
            "json.fields.appeal_id;"
        ],
        [
            "this.start_at",
            "TimeManager.FromDateTime(DateTime.Parse(json.fields.start_at));"
        ],
        [
            "this.end_at",
            "TimeManager.FromDateTime(DateTime.Parse(json.fields.end_at));"
        ],
        "#returntrue;"
    ],
    "ArtifactPara": [
        "#returnfalse;",
        [
            "this.iname",
            "json.iname;"
        ],
        [
            "this.name",
            "json.name;"
        ],
        [
            "this.expr",
            "json.expr;"
        ],
        [
            "this.flavor",
            "json.flavor;"
        ],
        [
            "this.spec",
            "json.spec;"
        ],
        [
            "this.asset",
            "json.asset;"
        ],
        [
            "this.voice",
            "json.voice;"
        ],
        [
            "this.icon",
            "json.icon;"
        ],
        [
            "this.tag",
            "json.tag;"
        ],
        [
            "this.type",
            "(ArtifactTypes)json.type;"
        ],
        [
            "this.rareini",
            "json.rini;"
        ],
        [
            "this.raremax",
            "json.rmax;"
        ],
        [
            "this.kakera",
            "json.kakera;"
        ],
        [
            "this.maxnum",
            "json.maxnum;"
        ],
        [
            "this.is_create",
            "json.notsmn==0;"
        ],
        [
            "this.skills",
            "newstring[json.skills.Length];"
        ],
        [
            "this.skills[index]",
            "json.skills[index];"
        ],
        "#Array.Clear((Array)this.equip_effects,0,this.equip_effects.Length);",
        [
            "this.equip_effects[0]",
            "json.equip1;"
        ],
        [
            "this.equip_effects[1]",
            "json.equip2;"
        ],
        [
            "this.equip_effects[2]",
            "json.equip3;"
        ],
        [
            "this.equip_effects[3]",
            "json.equip4;"
        ],
        [
            "this.equip_effects[4]",
            "json.equip5;"
        ],
        "#Array.Clear((Array)this.attack_effects,0,this.attack_effects.Length);",
        [
            "this.attack_effects[0]",
            "json.attack1;"
        ],
        [
            "this.attack_effects[1]",
            "json.attack2;"
        ],
        [
            "this.attack_effects[2]",
            "json.attack3;"
        ],
        [
            "this.attack_effects[3]",
            "json.attack4;"
        ],
        [
            "this.attack_effects[4]",
            "json.attack5;"
        ],
        [
            "this.abil_inames",
            "newstring[json.abils.Length];"
        ],
        [
            "this.abil_levels",
            "newint[json.ablvs.Length];"
        ],
        [
            "this.abil_rareties",
            "newint[json.abrares.Length];"
        ],
        [
            "this.abil_shows",
            "newint[json.abshows.Length];"
        ],
        [
            "this.abil_conds",
            "newstring[json.abconds.Length];"
        ],
        [
            "this.abil_inames[index]",
            "json.abils[index];"
        ],
        [
            "this.abil_levels[index]",
            "json.ablvs[index];"
        ],
        [
            "this.abil_rareties[index]",
            "json.abrares[index];"
        ],
        [
            "this.abil_shows[index]",
            "json.abshows[index];"
        ],
        [
            "this.abil_conds[index]",
            "json.abconds[index];"
        ],
        [
            "this.kcoin",
            "json.kc;"
        ],
        [
            "this.tcoin",
            "json.tc;"
        ],
        [
            "this.acoin",
            "json.ac;"
        ],
        [
            "this.mcoin",
            "json.mc;"
        ],
        [
            "this.pcoin",
            "json.pp;"
        ],
        [
            "this.buy",
            "json.buy;"
        ],
        [
            "this.sell",
            "json.sell;"
        ],
        [
            "this.enhance_cost",
            "json.ecost;"
        ],
        [
            "this.condition_lv",
            "json.eqlv;"
        ],
        [
            "this.condition_sex",
            "(ESex)json.sex;"
        ],
        [
            "this.condition_birth",
            "json.birth;"
        ],
        [
            "this.condition_element",
            "(EElement)json.elem;"
        ],
        [
            "this.condition_raremin",
            "(OInt)json.eqrmin;"
        ],
        [
            "this.condition_raremax",
            "(OInt)json.eqrmax;"
        ],
        [
            "this.condition_units",
            "newstring[json.units.Length];"
        ],
        [
            "this.condition_units[index]",
            "json.units[index];"
        ],
        [
            "this.condition_jobs",
            "newstring[json.jobs.Length];"
        ],
        [
            "this.condition_jobs[index]",
            "json.jobs[index];"
        ],
        "#returntrue;"
    ],
    "AwardPara": [
        "#returnfalse;",
        [
            "this.id",
            "json.id;"
        ],
        [
            "this.iname",
            "json.iname;"
        ],
        [
            "this.name",
            "json.name;"
        ],
        [
            "this.expr",
            "json.expr;"
        ],
        [
            "this.icon",
            "json.icon;"
        ],
        [
            "this.bg",
            "json.bg;"
        ],
        [
            "this.txt_img",
            "json.txt_img;"
        ],
        "#if(!string.IsNullOrEmpty(json.start_at))",
        "#DateTime.TryParse(json.start_at,outthis.start_at);",
        [
            "this.grade",
            "json.grade;"
        ],
        [
            "this.hash",
            "json.iname.GetHashCode();"
        ],
        [
            "this.tab",
            "json.tab;"
        ],
        "#returntrue;"
    ],
    "BannerPara": [
        "#returnfalse;",
        "#try",
        [
            "this.iname",
            "json.iname;"
        ],
        [
            "this.type",
            "(BannerType)Enum.Parse(typeof(BannerType),json.type);"
        ],
        [
            "this.sval",
            "json.sval;"
        ],
        [
            "this.banner",
            "json.banr;"
        ],
        [
            "this.banr_sprite",
            "json.banr_sprite;"
        ],
        [
            "this.begin_at",
            "json.begin_at;"
        ],
        [
            "this.end_at",
            "json.end_at;"
        ],
        [
            "this.priority",
            "json.priority>0?json.priority:int.MaxValue;"
        ],
        "#catch(Exceptionex)",
        "#Debug.LogException(ex);",
        "#returnfalse;",
        "#returntrue;"
    ],
    "M": [
        "#thrownewException(\"Gridsizedoesnotmatchwidthxheight\");",
        "#this.mRoot.Initialize(this.mWidth,this.mHeight,this.mGrid);",
        "#this.ResetMoveRoutes();",
        "#returntrue;"
    ],
    "BreakObjPara": [
        "#return;",
        [
            "this.mIname",
            "json.iname;"
        ],
        [
            "this.mName",
            "json.name;"
        ],
        [
            "this.mExpr",
            "json.expr;"
        ],
        [
            "this.mUnitId",
            "json.unit_id;"
        ],
        [
            "this.mClashType",
            "(eMapBreakClashType)json.clash_type;"
        ],
        [
            "this.mAiType",
            "(eMapBreakAIType)json.ai_type;"
        ],
        [
            "this.mSideType",
            "(eMapBreakSideType)json.side_type;"
        ],
        [
            "this.mRayType",
            "(eMapBreakRayType)json.ray_type;"
        ],
        [
            "this.mIsUI",
            "json.is_ui!=0;"
        ],
        "#if(!string.IsNullOrEmpty(json.rest_hps))",
        "#int.TryParse(strArray[index],outresult);",
        [
            "this.mAliveClock",
            "json.clock;"
        ],
        [
            "this.mAppearDir",
            "(EUnitDirection)json.appear_dir;"
        ]
    ],
    "BuffEffectPara": [
        "#returnfalse;",
        [
            "this.iname",
            "json.iname;"
        ],
        [
            "this.job",
            "json.job;"
        ],
        [
            "this.buki",
            "json.buki;"
        ],
        [
            "this.birth",
            "json.birth;"
        ],
        [
            "this.sex",
            "(ESex)json.sex;"
        ],
        [
            "this.elem",
            "Convert.ToInt32(json.elem.ToString(\"d7\"),2);"
        ],
        [
            "this.rate",
            "(OInt)json.rate;"
        ],
        [
            "this.turn",
            "(OInt)json.turn;"
        ],
        [
            "this.chk_target",
            "(EffectCheckTargets)json.chktgt;"
        ],
        [
            "this.chk_timing",
            "(EffectCheckTimings)json.timing;"
        ],
        [
            "this.cond",
            "(ESkillCondition)json.cond;"
        ],
        [
            "this.mAppType",
            "(EAppType)json.app_type;"
        ],
        [
            "this.mAppMct",
            "json.app_mct;"
        ],
        [
            "this.mEffRange",
            "(EEffRange)json.eff_range;"
        ],
        "#++length;",
        "#++length;",
        "#++length;",
        "#++length;",
        "#++length;",
        "#++length;",
        "#++length;",
        "#++length;",
        "#++length;",
        "#++length;",
        "#if(length>0)",
        [
            "this.buffs[index].value_ini",
            "(OInt)json.vini1;"
        ],
        [
            "this.buffs[index].value_max",
            "(OInt)json.vmax1;"
        ],
        [
            "this.buffs[index].calc",
            "(SkillParamCalcTypes)json.calc1;"
        ],
        "#++index;",
        [
            "this.buffs[index].value_ini",
            "(OInt)json.vini2;"
        ],
        [
            "this.buffs[index].value_max",
            "(OInt)json.vmax2;"
        ],
        [
            "this.buffs[index].calc",
            "(SkillParamCalcTypes)json.calc2;"
        ],
        "#++index;",
        [
            "this.buffs[index].value_ini",
            "(OInt)json.vini3;"
        ],
        [
            "this.buffs[index].value_max",
            "(OInt)json.vmax3;"
        ],
        [
            "this.buffs[index].calc",
            "(SkillParamCalcTypes)json.calc3;"
        ],
        "#++index;",
        [
            "this.buffs[index].value_ini",
            "(OInt)json.vini4;"
        ],
        [
            "this.buffs[index].value_max",
            "(OInt)json.vmax4;"
        ],
        [
            "this.buffs[index].calc",
            "(SkillParamCalcTypes)json.calc4;"
        ],
        "#++index;",
        [
            "this.buffs[index].value_ini",
            "(OInt)json.vini5;"
        ],
        [
            "this.buffs[index].value_max",
            "(OInt)json.vmax5;"
        ],
        [
            "this.buffs[index].calc",
            "(SkillParamCalcTypes)json.calc5;"
        ],
        "#++index;",
        [
            "this.buffs[index].value_ini",
            "(OInt)json.vini6;"
        ],
        [
            "this.buffs[index].value_max",
            "(OInt)json.vmax6;"
        ],
        [
            "this.buffs[index].calc",
            "(SkillParamCalcTypes)json.calc6;"
        ],
        "#++index;",
        [
            "this.buffs[index].value_ini",
            "(OInt)json.vini7;"
        ],
        [
            "this.buffs[index].value_max",
            "(OInt)json.vmax7;"
        ],
        [
            "this.buffs[index].calc",
            "(SkillParamCalcTypes)json.calc7;"
        ],
        "#++index;",
        [
            "this.buffs[index].value_ini",
            "(OInt)json.vini8;"
        ],
        [
            "this.buffs[index].value_max",
            "(OInt)json.vmax8;"
        ],
        [
            "this.buffs[index].calc",
            "(SkillParamCalcTypes)json.calc8;"
        ],
        "#++index;",
        [
            "this.buffs[index].value_ini",
            "(OInt)json.vini9;"
        ],
        [
            "this.buffs[index].value_max",
            "(OInt)json.vmax9;"
        ],
        [
            "this.buffs[index].calc",
            "(SkillParamCalcTypes)json.calc9;"
        ],
        "#++index;",
        [
            "this.buffs[index].value_ini",
            "(OInt)json.vini10;"
        ],
        [
            "this.buffs[index].value_max",
            "(OInt)json.vmax10;"
        ],
        [
            "this.buffs[index].calc",
            "(SkillParamCalcTypes)json.calc10;"
        ],
        "#returntrue;"
    ],
    "BundleItemInfo[": [
        "#return(List<BundleParam.BundleItemInfo>)null;",
        "#if(!bundleItemInfo.Deserialize(json[index]))",
        "#return(List<BundleParam.BundleItemInfo>)null;",
        "#bundleItemInfoList.Add(bundleItemInfo);",
        "#returnbundleItemInfoList;"
    ],
    "BundlePara": [
        "#returnfalse;",
        [
            "this.mProductId",
            "json.product_id;"
        ],
        [
            "this.mPlatform",
            "json.platform;"
        ],
        [
            "this.mName",
            "json.name;"
        ],
        [
            "this.mDescription",
            "json.description;"
        ],
        [
            "this.mAdditionalPaidCoin",
            "json.additional_paid_coin;"
        ],
        [
            "this.mAdditionalFreeCoin",
            "json.additional_free_coin;"
        ],
        [
            "this.mEndDate",
            "json.end_date;"
        ],
        [
            "this.mImage",
            "json.image;"
        ],
        [
            "this.mDisplayOrder",
            "json.display_order;"
        ],
        [
            "this.mMaxPurchaseLimit",
            "json.max_purchase_limit;"
        ],
        [
            "this.mPurchaseLimit",
            "json.max_purchase_limit-json.purchase_count;"
        ],
        [
            "this.mContents.Items",
            "this.Deserialize(json.contents.items);"
        ],
        [
            "this.mContents.Units",
            "this.Deserialize(json.contents.units);"
        ],
        [
            "this.mContents.Equipments",
            "this.Deserialize(json.contents.artifacts);"
        ],
        "#returntrue;"
    ],
    "BundleItemInf": [
        "#returnfalse;",
        [
            "this.Name",
            "json.iname;"
        ],
        [
            "this.Quantity",
            "json.num;"
        ],
        "#returntrue;"
    ],
    "BundleParamRespons": [
        "#returntrue;",
        "#this.bundles.Clear();",
        "#if(!bundleParam.Deserialize(json.bundles[index]))",
        "#returnfalse;",
        "#this.bundles.Add(bundleParam);",
        "#this.bundles_all.Clear();",
        "#foreach(JSON_BundleParamjson1injson.bundles_all)",
        "#if(!bundleParam.Deserialize(json1))",
        "#returnfalse;",
        "#this.bundles_all.Add(bundleParam);",
        "#MonoSingleton<GameManager>.Instance.Player.SetBundleParam(this.bundles);",
        "#returntrue;"
    ],
    "ChallengeCategoryPara": [
        "#returnfalse;",
        [
            "this.iname",
            "json.iname;"
        ],
        "#this.begin_at.Set(json.begin_at,DateTime.MinValue);",
        "#this.end_at.Set(json.end_at,DateTime.MaxValue);",
        [
            "this.prio",
            "json.prio;"
        ],
        "#returntrue;"
    ],
    "ChapterPara": [
        "#thrownewInvalidJSONException();",
        [
            "this.iname",
            "json.iname;"
        ],
        [
            "this.name",
            "json.name;"
        ],
        [
            "this.expr",
            "json.expr;"
        ],
        [
            "this.world",
            "json.world;"
        ],
        [
            "this.start",
            "json.start;"
        ],
        [
            "this.end",
            "json.end;"
        ],
        [
            "this.hidden",
            "json.hide!=0;"
        ],
        [
            "this.section",
            "json.chap;"
        ],
        [
            "this.banner",
            "json.banr;"
        ],
        [
            "this.prefabPath",
            "json.item;"
        ],
        [
            "this.helpURL",
            "json.hurl;"
        ],
        "#if(!string.IsNullOrEmpty(json.keyitem1)&&json.keynum1>0)",
        "#this.keys.Add(newKeyItem()",
        "#});",
        "#if(this.keys.Count>0)",
        [
            "this.keytime",
            "json.keytime;"
        ],
        "#this.quests.Clear();",
        "#",
        "#publicboolIsAvailable(DateTimet)",
        "#return!this.hidden;",
        "#returnt<dateTime2;",
        "#returnfalse;",
        "#",
        "#publicboolIsKeyQuest()",
        "#returnthis.keys.Count>0;",
        "#",
        "#publicKeyQuestTypesGetKeyQuestType()",
        "#if(!this.IsKeyQuest())",
        "#returnKeyQuestTypes.None;",
        "#",
        "#publicboolIsGpsQuest()",
        "#returntrue;",
        "#if(this.children[index].IsGpsQuest())",
        "#returntrue;",
        "#returnfalse;",
        "#",
        "#publicboolIsTowerQuest()",
        "#returntrue;",
        "#if(this.children[index].IsTowerQuest())",
        "#returntrue;",
        "#returnfalse;",
        "#",
        "#publicboolIsBeginnerQuest()",
        "#returntrue;",
        "#if(this.children[index].IsBeginnerQuest())",
        "#returntrue;",
        "#returnfalse;",
        "#",
        "#publicSubQuestTypesGetSubQuestType()",
        "#returnthis.quests[0].subtype;",
        "#returnthis.children[0].GetSubQuestType();",
        "#returnSubQuestTypes.Normal;",
        "#",
        "#publicboolHasGpsQuest()",
        "#if(this.quests[index].gps_enable)",
        "#returntrue;",
        "#if(this.children[index].HasGpsQuest())",
        "#returntrue;",
        "#returnfalse;",
        "#",
        "#publicboolIsDateUnlock(longunixtime)",
        "#if(this.quests[index].IsDateUnlock(unixtime))",
        "#returntrue;",
        "#returnfalse;",
        "#",
        "#publicboolIsKeyUnlock(longunixtime)",
        "#if(!this.IsKeyQuest()||!this.IsDateUnlock(unixtime))",
        "#returnfalse;",
        "#returnfalse;",
        "#switch(keyQuestType)",
        "#caseKeyQuestTypes.Timer:",
        "#returnunixtime<this.key_end;",
        "#caseKeyQuestTypes.Count:",
        "#if(this.quests[index].CheckEnableChallange())",
        "#returntrue;",
        "#returnfalse;",
        "#default:",
        "#returnfalse;",
        "#",
        "#publicboolCheckHasKeyItem()",
        "#if(this.keys[index].IsHasItem())",
        "#returntrue;",
        "#returnfalse;"
    ],
    "ChargeCheckRespons": [
        "#returnfalse;",
        [
            "this.Age",
            "json.age;"
        ],
        [
            "this.AcceptIds",
            "json.accept_ids;"
        ],
        [
            "this.RejectIds",
            "json.reject_ids;"
        ],
        "#returntrue;"
    ],
    "ChatBlackLis": [
        "#return;",
        [
            "this.lists",
            "newChatBlackListParam[json.blacklist.Length];"
        ],
        [
            "this.lists[index]",
            "json.blacklist[index];"
        ],
        "#else",
        [
            "this.total",
            "json.total;"
        ]
    ],
    "ChatBlackListRe": [
        "#return;",
        [
            "this.is_success",
            "json.is_success;"
        ]
    ],
    "ChatChanne": [
        "#return;",
        [
            "this.channels",
            "newChatChannelParam[json.channels.Length];"
        ],
        [
            "this.channels[index]",
            "json.channels[index];"
        ]
    ],
    "ChatChannelAutoAssig": [
        "#return;",
        [
            "this.channel",
            "json.channel;"
        ]
    ],
    "ChatLo": [
        "#return;",
        "#this.messages.Clear();",
        "#return;",
        "#this.messages.AddRange((IEnumerable<ChatLogParam>)json.messages);"
    ],
    "ChatPlayerDat": [
        "#return;",
        [
            "this.name",
            "json.name;"
        ],
        [
            "this.exp",
            "json.exp;"
        ],
        [
            "this.lastlogin",
            "json.lastlogin;"
        ],
        [
            "this.fuid",
            "json.fuid;"
        ],
        [
            "this.is_friend",
            "json.is_friend;"
        ],
        [
            "this.is_favorite",
            "json.is_favorite;"
        ],
        [
            "this.award",
            "json.award;"
        ],
        "#return;",
        "#unitData.Deserialize(json.unit);"
    ],
    "ChatSendRe": [
        "#return;",
        [
            "this.is_success",
            "json.is_success;"
        ]
    ],
    "ChatStampPara": [
        "#returnfalse;",
        [
            "this.id",
            "json.fields.id;"
        ],
        [
            "this.img_id",
            "json.fields.img_id;"
        ],
        [
            "this.iname",
            "json.fields.iname;"
        ],
        [
            "this.IsPrivate",
            "json.fields.is_private==1;"
        ],
        "#returntrue;"
    ],
    "CollaboSkillPara": [
        "#return;",
        [
            "this.mIname",
            "json.iname;"
        ],
        [
            "this.mUnitIname",
            "json.uname;"
        ],
        [
            "this.mAbilityIname",
            "json.abid;"
        ],
        "#this.mLearnSkillLists.Clear();",
        "#return;",
        "#foreach(stringlqinjson.lqs)",
        "#this.mLearnSkillLists.Add(newCollaboSkillParam.LearnSkill(lq));"
    ],
    "CondEffectPara": [
        "#returnfalse;",
        [
            "this.iname",
            "json.iname;"
        ],
        [
            "this.job",
            "json.job;"
        ],
        [
            "this.buki",
            "json.buki;"
        ],
        [
            "this.birth",
            "json.birth;"
        ],
        [
            "this.sex",
            "(ESex)json.sex;"
        ],
        [
            "this.elem",
            "(EElement)json.elem;"
        ],
        [
            "this.cond",
            "(ESkillCondition)json.cond;"
        ],
        [
            "this.type",
            "(ConditionEffectTypes)json.type;"
        ],
        [
            "this.chk_target",
            "(EffectCheckTargets)json.chktgt;"
        ],
        [
            "this.chk_timing",
            "(EffectCheckTimings)json.timing;"
        ],
        [
            "this.value_ini",
            "(OInt)json.vini;"
        ],
        [
            "this.value_max",
            "(OInt)json.vmax;"
        ],
        [
            "this.rate_ini",
            "(OInt)json.rini;"
        ],
        [
            "this.rate_max",
            "(OInt)json.rmax;"
        ],
        [
            "this.turn_ini",
            "(OInt)json.tini;"
        ],
        [
            "this.turn_max",
            "(OInt)json.tmax;"
        ],
        [
            "this.curse",
            "(OInt)json.curse;"
        ],
        [
            "this.conditions",
            "newEUnitCondition[json.conds.Length];"
        ],
        [
            "this.conditions[index]",
            "(EUnitCondition)(1<<json.conds[index]);"
        ],
        [
            "this.v_poison_rate",
            "(OInt)json.v_poi;"
        ],
        [
            "this.v_poison_fix",
            "(OInt)json.v_poifix;"
        ],
        [
            "this.v_paralyse_rate",
            "(OInt)json.v_par;"
        ],
        [
            "this.v_blink_hit",
            "(OInt)json.v_blihit;"
        ],
        [
            "this.v_blink_avo",
            "(OInt)json.v_bliavo;"
        ],
        [
            "this.v_death_count",
            "(OInt)json.v_dea;"
        ],
        [
            "this.v_berserk_atk",
            "(OInt)json.v_beratk;"
        ],
        [
            "this.v_berserk_def",
            "(OInt)json.v_berdef;"
        ],
        [
            "this.v_fast",
            "(OInt)json.v_fast;"
        ],
        [
            "this.v_slow",
            "(OInt)json.v_slow;"
        ],
        [
            "this.v_donmov",
            "(OInt)json.v_don;"
        ],
        [
            "this.v_auto_hp_heal",
            "(OInt)json.v_ahp;"
        ],
        [
            "this.v_auto_mp_heal",
            "(OInt)json.v_amp;"
        ],
        [
            "this.v_auto_hp_heal_fix",
            "(OInt)json.v_ahpfix;"
        ],
        [
            "this.v_auto_mp_heal_fix",
            "(OInt)json.v_ampfix;"
        ],
        "#returntrue;"
    ],
    "EvaluationPara": [
        "#returnfalse;",
        [
            "this.iname",
            "json.iname;"
        ],
        [
            "this.value",
            "(OInt)json.val;"
        ],
        "#this.status.Clear();",
        [
            "this.status.hp",
            "(OInt)json.hp;"
        ],
        [
            "this.status.mp",
            "(OShort)json.mp;"
        ],
        [
            "this.status.atk",
            "(OShort)json.atk;"
        ],
        [
            "this.status.def",
            "(OShort)json.def;"
        ],
        [
            "this.status.mag",
            "(OShort)json.mag;"
        ],
        [
            "this.status.mnd",
            "(OShort)json.mnd;"
        ],
        [
            "this.status.dex",
            "(OShort)json.dex;"
        ],
        [
            "this.status.spd",
            "(OShort)json.spd;"
        ],
        [
            "this.status.cri",
            "(OShort)json.cri;"
        ],
        [
            "this.status.luk",
            "(OShort)json.luk;"
        ],
        "#returntrue;"
    ],
    "EventShopItemListSet[]shop": [
        "#returntrue;",
        "#this.items.Clear();",
        "#if(!eventShopItem.Deserialize(shopitems[index]))",
        "#returnfalse;",
        "#this.items.Add(eventShopItem);",
        "#returntrue;"
    ],
    "EventShopItemListSe": [
        "#returnfalse;",
        [
            "this.id",
            "json.id;"
        ],
        [
            "this.iname",
            "json.item.iname;"
        ],
        [
            "this.num",
            "json.item.num;"
        ],
        [
            "this.max_num",
            "json.item.maxnum;"
        ],
        [
            "this.bougthnum",
            "json.item.boughtnum;"
        ],
        [
            "this.saleValue",
            "json.cost.value;"
        ],
        [
            "this.saleType",
            "ShopData.String2SaleType(json.cost.type);"
        ],
        [
            "this.cost_iname",
            "json.cost.iname==null?GlobalVars.EventShopItem.shop_cost_iname:json.cost.iname;"
        ],
        "#returnfalse;",
        [
            "this.is_reset",
            "json.isreset==1;"
        ],
        [
            "this.is_soldout",
            "json.sold>0;"
        ],
        [
            "this.children",
            "json.children;"
        ],
        "#returntrue;"
    ],
    "EventTrigge": [
        "#returnfalse;",
        [
            "this.mTrigger",
            "(EEventTrigger)json.trg;"
        ],
        [
            "this.mEventType",
            "(EEventType)json.type;"
        ],
        [
            "this.mGimmickType",
            "(EEventGimmick)json.detail;"
        ],
        [
            "this.mStrValue",
            "json.sval;"
        ],
        [
            "this.mIntValue",
            "json.ival;"
        ],
        [
            "this.mCount",
            "json.cnt;"
        ],
        "#returntrue;"
    ],
    "FixPara": [
        "#returnfalse;",
        [
            "this.CriticalRate_Cri_Multiply",
            "(OInt)json.mulcri;"
        ],
        [
            "this.CriticalRate_Cri_Division",
            "(OInt)json.divcri;"
        ],
        [
            "this.CriticalRate_Luk_Multiply",
            "(OInt)json.mulluk;"
        ],
        [
            "this.CriticalRate_Luk_Division",
            "(OInt)json.divluk;"
        ],
        [
            "this.MinCriticalDamageRate",
            "(OInt)json.mincri;"
        ],
        [
            "this.MaxCriticalDamageRate",
            "(OInt)json.maxcri;"
        ],
        [
            "this.HighGridAtkRate",
            "(OInt)json.hatk;"
        ],
        [
            "this.HighGridDefRate",
            "(OInt)json.hdef;"
        ],
        [
            "this.HighGridCriRate",
            "(OInt)json.hcri;"
        ],
        [
            "this.DownGridAtkRate",
            "(OInt)json.datk;"
        ],
        [
            "this.DownGridDefRate",
            "(OInt)json.ddef;"
        ],
        [
            "this.DownGridCriRate",
            "(OInt)json.dcri;"
        ],
        [
            "this.ParalysedRate",
            "(OInt)json.paralyse;"
        ],
        [
            "this.PoisonDamageRate",
            "(OInt)json.poi_rate;"
        ],
        [
            "this.BlindnessHitRate",
            "(OInt)json.bli_hit;"
        ],
        [
            "this.BlindnessAvoidRate",
            "(OInt)json.bli_avo;"
        ],
        [
            "this.BerserkAtkRate",
            "(OInt)json.ber_atk;"
        ],
        [
            "this.BerserkDefRate",
            "(OInt)json.ber_def;"
        ],
        [
            "this.TokkouDamageRate",
            "(OInt)json.tk_rate;"
        ],
        [
            "this.AbilityRankUpCountCoin",
            "(OInt)json.abilupcoin;"
        ],
        [
            "this.AbilityRankUpCountMax",
            "(OInt)json.abilupmax;"
        ],
        [
            "this.AbilityRankUpCountRecoveryVal",
            "(OInt)json.abiluprec;"
        ],
        [
            "this.AbilityRankUpCountRecoverySec",
            "(OLong)((long)json.abilupsec);"
        ],
        [
            "this.StaminaRecoveryCoin",
            "(OInt)json.stmncoin;"
        ],
        [
            "this.StaminaRecoveryVal",
            "(OInt)json.stmnrec;"
        ],
        [
            "this.StaminaRecoverySec",
            "(OLong)((long)json.stmnsec);"
        ],
        [
            "this.StaminaStockCap",
            "(OInt)json.stmncap;"
        ],
        [
            "this.StaminaAdd",
            "(OInt)json.stmnadd;"
        ],
        [
            "this.StaminaAdd2",
            "(OInt)json.stmnadd2;"
        ],
        [
            "this.StaminaAddCost",
            "newOInt[json.stmncost.Length];"
        ],
        [
            "this.StaminaAddCost[index]",
            "(OInt)json.stmncost[index];"
        ],
        [
            "this.CaveStaminaMax",
            "(OInt)json.cavemax;"
        ],
        [
            "this.CaveStaminaRecoveryVal",
            "(OInt)json.caverec;"
        ],
        [
            "this.CaveStaminaRecoverySec",
            "(OLong)((long)json.cavesec);"
        ],
        [
            "this.CaveStaminaStockCap",
            "(OInt)json.cavecap;"
        ],
        [
            "this.CaveStaminaAdd",
            "(OInt)json.caveadd;"
        ],
        [
            "this.CaveStaminaAddCost",
            "newOInt[json.cavecost.Length];"
        ],
        [
            "this.CaveStaminaAddCost[index]",
            "(OInt)json.cavecost[index];"
        ],
        [
            "this.ChallengeArenaMax",
            "(OInt)json.arenamax;"
        ],
        [
            "this.ChallengeArenaCoolDownSec",
            "(OLong)((long)json.arenasec);"
        ],
        [
            "this.ArenaMedalMultipler",
            "(OInt)json.arenamedal;"
        ],
        [
            "this.ArenaCoinRewardMultipler",
            "(OInt)json.arenacoin;"
        ],
        [
            "this.ArenaResetCooldownCost",
            "(OInt)json.arenaccost;"
        ],
        [
            "this.ArenaResetTicketCost",
            "newOInt[json.arenatcost.Length];"
        ],
        [
            "this.ArenaResetTicketCost[index]",
            "(OInt)json.arenatcost[index];"
        ],
        [
            "this.ChallengeTourMax",
            "(OInt)json.tourmax;"
        ],
        [
            "this.ChallengeMultiMax",
            "(OInt)json.multimax;"
        ],
        [
            "this.AwakeRate",
            "(OInt)json.awakerate;"
        ],
        [
            "this.GemsGainNormalAttack",
            "(OInt)json.na_gems;"
        ],
        [
            "this.GemsGainSideAttack",
            "(OInt)json.sa_gems;"
        ],
        [
            "this.GemsGainBackAttack",
            "(OInt)json.ba_gems;"
        ],
        [
            "this.GemsGainWeakAttack",
            "(OInt)json.wa_gems;"
        ],
        [
            "this.GemsGainCriticalAttack",
            "(OInt)json.ca_gems;"
        ],
        [
            "this.GemsGainKillBonus",
            "(OInt)json.ki_gems;"
        ],
        [
            "this.GemsGainDiffFloorCount",
            "(OInt)json.di_gems_floor;"
        ],
        [
            "this.GemsGainDiffFloorMax",
            "(OInt)json.di_gems_max;"
        ],
        [
            "this.ElementResistUpRate",
            "(OInt)json.elem_up;"
        ],
        [
            "this.ElementResistDownRate",
            "(OInt)json.elem_down;"
        ],
        [
            "this.GemsGainValue",
            "(OInt)json.gems_gain;"
        ],
        [
            "this.GemsBuffValue",
            "(OInt)json.gems_buff;"
        ],
        [
            "this.GemsBuffTurn",
            "(OInt)json.gems_buff_turn;"
        ],
        [
            "this.ContinueCoinCost",
            "(OInt)json.continue_cost;"
        ],
        [
            "this.ContinueCoinCostMulti",
            "(OInt)json.continue_cost_multi;"
        ],
        [
            "this.ContinueCoinCostMultiTower",
            "(OInt)json.continue_cost_multitower;"
        ],
        [
            "this.AvoidBaseRate",
            "(OInt)json.avoid_rate;"
        ],
        [
            "this.AvoidParamScale",
            "(OInt)json.avoid_scale;"
        ],
        [
            "this.MaxAvoidRate",
            "(OInt)json.avoid_rate_max;"
        ],
        [
            "this.ShopUpdateTime",
            "newOInt[json.shop_update_time.Length];"
        ],
        [
            "this.ShopUpdateTime[index]",
            "(OInt)json.shop_update_time[index];"
        ],
        [
            "this.Products",
            "newOString[json.products.Length];"
        ],
        [
            "this.Products[index]",
            "(OString)json.products[index];"
        ],
        [
            "this.VipCardProduct",
            "(OString)json.vip_product;"
        ],
        [
            "this.VipCardDate",
            "(OInt)json.vip_date;"
        ],
        [
            "this.FreeGachaGoldMax",
            "(OInt)json.ggmax;"
        ],
        [
            "this.FreeGachaGoldCoolDownSec",
            "(OLong)((long)json.ggsec);"
        ],
        [
            "this.FreeGachaCoinCoolDownSec",
            "(OLong)((long)json.cgsec);"
        ],
        [
            "this.BuyGoldCost",
            "(OInt)json.buygoldcost;"
        ],
        [
            "this.BuyGoldAmount",
            "(OInt)json.buygold;"
        ],
        [
            "this.SupportCost",
            "(OInt)json.sp_cost;"
        ],
        [
            "this.ChallengeEliteMax",
            "(OInt)json.elitemax;"
        ],
        [
            "this.EliteResetMax",
            "(OInt)json.elite_reset_max;"
        ],
        [
            "this.EliteResetCosts",
            "newOInt[json.elite_reset_cost.Length];"
        ],
        [
            "this.EliteResetCosts[index]",
            "(OInt)json.elite_reset_cost[index];"
        ],
        "#if(!this.DefaultCondTurns.ContainsKey(EUnitCondition.Poison))",
        "#this.DefaultCondTurns.Add(EUnitCondition.Poison,(OInt)0);",
        "#if(!this.DefaultCondTurns.ContainsKey(EUnitCondition.Paralysed))",
        "#this.DefaultCondTurns.Add(EUnitCondition.Paralysed,(OInt)0);",
        "#if(!this.DefaultCondTurns.ContainsKey(EUnitCondition.Stun))",
        "#this.DefaultCondTurns.Add(EUnitCondition.Stun,(OInt)0);",
        "#if(!this.DefaultCondTurns.ContainsKey(EUnitCondition.Sleep))",
        "#this.DefaultCondTurns.Add(EUnitCondition.Sleep,(OInt)0);",
        "#if(!this.DefaultCondTurns.ContainsKey(EUnitCondition.Charm))",
        "#this.DefaultCondTurns.Add(EUnitCondition.Charm,(OInt)0);",
        "#if(!this.DefaultCondTurns.ContainsKey(EUnitCondition.Stone))",
        "#this.DefaultCondTurns.Add(EUnitCondition.Stone,(OInt)0);",
        "#if(!this.DefaultCondTurns.ContainsKey(EUnitCondition.Blindness))",
        "#this.DefaultCondTurns.Add(EUnitCondition.Blindness,(OInt)0);",
        "#if(!this.DefaultCondTurns.ContainsKey(EUnitCondition.DisableSkill))",
        "#this.DefaultCondTurns.Add(EUnitCondition.DisableSkill,(OInt)0);",
        "#if(!this.DefaultCondTurns.ContainsKey(EUnitCondition.DisableMove))",
        "#this.DefaultCondTurns.Add(EUnitCondition.DisableMove,(OInt)0);",
        "#if(!this.DefaultCondTurns.ContainsKey(EUnitCondition.DisableAttack))",
        "#this.DefaultCondTurns.Add(EUnitCondition.DisableAttack,(OInt)0);",
        "#if(!this.DefaultCondTurns.ContainsKey(EUnitCondition.Zombie))",
        "#this.DefaultCondTurns.Add(EUnitCondition.Zombie,(OInt)0);",
        "#if(!this.DefaultCondTurns.ContainsKey(EUnitCondition.DeathSentence))",
        "#this.DefaultCondTurns.Add(EUnitCondition.DeathSentence,(OInt)0);",
        "#if(!this.DefaultCondTurns.ContainsKey(EUnitCondition.Berserk))",
        "#this.DefaultCondTurns.Add(EUnitCondition.Berserk,(OInt)0);",
        "#if(!this.DefaultCondTurns.ContainsKey(EUnitCondition.DisableKnockback))",
        "#this.DefaultCondTurns.Add(EUnitCondition.DisableKnockback,(OInt)0);",
        "#if(!this.DefaultCondTurns.ContainsKey(EUnitCondition.DisableBuff))",
        "#this.DefaultCondTurns.Add(EUnitCondition.DisableBuff,(OInt)0);",
        "#if(!this.DefaultCondTurns.ContainsKey(EUnitCondition.DisableDebuff))",
        "#this.DefaultCondTurns.Add(EUnitCondition.DisableDebuff,(OInt)0);",
        "#if(!this.DefaultCondTurns.ContainsKey(EUnitCondition.Stop))",
        "#this.DefaultCondTurns.Add(EUnitCondition.Stop,(OInt)0);",
        "#if(!this.DefaultCondTurns.ContainsKey(EUnitCondition.Fast))",
        "#this.DefaultCondTurns.Add(EUnitCondition.Fast,(OInt)0);",
        "#if(!this.DefaultCondTurns.ContainsKey(EUnitCondition.Slow))",
        "#this.DefaultCondTurns.Add(EUnitCondition.Slow,(OInt)0);",
        "#if(!this.DefaultCondTurns.ContainsKey(EUnitCondition.AutoHeal))",
        "#this.DefaultCondTurns.Add(EUnitCondition.AutoHeal,(OInt)0);",
        "#if(!this.DefaultCondTurns.ContainsKey(EUnitCondition.Donsoku))",
        "#this.DefaultCondTurns.Add(EUnitCondition.Donsoku,(OInt)0);",
        "#if(!this.DefaultCondTurns.ContainsKey(EUnitCondition.Rage))",
        "#this.DefaultCondTurns.Add(EUnitCondition.Rage,(OInt)0);",
        "#if(!this.DefaultCondTurns.ContainsKey(EUnitCondition.GoodSleep))",
        "#this.DefaultCondTurns.Add(EUnitCondition.GoodSleep,(OInt)0);",
        "#if(!this.DefaultCondTurns.ContainsKey(EUnitCondition.AutoJewel))",
        "#this.DefaultCondTurns.Add(EUnitCondition.AutoJewel,(OInt)0);",
        "#if(!this.DefaultCondTurns.ContainsKey(EUnitCondition.DisableHeal))",
        "#this.DefaultCondTurns.Add(EUnitCondition.DisableHeal,(OInt)0);",
        "#if(!this.DefaultCondTurns.ContainsKey(EUnitCondition.DisableSingleAttack))",
        "#this.DefaultCondTurns.Add(EUnitCondition.DisableSingleAttack,(OInt)0);",
        "#if(!this.DefaultCondTurns.ContainsKey(EUnitCondition.DisableAreaAttack))",
        "#this.DefaultCondTurns.Add(EUnitCondition.DisableAreaAttack,(OInt)0);",
        "#if(!this.DefaultCondTurns.ContainsKey(EUnitCondition.DisableDecCT))",
        "#this.DefaultCondTurns.Add(EUnitCondition.DisableDecCT,(OInt)0);",
        "#if(!this.DefaultCondTurns.ContainsKey(EUnitCondition.DisableIncCT))",
        "#this.DefaultCondTurns.Add(EUnitCondition.DisableIncCT,(OInt)0);",
        [
            "this.DefaultCondTurns[EUnitCondition.Poison]",
            "(OInt)json.ct_poi;"
        ],
        [
            "this.DefaultCondTurns[EUnitCondition.Paralysed]",
            "(OInt)json.ct_par;"
        ],
        [
            "this.DefaultCondTurns[EUnitCondition.Stun]",
            "(OInt)json.ct_stu;"
        ],
        [
            "this.DefaultCondTurns[EUnitCondition.Sleep]",
            "(OInt)json.ct_sle;"
        ],
        [
            "this.DefaultCondTurns[EUnitCondition.Charm]",
            "(OInt)json.st_cha;"
        ],
        [
            "this.DefaultCondTurns[EUnitCondition.Stone]",
            "(OInt)json.ct_sto;"
        ],
        [
            "this.DefaultCondTurns[EUnitCondition.Blindness]",
            "(OInt)json.ct_bli;"
        ],
        [
            "this.DefaultCondTurns[EUnitCondition.DisableSkill]",
            "(OInt)json.ct_dsk;"
        ],
        [
            "this.DefaultCondTurns[EUnitCondition.DisableMove]",
            "(OInt)json.ct_dmo;"
        ],
        [
            "this.DefaultCondTurns[EUnitCondition.DisableAttack]",
            "(OInt)json.ct_dat;"
        ],
        [
            "this.DefaultCondTurns[EUnitCondition.Zombie]",
            "(OInt)json.ct_zom;"
        ],
        [
            "this.DefaultCondTurns[EUnitCondition.DeathSentence]",
            "(OInt)json.ct_dea;"
        ],
        [
            "this.DefaultCondTurns[EUnitCondition.Berserk]",
            "(OInt)json.ct_ber;"
        ],
        [
            "this.DefaultCondTurns[EUnitCondition.DisableKnockback]",
            "(OInt)json.ct_dkn;"
        ],
        [
            "this.DefaultCondTurns[EUnitCondition.DisableBuff]",
            "(OInt)json.ct_dbu;"
        ],
        [
            "this.DefaultCondTurns[EUnitCondition.DisableDebuff]",
            "(OInt)json.ct_ddb;"
        ],
        [
            "this.DefaultCondTurns[EUnitCondition.Stop]",
            "(OInt)json.ct_stop;"
        ],
        [
            "this.DefaultCondTurns[EUnitCondition.Fast]",
            "(OInt)json.ct_fast;"
        ],
        [
            "this.DefaultCondTurns[EUnitCondition.Slow]",
            "(OInt)json.ct_slow;"
        ],
        [
            "this.DefaultCondTurns[EUnitCondition.AutoHeal]",
            "(OInt)json.ct_ahe;"
        ],
        [
            "this.DefaultCondTurns[EUnitCondition.Donsoku]",
            "(OInt)json.ct_don;"
        ],
        [
            "this.DefaultCondTurns[EUnitCondition.Rage]",
            "(OInt)json.ct_rag;"
        ],
        [
            "this.DefaultCondTurns[EUnitCondition.GoodSleep]",
            "(OInt)json.ct_gsl;"
        ],
        [
            "this.DefaultCondTurns[EUnitCondition.AutoJewel]",
            "(OInt)json.ct_aje;"
        ],
        [
            "this.DefaultCondTurns[EUnitCondition.DisableHeal]",
            "(OInt)json.ct_dhe;"
        ],
        [
            "this.DefaultCondTurns[EUnitCondition.DisableSingleAttack]",
            "(OInt)json.ct_dsa;"
        ],
        [
            "this.DefaultCondTurns[EUnitCondition.DisableAreaAttack]",
            "(OInt)json.ct_daa;"
        ],
        [
            "this.DefaultCondTurns[EUnitCondition.DisableDecCT]",
            "(OInt)json.ct_ddc;"
        ],
        [
            "this.DefaultCondTurns[EUnitCondition.DisableIncCT]",
            "(OInt)json.ct_dic;"
        ],
        [
            "this.RandomEffectMax",
            "(OInt)json.yuragi;"
        ],
        [
            "this.ChargeTimeMax",
            "(OInt)json.ct_max;"
        ],
        [
            "this.ChargeTimeDecWait",
            "(OInt)json.ct_wait;"
        ],
        [
            "this.ChargeTimeDecMove",
            "(OInt)json.ct_mov;"
        ],
        [
            "this.ChargeTimeDecAction",
            "(OInt)json.ct_act;"
        ],
        [
            "this.AddHitRateSide",
            "(OInt)json.hit_side;"
        ],
        [
            "this.AddHitRateBack",
            "(OInt)json.hit_back;"
        ],
        [
            "this.HpAutoHealRate",
            "(OInt)json.ahhp_rate;"
        ],
        [
            "this.MpAutoHealRate",
            "(OInt)json.ahmp_rate;"
        ],
        [
            "this.GoodSleepHpHealRate",
            "(OInt)json.gshp_rate;"
        ],
        [
            "this.GoodSleepMpHealRate",
            "(OInt)json.gsmp_rate;"
        ],
        [
            "this.HpDyingRate",
            "(OInt)json.dy_rate;"
        ],
        [
            "this.ZeneiSupportSkillRate",
            "(OInt)json.zsup_rate;"
        ],
        [
            "this.BeginnerDays",
            "(OInt)json.beginner_days;"
        ],
        [
            "this.ArtifactBoxCap",
            "(OInt)json.afcap;"
        ],
        [
            "this.CommonPieceFire",
            "(OString)json.cmn_pi_fire;"
        ],
        [
            "this.CommonPieceWater",
            "(OString)json.cmn_pi_water;"
        ],
        [
            "this.CommonPieceThunder",
            "(OString)json.cmn_pi_thunder;"
        ],
        [
            "this.CommonPieceWind",
            "(OString)json.cmn_pi_wind;"
        ],
        [
            "this.CommonPieceShine",
            "(OString)json.cmn_pi_shine;"
        ],
        [
            "this.CommonPieceDark",
            "(OString)json.cmn_pi_dark;"
        ],
        [
            "this.CommonPieceAll",
            "(OString)json.cmn_pi_all;"
        ],
        [
            "this.PartyNumNormal",
            "json.ptnum_nml;"
        ],
        [
            "this.PartyNumEvent",
            "json.ptnum_evnt;"
        ],
        [
            "this.PartyNumMulti",
            "json.ptnum_mlt;"
        ],
        [
            "this.PartyNumArenaAttack",
            "json.ptnum_aatk;"
        ],
        [
            "this.PartyNumArenaDefense",
            "json.ptnum_adef;"
        ],
        [
            "this.PartyNumChQuest",
            "json.ptnum_chq;"
        ],
        [
            "this.PartyNumTower",
            "json.ptnum_tow;"
        ],
        [
            "this.PartyNumVersus",
            "json.ptnum_vs;"
        ],
        [
            "this.PartyNumMultiTower",
            "json.ptnum_mt;"
        ],
        [
            "this.IsDisableSuspend",
            "(OBool)(json.notsus!=0);"
        ],
        [
            "this.SuspendSaveInterval",
            "(OInt)json.sus_int;"
        ],
        [
            "this.IsJobMaster",
            "json.jobms!=0;"
        ],
        [
            "this.DefaultDeathCount",
            "(OInt)json.death_count;"
        ],
        [
            "this.DefaultClockUpValue",
            "(OInt)json.fast_val;"
        ],
        [
            "this.DefaultClockDownValue",
            "(OInt)json.slow_val;"
        ],
        [
            "this.EquipArtifactSlotUnlock",
            "newOInt[json.equip_artifact_slot_unlock.Length];"
        ],
        [
            "this.EquipArtifactSlotUnlock[index]",
            "(OInt)json.equip_artifact_slot_unlock[index];"
        ],
        [
            "this.KnockBackHeight",
            "(OInt)json.kb_gh;"
        ],
        [
            "this.ThrowHeight",
            "(OInt)json.th_gh;"
        ],
        [
            "this.ArtifactRarePiece",
            "newOString[json.art_rare_pi.Length];"
        ],
        [
            "this.ArtifactRarePiece[index]",
            "(OString)json.art_rare_pi[index];"
        ],
        [
            "this.ArtifactCommonPiece",
            "(OString)json.art_cmn_pi;"
        ],
        [
            "this.SoulCommonPiece",
            "this.ConvertOStringArray(json.soul_rare);"
        ],
        [
            "this.EquipCommonPiece",
            "this.ConvertOStringArray(json.equ_rare_pi);"
        ],
        [
            "this.EquipCommonPieceNum",
            "this.ConvertOIntArray(json.equ_rare_pi_use);"
        ],
        [
            "this.EquipCommonPieceCost",
            "this.ConvertOIntArray(json.equ_rare_cost);"
        ],
        [
            "this.EquipCmn",
            "this.ConvertOStringArray(json.equip_cmn);"
        ],
        [
            "this.AudienceMax",
            "(OInt)json.aud_max;"
        ],
        [
            "this.AbilityRankUpPointMax",
            "(OInt)json.ab_rankup_max;"
        ],
        [
            "this.AbilityRankUpPointAddMax",
            "(OInt)json.ab_rankup_addmax;"
        ],
        [
            "this.AbilityRankupPointCoinRate",
            "(OInt)json.ab_coin_convert;"
        ],
        [
            "this.FirstFriendMax",
            "(OInt)json.firstfriend_max;"
        ],
        [
            "this.FirstFriendCoin",
            "(OInt)json.firstfriend_coin;"
        ],
        [
            "this.CombinationRate",
            "(OInt)json.cmb_rate;"
        ],
        [
            "this.WeakUpRate",
            "(OInt)json.weak_up;"
        ],
        [
            "this.ResistDownRate",
            "(OInt)json.resist_dw;"
        ],
        "#returntrue;"
    ],
    "ReqTowerResupons": [
        "#towerResuponse.Deserialize(json);"
    ],
    "FriendPresentItemPara": [
        "#thrownewInvalidJSONException();",
        [
            "this.m_Id",
            "json.iname;"
        ],
        [
            "this.m_Name",
            "json.name;"
        ],
        [
            "this.m_Expr",
            "json.expr;"
        ],
        "#if(!string.IsNullOrEmpty(json.item)&&UnityEngine.Object.op_Inequality((UnityEngine.Object)MonoSingleton<GameManager>.Instance,(UnityEngine.Object)null))",
        [
            "this.m_Item",
            "MonoSingleton<GameManager>.Instance.GetItemParam(json.item);"
        ],
        [
            "this.m_Num",
            "json.num;"
        ],
        [
            "this.m_Zeny",
            "json.zeny;"
        ],
        "#try",
        "#if(!string.IsNullOrEmpty(json.begin_at))",
        [
            "this.m_BeginAt",
            "TimeManager.GetUnixSec(DateTime.Parse(json.begin_at));"
        ],
        "#if(!string.IsNullOrEmpty(json.end_at))",
        [
            "this.m_EndAt",
            "TimeManager.GetUnixSec(DateTime.Parse(json.end_at));"
        ],
        "#return;",
        "#catch(Exceptionex)",
        "#DebugUtility.LogError(ex.ToString());"
    ],
    "MasterPara": [
        "#if(this.Loaded)",
        "#returntrue;",
        "#DebugUtility.Verify((object)json,typeof(JSON_MasterParam));",
        "#this.mFixParam.Deserialize(json.Fix[0]);",
        [
            "this.mUnitParam",
            "newList<UnitParam>(json.Unit.Length);"
        ],
        [
            "this.mUnitDictionary",
            "newDictionary<string,UnitParam>(json.Unit.Length);"
        ],
        "#//ISSUE:objectofacompiler-generatedtypeiscreated",
        "#//ISSUE:variableofacompiler-generatedtype",
        "#//ISSUE:referencetoacompiler-generatedfield",
        "#//ISSUE:referencetoacompiler-generatedmethod",
        "#this.mUnitParam.Add(unitParam);",
        "#//ISSUE:referencetoacompiler-generatedfield",
        "#unitParam.Deserialize(deserializeCAnonStorey21B.data);",
        "#//ISSUE:referencetoacompiler-generatedfield",
        "#if(this.mUnitDictionary.ContainsKey(deserializeCAnonStorey21B.data.iname))",
        "#//ISSUE:referencetoacompiler-generatedfield",
        "#thrownewException(\"重複エラー：Unit[\"+deserializeCAnonStorey21B.data.iname+\"]\");",
        "#//ISSUE:referencetoacompiler-generatedfield",
        "#this.mUnitDictionary.Add(deserializeCAnonStorey21B.data.iname,unitParam);",
        [
            "this.mSkillParam",
            "newList<SkillParam>(json.Skill.Length);"
        ],
        [
            "this.mSkillDictionary",
            "newDictionary<string,SkillParam>(json.Skill.Length);"
        ],
        "#//ISSUE:objectofacompiler-generatedtypeiscreated",
        "#//ISSUE:variableofacompiler-generatedtype",
        "#//ISSUE:referencetoacompiler-generatedfield",
        "#//ISSUE:referencetoacompiler-generatedmethod",
        "#this.mSkillParam.Add(skillParam);",
        "#//ISSUE:referencetoacompiler-generatedfield",
        "#skillParam.Deserialize(deserializeCAnonStorey21C.data);",
        "#//ISSUE:referencetoacompiler-generatedfield",
        "#if(this.mSkillDictionary.ContainsKey(deserializeCAnonStorey21C.data.iname))",
        "#//ISSUE:referencetoacompiler-generatedfield",
        "#thrownewException(\"重複エラー：Skill[\"+deserializeCAnonStorey21C.data.iname+\"]\");",
        "#//ISSUE:referencetoacompiler-generatedfield",
        "#this.mSkillDictionary.Add(deserializeCAnonStorey21C.data.iname,skillParam);",
        "#SkillParam.UpdateReplaceSkill(this.mSkillParam);",
        [
            "this.mBuffEffectParam",
            "newList<BuffEffectParam>(json.Buff.Length);"
        ],
        "#//ISSUE:objectofacompiler-generatedtypeiscreated",
        "#//ISSUE:variableofacompiler-generatedtype",
        "#//ISSUE:referencetoacompiler-generatedfield",
        "#//ISSUE:referencetoacompiler-generatedmethod",
        "#this.mBuffEffectParam.Add(buffEffectParam);",
        "#//ISSUE:referencetoacompiler-generatedfield",
        "#buffEffectParam.Deserialize(deserializeCAnonStorey21D.data);",
        [
            "this.mCondEffectParam",
            "newList<CondEffectParam>(json.Cond.Length);"
        ],
        "#//ISSUE:objectofacompiler-generatedtypeiscreated",
        "#//ISSUE:variableofacompiler-generatedtype",
        "#//ISSUE:referencetoacompiler-generatedfield",
        "#//ISSUE:referencetoacompiler-generatedmethod",
        "#this.mCondEffectParam.Add(condEffectParam);",
        "#//ISSUE:referencetoacompiler-generatedfield",
        "#condEffectParam.Deserialize(deserializeCAnonStorey21E.data);",
        [
            "this.mAbilityParam",
            "newList<AbilityParam>(json.Ability.Length);"
        ],
        [
            "this.mAbilityDictionary",
            "newDictionary<string,AbilityParam>(json.Ability.Length);"
        ],
        "#//ISSUE:objectofacompiler-generatedtypeiscreated",
        "#//ISSUE:variableofacompiler-generatedtype",
        "#//ISSUE:referencetoacompiler-generatedfield",
        "#//ISSUE:referencetoacompiler-generatedmethod",
        "#this.mAbilityParam.Add(abilityParam);",
        "#//ISSUE:referencetoacompiler-generatedfield",
        "#abilityParam.Deserialize(deserializeCAnonStorey21F.data);",
        "#//ISSUE:referencetoacompiler-generatedfield",
        "#if(this.mAbilityDictionary.ContainsKey(deserializeCAnonStorey21F.data.iname))",
        "#//ISSUE:referencetoacompiler-generatedfield",
        "#thrownewException(\"重複エラー：Ability[\"+deserializeCAnonStorey21F.data.iname+\"]\");",
        "#//ISSUE:referencetoacompiler-generatedfield",
        "#this.mAbilityDictionary.Add(deserializeCAnonStorey21F.data.iname,abilityParam);",
        [
            "this.mItemParam",
            "newList<ItemParam>(json.Item.Length);"
        ],
        [
            "this.mItemDictionary",
            "newDictionary<string,ItemParam>(json.Item.Length);"
        ],
        "#//ISSUE:objectofacompiler-generatedtypeiscreated",
        "#//ISSUE:variableofacompiler-generatedtype",
        "#//ISSUE:referencetoacompiler-generatedfield",
        "#//ISSUE:referencetoacompiler-generatedmethod",
        "#this.mItemParam.Add(itemParam);",
        "#//ISSUE:referencetoacompiler-generatedfield",
        "#itemParam.Deserialize(deserializeCAnonStorey220.data);",
        "#//ISSUE:referencetoacompiler-generatedfield",
        "#if(this.mItemDictionary.ContainsKey(deserializeCAnonStorey220.data.iname))",
        "#//ISSUE:referencetoacompiler-generatedfield",
        "#thrownewException(\"重複エラー：Item[\"+deserializeCAnonStorey220.data.iname+\"]\");",
        "#//ISSUE:referencetoacompiler-generatedfield",
        "#this.mItemDictionary.Add(deserializeCAnonStorey220.data.iname,itemParam);",
        "#this.AddUnitToItem();",
        [
            "this.mArtifactParam",
            "newList<ArtifactParam>(json.Artifact.Length);"
        ],
        [
            "this.mArtifactDictionary",
            "newDictionary<string,ArtifactParam>(json.Artifact.Length);"
        ],
        "#//ISSUE:objectofacompiler-generatedtypeiscreated",
        "#//ISSUE:variableofacompiler-generatedtype",
        "#//ISSUE:referencetoacompiler-generatedfield",
        "#//ISSUE:referencetoacompiler-generatedfield",
        "#//ISSUE:referencetoacompiler-generatedmethod",
        "#this.mArtifactParam.Add(artifactParam);",
        "#//ISSUE:referencetoacompiler-generatedfield",
        "#artifactParam.Deserialize(deserializeCAnonStorey221.data);",
        "#//ISSUE:referencetoacompiler-generatedfield",
        "#if(this.mArtifactDictionary.ContainsKey(deserializeCAnonStorey221.data.iname))",
        "#//ISSUE:referencetoacompiler-generatedfield",
        "#thrownewException(\"重複エラー：Artifact[\"+deserializeCAnonStorey221.data.iname+\"]\");",
        "#//ISSUE:referencetoacompiler-generatedfield",
        "#this.mArtifactDictionary.Add(deserializeCAnonStorey221.data.iname,artifactParam);",
        [
            "this.mWeaponParam",
            "newList<WeaponParam>(json.Weapon.Length);"
        ],
        "#//ISSUE:objectofacompiler-generatedtypeiscreated",
        "#//ISSUE:variableofacompiler-generatedtype",
        "#//ISSUE:referencetoacompiler-generatedfield",
        "#//ISSUE:referencetoacompiler-generatedmethod",
        "#this.mWeaponParam.Add(weaponParam);",
        "#//ISSUE:referencetoacompiler-generatedfield",
        "#weaponParam.Deserialize(deserializeCAnonStorey222.data);",
        [
            "this.mRecipeParam",
            "newList<RecipeParam>(json.Recipe.Length);"
        ],
        "#this.mRecipeParam.Add(recipeParam);",
        "#recipeParam.Deserialize(json1);",
        [
            "this.mJobParam",
            "newList<JobParam>(json.Job.Length);"
        ],
        "#//ISSUE:objectofacompiler-generatedtypeiscreated",
        "#//ISSUE:variableofacompiler-generatedtype",
        "#//ISSUE:referencetoacompiler-generatedfield",
        "#//ISSUE:referencetoacompiler-generatedmethod",
        "#this.mJobParam.Add(jobParam);",
        "#//ISSUE:referencetoacompiler-generatedfield",
        "#//ISSUE:referencetoacompiler-generatedfield",
        "#jobParam.Deserialize(deserializeCAnonStorey223.data);",
        [
            "this.mJobSetParam",
            "newList<JobSetParam>(json.JobSet.Length);"
        ],
        [
            "this.mJobsetDictionary",
            "newDictionary<string,List<JobSetParam>>(json.Unit.Length);"
        ],
        "#//ISSUE:objectofacompiler-generatedtypeiscreated",
        "#//ISSUE:variableofacompiler-generatedtype",
        "#//ISSUE:referencetoacompiler-generatedfield",
        "#//ISSUE:referencetoacompiler-generatedmethod",
        "#this.mJobSetParam.Add(jobSetParam);",
        "#//ISSUE:referencetoacompiler-generatedfield",
        "#jobSetParam.Deserialize(deserializeCAnonStorey224.data);",
        "#if(!string.IsNullOrEmpty(jobSetParam.target_unit))",
        "#List<JobSetParam>jobSetParamList;",
        "#if(this.mJobsetDictionary.ContainsKey(jobSetParam.target_unit))",
        "#else",
        "#this.mJobsetDictionary.Add(jobSetParam.target_unit,jobSetParamList);",
        "#jobSetParamList.Add(jobSetParam);",
        [
            "this.mGrowParam",
            "newList<GrowParam>(json.Grow.Length);"
        ],
        "#//ISSUE:objectofacompiler-generatedtypeiscreated",
        "#//ISSUE:variableofacompiler-generatedtype",
        "#//ISSUE:referencetoacompiler-generatedfield",
        "#//ISSUE:referencetoacompiler-generatedmethod",
        "#this.mGrowParam.Add(growParam);",
        "#//ISSUE:referencetoacompiler-generatedfield",
        "#growParam.Deserialize(deserializeCAnonStorey225.data);",
        [
            "this.mAIParam",
            "newList<AIParam>(json.AI.Length);"
        ],
        "#//ISSUE:objectofacompiler-generatedtypeiscreated",
        "#//ISSUE:variableofacompiler-generatedtype",
        "#//ISSUE:referencetoacompiler-generatedfield",
        "#//ISSUE:referencetoacompiler-generatedmethod",
        "#this.mAIParam.Add(aiParam);",
        "#//ISSUE:referencetoacompiler-generatedfield",
        "#aiParam.Deserialize(deserializeCAnonStorey226.data);",
        [
            "this.mGeoParam",
            "newList<GeoParam>(json.Geo.Length);"
        ],
        "#//ISSUE:objectofacompiler-generatedtypeiscreated",
        "#//ISSUE:variableofacompiler-generatedtype",
        "#//ISSUE:referencetoacompiler-generatedfield",
        "#//ISSUE:referencetoacompiler-generatedmethod",
        "#this.mGeoParam.Add(geoParam);",
        "#//ISSUE:referencetoacompiler-generatedfield",
        "#geoParam.Deserialize(deserializeCAnonStorey227.data);",
        [
            "this.mRarityParam",
            "newList<RarityParam>(json.Rarity.Length);"
        ],
        "#RarityParamrarityParam;",
        "#if(this.mRarityParam.Count>index)",
        "#else",
        "#this.mRarityParam.Add(rarityParam);",
        "#rarityParam.Deserialize(json.Rarity[index]);",
        [
            "this.mShopParam",
            "newList<ShopParam>(json.Shop.Length);"
        ],
        "#ShopParamshopParam;",
        "#if(this.mShopParam.Count>index)",
        "#else",
        "#this.mShopParam.Add(shopParam);",
        "#shopParam.Deserialize(json.Shop[index]);",
        [
            "this.mPlayerParamTbl",
            "newPlayerParam[json.Player.Length];"
        ],
        "#this.mPlayerParamTbl[index].Deserialize(json1);",
        [
            "this.mPlayerExpTbl",
            "newOInt[json.PlayerLvTbl.Length];"
        ],
        [
            "this.mPlayerExpTbl[index]",
            "(OInt)json.PlayerLvTbl[index];"
        ],
        [
            "this.mUnitExpTbl",
            "newOInt[json.UnitLvTbl.Length];"
        ],
        [
            "this.mUnitExpTbl[index]",
            "(OInt)json.UnitLvTbl[index];"
        ],
        [
            "this.mArtifactExpTbl",
            "newOInt[json.ArtifactLvTbl.Length];"
        ],
        [
            "this.mArtifactExpTbl[index]",
            "(OInt)json.ArtifactLvTbl[index];"
        ],
        [
            "this.mAbilityExpTbl",
            "newOInt[json.AbilityRank.Length];"
        ],
        [
            "this.mAbilityExpTbl[index]",
            "(OInt)json.AbilityRank[index];"
        ],
        [
            "this.mAwakePieceTbl",
            "newOInt[json.AwakePieceTbl.Length];"
        ],
        [
            "this.mAwakePieceTbl[index]",
            "(OInt)json.AwakePieceTbl[index];"
        ],
        [
            "this.mLocalNotificationParam.msg_stamina",
            "json.LocalNotification[0].msg_stamina;"
        ],
        [
            "this.mLocalNotificationParam.iOSAct_stamina",
            "json.LocalNotification[0].iOSAct_stamina;"
        ],
        [
            "this.mLocalNotificationParam.limitSec_stamina",
            "json.LocalNotification[0].limitSec_stamina;"
        ],
        "#if(trophyCategoryParam.Deserialize(json.TrophyCategory[index]))",
        "#trophyCategoryParamList.Add(trophyCategoryParam);",
        "#if(!dictionary.ContainsKey(trophyCategoryParam.hash_code))",
        "#dictionary.Add(trophyCategoryParam.hash_code,trophyCategoryParam);",
        "#if(trophyParam.Deserialize(json.Trophy[index]))",
        "#if(dictionary.ContainsKey(trophyParam.category_hash_code))",
        "#else",
        "#if(trophyParam.IsPlanningToUse())",
        "#trophyParamList.Add(trophyParam);",
        "#foreach(TrophyParamtrophyParaminthis.mTrophy)",
        "#this.mTrophyInameDict.Add(trophyParam.iname,trophyParam);",
        "#if(challengeCategoryParam.Deserialize(json.ChallengeCategory[index]))",
        "#challengeCategoryParamList.Add(challengeCategoryParam);",
        "#if(trophyParam.Deserialize(json.Challenge[index]))",
        "#trophyParamList.Add(trophyParam);",
        "#Array.Resize<TrophyParam>(refthis.mTrophy,length+this.mChallenge.Length);",
        "#Array.Copy((Array)this.mChallenge,0,(Array)this.mTrophy,length,this.mChallenge.Length);",
        "#foreach(TrophyParamtrophyParaminthis.mChallenge)",
        "#this.mTrophyInameDict.Add(trophyParam.iname,trophyParam);",
        "#this.CreateTrophyDict();",
        "#if(unlockParam.Deserialize(json.Unlock[index]))",
        "#unlockParamList.Add(unlockParam);",
        "#if(vipParam.Deserialize(json.Vip[index]))",
        "#vipParamList.Add(vipParam);",
        [
            "this.mStreamingMovies",
            "newJSON_StreamingMovie[json.Mov.Length];"
        ],
        [
            "this.mStreamingMovies[index].alias",
            "json.Mov[index].alias;"
        ],
        [
            "this.mStreamingMovies[index].path",
            "json.Mov[index].path;"
        ],
        "#if(bannerParam.Deserialize(json.Banner[index]))",
        "#bannerParamList.Add(bannerParam);",
        "#this.mJobParam[index].UpdateJobRankTransfarStatus(this);",
        "#unlockUnitDataParam.Deserialize(json.QuestClearUnlockUnitData[index]);",
        "#unlockUnitDataParamList.Add(unlockUnitDataParam);",
        [
            "this.mAwardParam",
            "newList<AwardParam>(json.Award.Length);"
        ],
        [
            "this.mAwardDictionary",
            "newDictionary<string,AwardParam>(json.Award.Length);"
        ],
        "#//ISSUE:objectofacompiler-generatedtypeiscreated",
        "#//ISSUE:variableofacompiler-generatedtype",
        "#//ISSUE:referencetoacompiler-generatedfield",
        "#//ISSUE:referencetoacompiler-generatedfield",
        "#//ISSUE:referencetoacompiler-generatedmethod",
        "#this.mAwardParam.Add(awardParam);",
        "#//ISSUE:referencetoacompiler-generatedfield",
        "#awardParam.Deserialize(deserializeCAnonStorey228.data);",
        "#if(this.mAwardDictionary.ContainsKey(awardParam.iname))",
        "#thrownewException(\"Overlap:Award[\"+awardParam.iname+\"]\");",
        "#this.mAwardDictionary.Add(awardParam.iname,awardParam);",
        "#if(loginInfoParam.Deserialize(json.LoginInfo[index]))",
        "#loginInfoParamList.Add(loginInfoParam);",
        "#collaboSkillParam.Deserialize(json.CollaboSkill[index]);",
        "#collaboSkillParamList.Add(collaboSkillParam);",
        "#CollaboSkillParam.UpdateCollaboSkill(this.mCollaboSkillParam);",
        "#trickParam.Deserialize(json.Trick[index]);",
        "#trickParamList.Add(trickParam);",
        "#breakObjParam.Deserialize(json.BreakObj[index]);",
        "#breakObjParamList.Add(breakObjParam);",
        [
            "this.mVersusMatching",
            "newList<VersusMatchingParam>(json.VersusMatchKey.Length);"
        ],
        "#versusMatchingParam.Deserialize(json.VersusMatchKey[index]);",
        "#this.mVersusMatching.Add(versusMatchingParam);",
        [
            "this.mVersusMatchCond",
            "newList<VersusMatchCondParam>(json.VersusMatchCond.Length);"
        ],
        "#versusMatchCondParam.Deserialize(json.VersusMatchCond[index]);",
        "#this.mVersusMatchCond.Add(versusMatchCondParam);",
        [
            "this.mTowerScore",
            "newList<TowerScoreParam>(json.TowerScore.Length);"
        ],
        "#this.mTowerScore.Add(towerScoreParam);",
        [
            "this.mTowerRankTbl",
            "newOInt[json.TowerRank.Length];"
        ],
        [
            "this.mTowerRankTbl[index]",
            "(OInt)json.TowerRank[index];"
        ],
        [
            "this.mMultiLimitUnitLv",
            "newOInt[json.MultilimitUnitLv.Length];"
        ],
        [
            "this.mMultiLimitUnitLv[index]",
            "(OInt)json.MultilimitUnitLv[index];"
        ],
        "#presentItemParam.Deserialize(json.FriendPresentItem[index]);",
        "#this.mFriendPresentItemParam.Add(presentItemParam.iname,presentItemParam);",
        "#weatherParam.Deserialize(json.Weather[index]);",
        "#weatherParamList.Add(weatherParam);",
        "#returntrue;"
    ],
    "QuestProgress[": [
        "#returntrue;",
        "#if(!this.Deserialize(json[index]))",
        "#returnfalse;",
        "#returntrue;"
    ],
    "QuestProgres": [
        "#returntrue;",
        "#returntrue;",
        "#if(quest.Chapter.IsKeyQuest())",
        "#returntrue;"
    ],
    "ArenaRankingjson,ReqBtlColoRanking.RankingType": [
        "#arenaPlayerList.Clear();",
        "#try",
        "#arenaPlayer.Deserialize(json.coloenemies[index]);",
        "#arenaPlayerList.Add(arenaPlayer);",
        "#catch(Exceptionex)",
        "#DebugUtility.LogException(ex);",
        "#returntrue;"
    ],
    "ArenaHistor": [
        "#mArenaHistory.Clear();",
        "#try",
        "#arenaPlayerHistory.Deserialize(json.colohistories[index]);",
        "#mArenaHistory.Add(arenaPlayerHistory);",
        "#catch(Exceptionex)",
        "#DebugUtility.LogException(ex);",
        "#returntrue;"
    ],
    "GeoPara": [
        "#returnfalse;",
        [
            "this.iname",
            "json.iname;"
        ],
        [
            "this.name",
            "json.name;"
        ],
        [
            "this.cost",
            "(OInt)Math.Max(json.cost,1);"
        ],
        [
            "this.DisableStopped",
            "(OBool)(json.stop!=0);"
        ],
        "#returntrue;"
    ],
    "GrowPara": [
        "#returnfalse;",
        [
            "this.type",
            "json.type;"
        ],
        "#this.curve.Add(newGrowSample()",
        "#},",
        "#},",
        "#},",
        "#},",
        "#});"
    ],
    "ItemPara": [
        "#returnfalse;",
        [
            "this.iname",
            "json.iname;"
        ],
        [
            "this.name",
            "json.name;"
        ],
        [
            "this.expr",
            "json.expr;"
        ],
        [
            "this.flavor",
            "json.flavor;"
        ],
        [
            "this.type",
            "(EItemType)json.type;"
        ],
        [
            "this.rare",
            "(OInt)json.rare;"
        ],
        [
            "this.cap",
            "(OInt)json.cap;"
        ],
        [
            "this.invcap",
            "(OInt)json.invcap;"
        ],
        [
            "this.equipLv",
            "(OInt)Math.Max(json.eqlv,1);"
        ],
        [
            "this.coin",
            "(OInt)json.coin;"
        ],
        [
            "this.tour_coin",
            "(OInt)json.tc;"
        ],
        [
            "this.arena_coin",
            "(OInt)json.ac;"
        ],
        [
            "this.multi_coin",
            "(OInt)json.mc;"
        ],
        [
            "this.piece_point",
            "(OInt)json.pp;"
        ],
        [
            "this.buy",
            "(OInt)json.buy;"
        ],
        [
            "this.sell",
            "(OInt)json.sell;"
        ],
        [
            "this.enhace_cost",
            "(OInt)json.encost;"
        ],
        [
            "this.enhace_point",
            "(OInt)json.enpt;"
        ],
        [
            "this.value",
            "(OInt)json.val;"
        ],
        [
            "this.icon",
            "(OString)json.icon;"
        ],
        [
            "this.skill",
            "(OString)json.skill;"
        ],
        [
            "this.recipe",
            "json.recipe;"
        ],
        [
            "this.is_valuables",
            "json.is_valuables>0;"
        ],
        [
            "this.cmn_type",
            "json.cmn_type;"
        ],
        [
            "this.quests",
            "newstring[json.quests.Length];"
        ],
        [
            "this.quests[index]",
            "json.quests[index];"
        ],
        "#returntrue;"
    ],
    "JobPara": [
        "#returnfalse;",
        [
            "this.iname",
            "json.iname;"
        ],
        [
            "this.name",
            "json.name;"
        ],
        [
            "this.expr",
            "json.expr;"
        ],
        [
            "this.model",
            "json.mdl;"
        ],
        [
            "this.ac2d",
            "json.ac2d;"
        ],
        [
            "this.modelp",
            "json.mdlp;"
        ],
        [
            "this.pet",
            "json.pet;"
        ],
        [
            "this.buki",
            "json.buki;"
        ],
        [
            "this.origin",
            "json.origin;"
        ],
        [
            "this.type",
            "(JobTypes)json.type;"
        ],
        [
            "this.role",
            "(RoleTypes)json.role;"
        ],
        [
            "this.wepmdl",
            "json.wepmdl;"
        ],
        [
            "this.mov",
            "(OInt)json.jmov;"
        ],
        [
            "this.jmp",
            "(OInt)json.jjmp;"
        ],
        [
            "this.atkskill[0]",
            "string.IsNullOrEmpty(json.atkskl)?string.Empty:json.atkskl;"
        ],
        [
            "this.atkskill[1]",
            "string.IsNullOrEmpty(json.atkfi)?string.Empty:json.atkfi;"
        ],
        [
            "this.atkskill[2]",
            "string.IsNullOrEmpty(json.atkwa)?string.Empty:json.atkwa;"
        ],
        [
            "this.atkskill[3]",
            "string.IsNullOrEmpty(json.atkwi)?string.Empty:json.atkwi;"
        ],
        [
            "this.atkskill[4]",
            "string.IsNullOrEmpty(json.atkth)?string.Empty:json.atkth;"
        ],
        [
            "this.atkskill[5]",
            "string.IsNullOrEmpty(json.atksh)?string.Empty:json.atksh;"
        ],
        [
            "this.atkskill[6]",
            "string.IsNullOrEmpty(json.atkda)?string.Empty:json.atkda;"
        ],
        [
            "this.fixed_ability",
            "json.fixabl;"
        ],
        [
            "this.artifact",
            "json.artifact;"
        ],
        [
            "this.ai",
            "json.ai;"
        ],
        [
            "this.master",
            "json.master;"
        ],
        [
            "this.MapEffectAbility",
            "json.me_abl;"
        ],
        [
            "this.IsMapEffectRevReso",
            "json.is_me_rr!=0;"
        ],
        [
            "this.DescCharacteristic",
            "json.desc_ch;"
        ],
        [
            "this.DescOther",
            "json.desc_ot;"
        ],
        "#Array.Clear((Array)this.ranks,0,this.ranks.Length);",
        "#if(!this.ranks[index].Deserialize(json.ranks[index]))",
        "#returnfalse;",
        "#returntrue;"
    ],
    "JobRankPara": [
        "#returnfalse;",
        [
            "this.JobChangeCost",
            "json.chcost;"
        ],
        [
            "this.JobChangeItems[0]",
            "json.chitm1;"
        ],
        [
            "this.JobChangeItems[1]",
            "json.chitm2;"
        ],
        [
            "this.JobChangeItems[2]",
            "json.chitm3;"
        ],
        [
            "this.JobChangeItemNums[0]",
            "json.chnum1;"
        ],
        [
            "this.JobChangeItemNums[1]",
            "json.chnum2;"
        ],
        [
            "this.JobChangeItemNums[2]",
            "json.chnum3;"
        ],
        [
            "this.cost",
            "json.cost;"
        ],
        [
            "this.equips[0]",
            "json.eqid1;"
        ],
        [
            "this.equips[1]",
            "json.eqid2;"
        ],
        [
            "this.equips[2]",
            "json.eqid3;"
        ],
        [
            "this.equips[3]",
            "json.eqid4;"
        ],
        [
            "this.equips[4]",
            "json.eqid5;"
        ],
        [
            "this.equips[5]",
            "json.eqid6;"
        ],
        [
            "this.status.hp",
            "(OInt)json.hp;"
        ],
        [
            "this.status.mp",
            "(OShort)json.mp;"
        ],
        [
            "this.status.atk",
            "(OShort)json.atk;"
        ],
        [
            "this.status.def",
            "(OShort)json.def;"
        ],
        [
            "this.status.mag",
            "(OShort)json.mag;"
        ],
        [
            "this.status.mnd",
            "(OShort)json.mnd;"
        ],
        [
            "this.status.dex",
            "(OShort)json.dex;"
        ],
        [
            "this.status.spd",
            "(OShort)json.spd;"
        ],
        [
            "this.status.cri",
            "(OShort)json.cri;"
        ],
        [
            "this.status.luk",
            "(OShort)json.luk;"
        ],
        [
            "this.avoid",
            "(OInt)json.avoid;"
        ],
        [
            "this.inimp",
            "(OInt)json.inimp;"
        ],
        "#if(!string.IsNullOrEmpty(json.learn1))",
        "#++length;",
        "#if(!string.IsNullOrEmpty(json.learn2))",
        "#++length;",
        "#if(!string.IsNullOrEmpty(json.learn3))",
        "#++length;",
        "#if(length>0)",
        "#if(!string.IsNullOrEmpty(json.learn1))",
        [
            "this.learnings[num1++]",
            "(OString)json.learn1;"
        ],
        "#if(!string.IsNullOrEmpty(json.learn2))",
        [
            "this.learnings[num1++]",
            "(OString)json.learn2;"
        ],
        "#if(!string.IsNullOrEmpty(json.learn3))",
        "#returntrue;"
    ],
    "JobSetPara": [
        "#returnfalse;",
        [
            "this.iname",
            "json.iname;"
        ],
        [
            "this.job",
            "json.job;"
        ],
        [
            "this.jobchange",
            "json.cjob;"
        ],
        [
            "this.target_unit",
            "json.target_unit;"
        ],
        [
            "this.lock_rarity",
            "json.lrare;"
        ],
        [
            "this.lock_awakelv",
            "json.lplus;"
        ],
        "#if(!string.IsNullOrEmpty(json.ljob1))",
        "#++length;",
        "#if(!string.IsNullOrEmpty(json.ljob2))",
        "#++length;",
        "#if(!string.IsNullOrEmpty(json.ljob3))",
        "#++length;",
        "#if(length>0)",
        "#if(!string.IsNullOrEmpty(json.ljob1))",
        [
            "this.lock_jobs[index].iname",
            "json.ljob1;"
        ],
        [
            "this.lock_jobs[index].lv",
            "json.llv1;"
        ],
        "#++index;",
        "#if(!string.IsNullOrEmpty(json.ljob2))",
        [
            "this.lock_jobs[index].iname",
            "json.ljob2;"
        ],
        [
            "this.lock_jobs[index].lv",
            "json.llv2;"
        ],
        "#++index;",
        "#if(!string.IsNullOrEmpty(json.ljob3))",
        [
            "this.lock_jobs[index].iname",
            "json.ljob3;"
        ],
        [
            "this.lock_jobs[index].lv",
            "json.llv3;"
        ],
        "#returntrue;"
    ],
    "LimitedShopItemListSet[]shop": [
        "#returntrue;",
        "#this.items.Clear();",
        "#if(!limitedShopItem.Deserialize(shopitems[index]))",
        "#returnfalse;",
        "#this.items.Add(limitedShopItem);",
        "#returntrue;"
    ],
    "LimitedShopItemListSe": [
        "#returnfalse;",
        [
            "this.id",
            "json.id;"
        ],
        [
            "this.iname",
            "json.item.iname;"
        ],
        [
            "this.num",
            "json.item.num;"
        ],
        [
            "this.max_num",
            "json.item.maxnum;"
        ],
        [
            "this.bougthnum",
            "json.item.boughtnum;"
        ],
        [
            "this.saleValue",
            "json.cost.value;"
        ],
        [
            "this.saleType",
            "ShopData.String2SaleType(json.cost.type);"
        ],
        [
            "this.is_reset",
            "json.isreset==1;"
        ],
        [
            "this.is_soldout",
            "json.sold>0;"
        ],
        [
            "this.children",
            "json.children;"
        ],
        "#returntrue;"
    ],
    "LoginInfoPara": [
        "#returnfalse;",
        [
            "this.iname",
            "json.iname;"
        ],
        [
            "this.path",
            "json.path;"
        ],
        [
            "this.scene",
            "(LoginInfoParam.SelectScene)json.scene;"
        ],
        "#if(!string.IsNullOrEmpty(json.begin_at))",
        "#DateTime.TryParse(json.begin_at,outresult1);",
        "#if(!string.IsNullOrEmpty(json.end_at))",
        "#DateTime.TryParse(json.end_at,outresult2);",
        [
            "this.conditions",
            "(LoginInfoParam.DispConditions)json.conditions;"
        ],
        [
            "this.conditions_value",
            "json.conditions_value;"
        ],
        "#returntrue;"
    ],
    "MagnificationPara": [
        "#thrownewInvalidJSONException();",
        [
            "this.iname",
            "json.iname;"
        ],
        [
            "this.atkMagnifications",
            "json.atk;"
        ]
    ],
    "MapEffectPara": [
        "#return;",
        [
            "this.mIname",
            "json.iname;"
        ],
        [
            "this.mName",
            "json.name;"
        ],
        [
            "this.mExpr",
            "json.expr;"
        ],
        "#this.mValidSkillLists.Clear();",
        "#return;",
        "#foreach(stringskillinjson.skills)",
        "#this.mValidSkillLists.Add(skill);"
    ],
    "MapPara": [
        "#thrownewInvalidJSONException();",
        [
            "this.mapSceneName",
            "json.scn;"
        ],
        [
            "this.mapSetName",
            "json.set;"
        ],
        [
            "this.battleSceneName",
            "json.btl;"
        ],
        [
            "this.eventSceneName",
            "json.ev;"
        ],
        [
            "this.bgmName",
            "json.bgm;"
        ]
    ],
    "MultiTowerFloorPara": [
        "#thrownewInvalidJSONException();",
        [
            "this.id",
            "json.id;"
        ],
        [
            "this.title",
            "json.title;"
        ],
        [
            "this.name",
            "json.name;"
        ],
        [
            "this.expr",
            "json.expr;"
        ],
        [
            "this.cond",
            "json.cond;"
        ],
        [
            "this.tower_id",
            "json.tower_id;"
        ],
        [
            "this.cond_floor",
            "json.cond_floor;"
        ],
        [
            "this.pt",
            "json.pt;"
        ],
        [
            "this.lv",
            "json.lv;"
        ],
        [
            "this.joblv",
            "json.joblv;"
        ],
        [
            "this.reward_id",
            "json.reward_id;"
        ],
        [
            "this.floor",
            "json.floor;"
        ],
        [
            "this.unitnum",
            "json.unitnum;"
        ],
        [
            "this.notcon",
            "json.notcon;"
        ],
        [
            "this.me_id",
            "json.me_id;"
        ],
        [
            "this.is_wth_no_chg",
            "json.is_wth_no_chg;"
        ],
        [
            "this.wth_set_id",
            "json.wth_set_id;"
        ],
        "#this.map.Clear();",
        "#mapParam.Deserialize(json.map[index]);",
        "#this.map.Add(mapParam);",
        "#instance.AddMTQuest(questParam.iname,questParam);"
    ],
    "MultiTowerRewardIte": [
        "#thrownewInvalidJSONException();",
        [
            "this.round_st",
            "json.round_st;"
        ],
        [
            "this.round_ed",
            "json.round_ed;"
        ],
        [
            "this.itemname",
            "json.itemname;"
        ],
        [
            "this.num",
            "json.num;"
        ],
        [
            "this.type",
            "(MultiTowerRewardItem.RewardType)json.type;"
        ]
    ],
    "MultiTowerRewardPara": [
        "#thrownewInvalidJSONException();",
        [
            "this.iname",
            "json.iname;"
        ],
        "#return;",
        [
            "this.mReward",
            "newMultiTowerRewardItem[json.rewards.Length];"
        ],
        "#this.mReward[index].Deserialize(json.rewards[index]);"
    ],
    "ObjectivePara": [
        "#thrownewInvalidJSONException();",
        [
            "this.iname",
            "json.iname;"
        ],
        "#thrownewInvalidJSONException();",
        [
            "this.objective",
            "json.objective;"
        ]
    ],
    "PlayerPara": [
        "#returnfalse;",
        [
            "this.pt",
            "(OInt)json.pt;"
        ],
        [
            "this.ucap",
            "(OInt)json.ucap;"
        ],
        [
            "this.icap",
            "(OInt)json.icap;"
        ],
        [
            "this.ecap",
            "(OInt)json.ecap;"
        ],
        [
            "this.fcap",
            "(OInt)json.fcap;"
        ],
        "#returntrue;"
    ],
    "ProductPara": [
        "#returnfalse;",
        [
            "this.mProductId",
            "json.product_id;"
        ],
        [
            "this.mPlatform",
            "json.platform;"
        ],
        [
            "this.mName",
            "LocalizedText.Get(json.name);"
        ],
        [
            "this.mDescription",
            "LocalizedText.Get(json.description);"
        ],
        [
            "this.mAdditionalPaidCoin",
            "json.additional_paid_coin;"
        ],
        [
            "this.mAdditionalFreeCoin",
            "json.additional_free_coin;"
        ],
        [
            "this.mSale.Name",
            "!string.IsNullOrEmpty(json.sale.name)?LocalizedText.Get(json.sale.name):string.Empty;"
        ],
        [
            "this.mSale.Description",
            "!string.IsNullOrEmpty(json.sale.description)?LocalizedText.Get(json.sale.description):string.Empty;"
        ],
        [
            "this.mSale.AdditionalFreeCoin",
            "json.sale.additional_free_coin>0?json.sale.additional_free_coin:0;"
        ],
        [
            "this.mEnabled",
            "json.enabled;"
        ],
        [
            "this.mRemainingDays",
            "json.remaining_days;"
        ],
        "#returntrue;"
    ],
    "ProductParamRespons": [
        "#returntrue;",
        "#this.products.Clear();",
        "#if(!productParam.Deserialize(json.products[index]))",
        "#returnfalse;",
        "#this.products.Add(productParam);",
        "#returntrue;"
    ],
    "ProductSalePara": [
        "#returnfalse;",
        [
            "this.ProductId",
            "json.fields.product_id;"
        ],
        [
            "this.Platform",
            "json.fields.platform;"
        ],
        [
            "this.Name",
            "json.fields.name;"
        ],
        [
            "this.Description",
            "json.fields.description;"
        ],
        [
            "this.AdditionalFreeCoin",
            "json.fields.additional_free_coin;"
        ],
        [
            "this.Condition.type",
            "(ProductSaleParam.Constrict.Type)json.fields.condition_type;"
        ],
        [
            "this.Condition.value",
            "json.fields.condition_value;"
        ],
        "#returntrue;"
    ],
    "QuestCampaignChildPara": [
        [
            "this.iname",
            "json.iname;"
        ],
        [
            "this.scope",
            "(QuestCampaignScopes)json.scope;"
        ],
        [
            "this.questType",
            "(QuestTypes)json.quest_type;"
        ],
        [
            "this.questMode",
            "(QuestDifficulties)json.quest_mode;"
        ],
        [
            "this.questId",
            "json.quest_id;"
        ],
        [
            "this.unit",
            "json.unit;"
        ],
        [
            "this.dropRate",
            "json.drop_rate;"
        ],
        [
            "this.dropNum",
            "json.drop_num;"
        ],
        [
            "this.expPlayer",
            "json.exp_player;"
        ],
        [
            "this.expUnit",
            "json.exp_unit;"
        ],
        [
            "this.apRate",
            "json.ap_rate;"
        ],
        "#returntrue;"
    ],
    "QuestCampaignParentPara": [
        [
            "this.iname",
            "json.iname;"
        ],
        [
            "this.children",
            "json.children;"
        ],
        "#if(!string.IsNullOrEmpty(json.begin_at))",
        "#DateTime.TryParse(json.begin_at,outthis.beginAt);",
        "#if(!string.IsNullOrEmpty(json.end_at))",
        "#DateTime.TryParse(json.end_at,outthis.endAt);",
        "#returntrue;"
    ],
    "QuestClearUnlockUnitDataPara": [
        "#return;",
        [
            "this.iname",
            "json.iname;"
        ],
        [
            "this.uid",
            "json.uid;"
        ],
        [
            "this.add",
            "json.add>0;"
        ],
        [
            "this.type",
            "(QuestClearUnlockUnitDataParam.EUnlockTypes)json.type;"
        ],
        [
            "this.new_id",
            "json.new_id;"
        ],
        [
            "this.old_id",
            "json.old_id;"
        ],
        [
            "this.parent_id",
            "json.parent_id;"
        ],
        [
            "this.ulv",
            "json.ulv;"
        ],
        [
            "this.aid",
            "json.aid;"
        ],
        [
            "this.alv",
            "json.alv;"
        ],
        [
            "this.qcnd",
            "json.qcnd>0;"
        ],
        "#return;",
        [
            "this.qids",
            "newstring[json.qids.Length];"
        ],
        "#json.qids.CopyTo((Array)this.qids,0);"
    ],
    "QuestCondPara": [
        [
            "this.iname",
            "json.iname;"
        ],
        [
            "this.plvmax",
            "json.plvmax;"
        ],
        [
            "this.plvmin",
            "json.plvmin;"
        ],
        [
            "this.ulvmax",
            "json.ulvmax;"
        ],
        [
            "this.ulvmin",
            "json.ulvmin;"
        ],
        [
            "this.sex",
            "(ESex)json.sex;"
        ],
        [
            "this.rmax",
            "json.rmax;"
        ],
        [
            "this.rmin",
            "json.rmin;"
        ],
        [
            "this.hmax",
            "json.hmax;"
        ],
        [
            "this.hmin",
            "json.hmin;"
        ],
        [
            "this.wmax",
            "json.wmax;"
        ],
        [
            "this.wmin",
            "json.wmin;"
        ],
        [
            "this.isElemLimit",
            "num1+(this.elem[0]=json.el_none)+(this.elem[1]=json.el_fire)+(this.elem[2]=json.el_watr)+(this.elem[3]=json.el_wind)+(this.elem[4]=json.el_thdr)+(this.elem[5]=json.el_lit)+(this.elem[6]=json.el_drk)>0;"
        ],
        [
            "this.job",
            "newstring[json.job.Length];"
        ],
        [
            "this.job[index4]",
            "json.job[index4];"
        ],
        [
            "this.unit",
            "newstring[json.unit.Length];"
        ],
        [
            "this.unit[index4]",
            "json.unit[index4];"
        ],
        [
            "this.birth",
            "newstring[json.birth.Length];"
        ],
        [
            "this.birth[index4]",
            "json.birth[index4];"
        ],
        [
            "this.party_type",
            "!Enum.IsDefined(typeof(PartyCondType),(object)json.party_type)?PartyCondType.None:(PartyCondType)json.party_type;"
        ],
        "#returntrue;"
    ],
    "QuestDropPara": [
        "#this.mSimpleDropTables.Clear();",
        "#this.mSimpleLocalMaps.Clear();",
        "#this.mSimpleQuestDrops.Clear();",
        "#if(simpleDropTableParam.Deserialize(json.simpleDropTable[index]))",
        "#this.mSimpleDropTables.Add(simpleDropTableParam);",
        "#if(simpleLocalMapsParam.Deserialize(json.simpleLocalMaps[index]))",
        "#this.mSimpleLocalMaps.Add(simpleLocalMapsParam);",
        "#return;",
        "#if(simpleQuestDropParam.Deserialize(json.simpleQuestDrops[index]))",
        "#this.mSimpleQuestDrops.Add(simpleQuestDropParam);"
    ],
    "QuestPara": [
        "#thrownewInvalidJSONException();",
        [
            "this.iname",
            "json.iname;"
        ],
        [
            "this.name",
            "json.name;"
        ],
        [
            "this.expr",
            "json.expr;"
        ],
        [
            "this.cond",
            "json.cond;"
        ],
        [
            "this.mission",
            "json.mission;"
        ],
        [
            "this.pexp",
            "json.pexp;"
        ],
        [
            "this.uexp",
            "json.uexp;"
        ],
        [
            "this.gold",
            "json.gold;"
        ],
        [
            "this.mcoin",
            "json.mcoin;"
        ],
        [
            "this.point",
            "CheckCast.to_short(json.pt);"
        ],
        [
            "this.multi",
            "(OShort)CheckCast.to_short(json.multi);"
        ],
        [
            "this.multiDead",
            "(OShort)CheckCast.to_short(json.multi_dead);"
        ],
        [
            "this.playerNum",
            "(OShort)CheckCast.to_short(json.pnum);"
        ],
        [
            "this.unitNum",
            "(OShort)CheckCast.to_short(json.unum<=QuestParam.MULTI_MAX_PLAYER_UNIT?json.unum:QuestParam.MULTI_MAX_PLAYER_UNIT);"
        ],
        [
            "this.aplv",
            "CheckCast.to_short(json.aplv);"
        ],
        [
            "this.challengeLimit",
            "CheckCast.to_short(json.limit);"
        ],
        [
            "this.dayReset",
            "json.dayreset;"
        ],
        "#if(json.pnum*json.unum>QuestParam.MULTI_MAX_TOTAL_UNIT)",
        "#DebugUtility.LogError(\"iname:\"+json.iname+\"/Currenttotalunitis\"+(object)(json.pnum*json.unum)+\".Pleasesetthetotalnumberofunitsto\"+(object)QuestParam.MULTI_MAX_TOTAL_UNIT);",
        "#if(json.unum>QuestParam.MULTI_MAX_PLAYER_UNIT)",
        "#DebugUtility.LogError(\"iname:\"+json.iname+\"/Current1playerunitis\"+(object)json.unum+\".Pleasesetthe1playernumberofunitsto\"+(object)QuestParam.MULTI_MAX_PLAYER_UNIT);",
        [
            "this.key_limit",
            "json.key_limit;"
        ],
        [
            "this.clock_win",
            "(OShort)CheckCast.to_short(json.ctw);"
        ],
        [
            "this.clock_lose",
            "(OShort)CheckCast.to_short(json.ctl);"
        ],
        [
            "this.lv",
            "CheckCast.to_short(Math.Max(json.lv,1));"
        ],
        [
            "this.win",
            "(OShort)CheckCast.to_short(json.win);"
        ],
        [
            "this.lose",
            "(OShort)CheckCast.to_short(json.lose);"
        ],
        [
            "this.type",
            "(QuestTypes)json.type;"
        ],
        [
            "this.subtype",
            "(SubQuestTypes)json.subtype;"
        ],
        "#this.units.Clear();",
        [
            "this.ChapterID",
            "json.area;"
        ],
        [
            "this.world",
            "json.world;"
        ],
        [
            "this.storyTextID",
            "json.text;"
        ],
        [
            "this.hidden",
            "json.hide!=0;"
        ],
        [
            "this.replayLimit",
            "json.replay_limit!=0;"
        ],
        [
            "this.ticket",
            "json.ticket;"
        ],
        [
            "this.title",
            "json.title;"
        ],
        [
            "this.navigation",
            "json.nav;"
        ],
        [
            "this.AllowedJobs",
            "json.ajob;"
        ],
        "#if(!string.IsNullOrEmpty(json.atag))",
        "#if(!string.IsNullOrEmpty(strArray[index]))",
        [
            "this.PhysBonus",
            "json.phyb+100;"
        ],
        [
            "this.MagBonus",
            "json.magb+100;"
        ],
        [
            "this.IsBeginner",
            "0!=json.bgnr;"
        ],
        [
            "this.ItemLayout",
            "json.i_lyt;"
        ],
        [
            "this.notSearch",
            "json.not_search!=0;"
        ],
        [
            "this.difficulty",
            "(QuestDifficulties)json.mode;"
        ],
        "#this.units.Setup(json.units.Length);",
        "#this.units.Set(index,json.units[index]);",
        [
            "this.cond_quests",
            "newstring[json.cond_quests.Length];"
        ],
        [
            "this.cond_quests[index]",
            "json.cond_quests[index];"
        ],
        "#this.map.Clear();",
        "#mapParam.Deserialize(json.map[index]);",
        "#this.map.Add(mapParam);",
        [
            "this.event_start",
            "json.evst;"
        ],
        [
            "this.event_clear",
            "json.evw;"
        ],
        [
            "this.AllowRetreat",
            "json.retr==0;"
        ],
        [
            "this.AllowAutoPlay",
            "json.naut==0||json.naut==2;"
        ],
        [
            "this.FirstAutoPlayProhibit",
            "json.naut==2;"
        ],
        [
            "this.Silent",
            "json.swin!=0;"
        ],
        [
            "this.DisableAbilities",
            "json.notabl!=0;"
        ],
        [
            "this.DisableItems",
            "json.notitm!=0;"
        ],
        [
            "this.DisableContinue",
            "json.notcon!=0;"
        ],
        [
            "this.UseFixEditor",
            "json.fix_editor!=0;"
        ],
        [
            "this.IsNoStartVoice",
            "json.is_no_start_voice!=0;"
        ],
        [
            "this.UseSupportUnit",
            "json.sprt==0;"
        ],
        [
            "this.IsUnitChange",
            "json.is_unit_chg!=0;"
        ],
        [
            "this.VersusThumnail",
            "json.thumnail;"
        ],
        [
            "this.MapBuff",
            "json.mskill;"
        ],
        [
            "this.VersusMoveCount",
            "json.vsmovecnt;"
        ],
        [
            "this.DamageUpprPl",
            "json.dmg_up_pl;"
        ],
        [
            "this.DamageUpprEn",
            "json.dmg_up_en;"
        ],
        [
            "this.DamageRatePl",
            "json.dmg_rt_pl;"
        ],
        [
            "this.DamageRateEn",
            "json.dmg_rt_en;"
        ],
        [
            "this.IsExtra",
            "json.extra==1;"
        ],
        [
            "this.ShowReviewPopup",
            "json.review==1;"
        ],
        [
            "this.IsMultiLeaderSkill",
            "json.is_multileader!=0;"
        ],
        [
            "this.MapEffectId",
            "json.me_id;"
        ],
        [
            "this.IsWeatherNoChange",
            "json.is_wth_no_chg!=0;"
        ],
        [
            "this.WeatherSetId",
            "json.wth_set_id;"
        ]
    ],
    "RankingQuestPara": [
        [
            "this.schedule_id",
            "json.schedule_id;"
        ],
        "#if(Enum.GetNames(typeof(RankingQuestType)).Length>json.type)",
        [
            "this.type",
            "(RankingQuestType)json.type;"
        ],
        "#else",
        "#DebugUtility.LogError(\"定義されていない列挙値が指定されようとしました\");",
        [
            "this.iname",
            "json.iname;"
        ],
        [
            "this.reward_id",
            "json.reward_id;"
        ],
        "#returntrue;"
    ],
    "RankingQuestRewardPara": [
        [
            "this.id",
            "json.id;"
        ],
        "#try",
        [
            "this.type",
            "(RankingQuestRewardType)Enum.Parse(typeof(RankingQuestRewardType),json.type);"
        ],
        "#catch",
        "#DebugUtility.LogError(\"定義されていない列挙値が指定されようとしました\");",
        [
            "this.iname",
            "json.iname;"
        ],
        [
            "this.num",
            "json.num;"
        ],
        "#returntrue;"
    ],
    "RankingQuestSchedulePara": [
        [
            "this.id",
            "json.id;"
        ],
        "#if(!string.IsNullOrEmpty(json.begin_at))",
        "#DateTime.TryParse(json.begin_at,outthis.beginAt);",
        "#if(!string.IsNullOrEmpty(json.end_at))",
        "#DateTime.TryParse(json.end_at,outthis.endAt);",
        "#if(!string.IsNullOrEmpty(json.reward_begin_at))",
        "#DateTime.TryParse(json.reward_begin_at,outthis.reward_begin_at);",
        "#if(!string.IsNullOrEmpty(json.reward_end_at))",
        "#DateTime.TryParse(json.reward_end_at,outthis.reward_end_at);",
        "#if(!string.IsNullOrEmpty(json.visible_begin_at))",
        "#DateTime.TryParse(json.visible_begin_at,outthis.visible_begin_at);",
        "#if(!string.IsNullOrEmpty(json.visible_end_at))",
        "#DateTime.TryParse(json.visible_end_at,outthis.visible_end_at);",
        "#returntrue;"
    ],
    "RarityPara": [
        "#returnfalse;",
        [
            "this.UnitLvCap",
            "(OInt)json.unitcap;"
        ],
        [
            "this.UnitJobLvCap",
            "(OInt)json.jobcap;"
        ],
        [
            "this.UnitAwakeLvCap",
            "(OInt)json.awakecap;"
        ],
        [
            "this.UnitUnlockPieceNum",
            "(OInt)json.piece;"
        ],
        [
            "this.UnitChangePieceNum",
            "(OInt)json.ch_piece;"
        ],
        [
            "this.UnitSelectChangePieceNum",
            "(OInt)json.ch_piece_select;"
        ],
        [
            "this.UnitRarityUpCost",
            "(OInt)json.rareup_cost;"
        ],
        [
            "this.PieceToPoint",
            "(OInt)json.gain_pp;"
        ],
        [
            "this.EquipEnhanceParam.cost_scale",
            "(OInt)json.eq_costscale;"
        ],
        "#if(length>0)",
        "#returnfalse;",
        [
            "this.EquipEnhanceParam.ranks[index].need_point",
            "(OInt)json.eq_points[index];"
        ],
        [
            "this.ArtifactLvCap",
            "(OInt)json.af_lvcap;"
        ],
        [
            "this.ArtifactCostRate",
            "(OInt)json.af_upcost;"
        ],
        [
            "this.ArtifactCreatePieceNum",
            "(OInt)json.af_unlock;"
        ],
        [
            "this.ArtifactGouseiPieceNum",
            "(OInt)json.af_gousei;"
        ],
        [
            "this.ArtifactChangePieceNum",
            "(OInt)json.af_change;"
        ],
        [
            "this.ArtifactCreateCost",
            "(OInt)json.af_unlock_cost;"
        ],
        [
            "this.ArtifactRarityUpCost",
            "(OInt)json.af_gousei_cost;"
        ],
        [
            "this.ArtifactChangeCost",
            "(OInt)json.af_change_cost;"
        ],
        [
            "this.GrowStatus.hp",
            "(OInt)json.hp;"
        ],
        [
            "this.GrowStatus.mp",
            "(OShort)json.mp;"
        ],
        [
            "this.GrowStatus.atk",
            "(OShort)json.atk;"
        ],
        [
            "this.GrowStatus.def",
            "(OShort)json.def;"
        ],
        [
            "this.GrowStatus.mag",
            "(OShort)json.mag;"
        ],
        [
            "this.GrowStatus.mnd",
            "(OShort)json.mnd;"
        ],
        [
            "this.GrowStatus.dex",
            "(OShort)json.dex;"
        ],
        [
            "this.GrowStatus.spd",
            "(OShort)json.spd;"
        ],
        [
            "this.GrowStatus.cri",
            "(OShort)json.cri;"
        ],
        [
            "this.GrowStatus.luk",
            "(OShort)json.luk;"
        ],
        [
            "this.DropSE",
            "json.drop;"
        ],
        "#returntrue;"
    ],
    "RecipePara": [
        "#returnfalse;",
        [
            "this.iname",
            "json.iname;"
        ],
        [
            "this.cost",
            "json.cost;"
        ],
        "#++length;",
        "#if(length>0)",
        "#returntrue;"
    ],
    "SectionPara": [
        "#thrownewInvalidJSONException();",
        [
            "this.iname",
            "json.iname;"
        ],
        [
            "this.name",
            "json.name;"
        ],
        [
            "this.expr",
            "json.expr;"
        ],
        [
            "this.start",
            "json.start;"
        ],
        [
            "this.end",
            "json.end;"
        ],
        [
            "this.hidden",
            "json.hide!=0;"
        ],
        [
            "this.home",
            "json.home;"
        ],
        [
            "this.unit",
            "json.unit;"
        ],
        [
            "this.prefabPath",
            "json.item;"
        ],
        [
            "this.shop",
            "json.shop;"
        ],
        [
            "this.inn",
            "json.inn;"
        ],
        [
            "this.bar",
            "json.bar;"
        ],
        [
            "this.bgm",
            "json.bgm;"
        ]
    ],
    "ShopPara": [
        "#returnfalse;",
        [
            "this.iname",
            "json.iname;"
        ],
        [
            "this.UpdateCostType",
            "(ESaleType)json.upd_type;"
        ],
        [
            "this.UpdateCosts",
            "newint[json.upd_costs.Length];"
        ],
        [
            "this.UpdateCosts[index]",
            "json.upd_costs[index];"
        ],
        "#returntrue;"
    ],
    "SimpleDropTablePara": [
        [
            "this.iname",
            "json.iname;"
        ],
        [
            "this.dropList",
            "json.droplist;"
        ],
        "#if(!string.IsNullOrEmpty(json.begin_at))",
        "#DateTime.TryParse(json.begin_at,outthis.beginAt);",
        "#if(!string.IsNullOrEmpty(json.end_at))",
        "#DateTime.TryParse(json.end_at,outthis.endAt);",
        "#returntrue;"
    ],
    "SimpleLocalMapsPara": [
        [
            "this.iname",
            "json.iname;"
        ],
        [
            "this.droplist",
            "json.droplist;"
        ],
        "#returntrue;"
    ],
    "SimpleQuestDropPara": [
        [
            "this.item_iname",
            "json.iname;"
        ],
        [
            "this.questlist",
            "json.questlist;"
        ],
        "#returntrue;"
    ],
    "SkillPara": [
        "#returnfalse;",
        [
            "this.iname",
            "json.iname;"
        ],
        [
            "this.name",
            "json.name;"
        ],
        [
            "this.expr",
            "json.expr;"
        ],
        [
            "this.motion",
            "json.motnm;"
        ],
        [
            "this.effect",
            "json.effnm;"
        ],
        [
            "this.defend_effect",
            "json.effdef;"
        ],
        [
            "this.weapon",
            "json.weapon;"
        ],
        [
            "this.tokkou",
            "json.tktag;"
        ],
        [
            "this.tk_rate",
            "json.tkrate;"
        ],
        [
            "this.type",
            "(ESkillType)json.type;"
        ],
        [
            "this.timing",
            "(ESkillTiming)json.timing;"
        ],
        [
            "this.condition",
            "(ESkillCondition)json.cond;"
        ],
        [
            "this.target",
            "(ESkillTarget)json.target;"
        ],
        [
            "this.line_type",
            "(ELineType)json.line;"
        ],
        [
            "this.lvcap",
            "(OInt)json.cap;"
        ],
        [
            "this.cost",
            "(OInt)json.cost;"
        ],
        [
            "this.count",
            "(OInt)json.count;"
        ],
        [
            "this.rate",
            "(OInt)json.rate;"
        ],
        [
            "this.select_range",
            "(ESelectType)json.sran;"
        ],
        [
            "this.range_min",
            "(OInt)json.rangemin;"
        ],
        [
            "this.range_max",
            "(OInt)json.range;"
        ],
        [
            "this.select_scope",
            "(ESelectType)json.ssco;"
        ],
        [
            "this.scope",
            "(OInt)json.scope;"
        ],
        [
            "this.effect_height",
            "(OInt)json.eff_h;"
        ],
        [
            "this.back_defrate",
            "(OInt)json.bdb;"
        ],
        [
            "this.side_defrate",
            "(OInt)json.sdb;"
        ],
        [
            "this.ignore_defense_rate",
            "(OInt)json.idr;"
        ],
        [
            "this.job",
            "json.job;"
        ],
        [
            "this.SceneName",
            "json.scn;"
        ],
        [
            "this.ComboNum",
            "(OInt)json.combo_num;"
        ],
        [
            "this.ComboDamageRate",
            "(OInt)(100-Math.Abs(json.combo_rate));"
        ],
        [
            "this.IsCritical",
            "(OBool)(json.is_cri!=0);"
        ],
        [
            "this.JewelDamageType",
            "(JewelDamageTypes)json.jdtype;"
        ],
        [
            "this.JewelDamageValue",
            "(OInt)json.jdv;"
        ],
        [
            "this.IsJewelAbsorb",
            "(OBool)(json.jdabs!=0);"
        ],
        [
            "this.DuplicateCount",
            "(OInt)json.dupli;"
        ],
        [
            "this.CollaboMainId",
            "json.cs_main_id;"
        ],
        [
            "this.CollaboHeight",
            "(OInt)json.cs_height;"
        ],
        [
            "this.KnockBackRate",
            "(OInt)json.kb_rate;"
        ],
        [
            "this.KnockBackVal",
            "(OInt)json.kb_val;"
        ],
        [
            "this.KnockBackDir",
            "(eKnockBackDir)json.kb_dir;"
        ],
        [
            "this.KnockBackDs",
            "(eKnockBackDs)json.kb_ds;"
        ],
        [
            "this.DamageDispType",
            "(eDamageDispType)json.dmg_dt;"
        ],
        "#this.ReplaceTargetIdLists.Clear();",
        "#foreach(stringrpTgtIdinjson.rp_tgt_ids)",
        "#this.ReplaceTargetIdLists.Add(rpTgtId);",
        "#this.ReplaceChangeIdLists.Clear();",
        "#foreach(stringrpChgIdinjson.rp_chg_ids)",
        "#this.ReplaceChangeIdLists.Add(rpChgId);",
        "#this.ReplaceTargetIdLists.Clear();",
        "#this.ReplaceChangeIdLists.Clear();",
        "#this.AbilityReplaceTargetIdLists.Clear();",
        "#foreach(stringabRpTgtIdinjson.ab_rp_tgt_ids)",
        "#this.AbilityReplaceTargetIdLists.Add(abRpTgtId);",
        "#this.AbilityReplaceChangeIdLists.Clear();",
        "#foreach(stringabRpChgIdinjson.ab_rp_chg_ids)",
        "#this.AbilityReplaceChangeIdLists.Add(abRpChgId);",
        "#this.AbilityReplaceTargetIdLists.Clear();",
        "#this.AbilityReplaceChangeIdLists.Clear();",
        [
            "this.CollaboVoiceId",
            "json.cs_voice;"
        ],
        [
            "this.CollaboVoicePlayDelayFrame",
            "json.cs_vp_df;"
        ],
        [
            "this.TeleportType",
            "(eTeleportType)json.tl_type;"
        ],
        [
            "this.TeleportTarget",
            "(ESkillTarget)json.tl_target;"
        ],
        [
            "this.TeleportHeight",
            "json.tl_height;"
        ],
        [
            "this.TeleportIsMove",
            "json.tl_is_mov!=0;"
        ],
        [
            "this.TrickId",
            "json.tr_id;"
        ],
        [
            "this.TrickSetType",
            "(eTrickSetType)json.tr_set;"
        ],
        [
            "this.BreakObjId",
            "json.bo_id;"
        ],
        [
            "this.MapEffectDesc",
            "json.me_desc;"
        ],
        [
            "this.WeatherRate",
            "json.wth_rate;"
        ],
        [
            "this.WeatherId",
            "json.wth_id;"
        ],
        [
            "this.ElementSpcAtkRate",
            "json.elem_tk;"
        ],
        [
            "this.MaxDamageValue",
            "json.max_dmg;"
        ],
        [
            "this.hp_cost",
            "(OInt)json.hp_cost;"
        ],
        [
            "this.hp_cost_rate",
            "(OInt)Math.Min(Math.Max(json.hp_cost_rate,0),100);"
        ],
        [
            "this.random_hit_rate",
            "(OInt)json.rhit;"
        ],
        [
            "this.effect_type",
            "(SkillEffectTypes)json.eff_type;"
        ],
        [
            "this.effect_calc",
            "(SkillParamCalcTypes)json.eff_calc;"
        ],
        [
            "this.effect_rate.ini",
            "(OInt)json.eff_rate_ini;"
        ],
        [
            "this.effect_rate.max",
            "(OInt)json.eff_rate_max;"
        ],
        [
            "this.effect_value.ini",
            "(OInt)json.eff_val_ini;"
        ],
        [
            "this.effect_value.max",
            "(OInt)json.eff_val_max;"
        ],
        [
            "this.effect_range.ini",
            "(OInt)json.eff_range_ini;"
        ],
        [
            "this.effect_range.max",
            "(OInt)json.eff_range_max;"
        ],
        [
            "this.effect_hprate",
            "(OInt)json.eff_hprate;"
        ],
        [
            "this.effect_mprate",
            "(OInt)json.eff_mprate;"
        ],
        [
            "this.effect_dead_rate",
            "(OInt)json.eff_durate;"
        ],
        [
            "this.effect_lvrate",
            "(OInt)json.eff_lvrate;"
        ],
        [
            "this.attack_type",
            "(AttackTypes)json.atk_type;"
        ],
        [
            "this.attack_detail",
            "(AttackDetailTypes)json.atk_det;"
        ],
        [
            "this.element_type",
            "(EElement)json.elem;"
        ],
        [
            "this.element_value.ini",
            "(OInt)json.elem_ini;"
        ],
        [
            "this.element_value.max",
            "(OInt)json.elem_max;"
        ],
        [
            "this.cast_type",
            "(ECastTypes)json.ct_type;"
        ],
        [
            "if(this.type",
            "=ESkillType.Skill&&(json.ct_spd_ini!=0||json.ct_spd_max!=0))"
        ],
        [
            "this.cast_speed.ini",
            "(OInt)json.ct_spd_ini;"
        ],
        [
            "this.cast_speed.max",
            "(OInt)json.ct_spd_max;"
        ],
        [
            "this.absorb_damage_rate",
            "(OInt)json.abs_d_rate;"
        ],
        [
            "this.reaction_damage_type",
            "(DamageTypes)json.react_d_type;"
        ],
        "#this.reaction_det_lists.Clear();",
        "#foreach(AttackDetailTypesreactDetinjson.react_dets)",
        "#this.reaction_det_lists.Add(reactDet);",
        [
            "if(this.control_ct_calc",
            "=SkillParamCalcTypes.Fixed||json.ct_val_ini!=0||json.ct_val_max!=0)"
        ],
        [
            "this.control_ct_rate.ini",
            "(OInt)json.ct_rate_ini;"
        ],
        [
            "this.control_ct_rate.max",
            "(OInt)json.ct_rate_max;"
        ],
        [
            "this.control_ct_value.ini",
            "(OInt)json.ct_val_ini;"
        ],
        [
            "this.control_ct_value.max",
            "(OInt)json.ct_val_max;"
        ],
        [
            "this.control_ct_calc",
            "(SkillParamCalcTypes)json.ct_calc;"
        ],
        [
            "this.target_buff_iname",
            "json.t_buff;"
        ],
        [
            "this.target_cond_iname",
            "json.t_cond;"
        ],
        [
            "this.self_buff_iname",
            "json.s_buff;"
        ],
        [
            "this.self_cond_iname",
            "json.s_cond;"
        ],
        [
            "this.shield_type",
            "(ShieldTypes)json.shield_type;"
        ],
        [
            "this.shield_damage_type",
            "(DamageTypes)json.shield_d_type;"
        ],
        [
            "this.shield_turn.ini",
            "(OInt)json.shield_turn_ini;"
        ],
        [
            "this.shield_turn.max",
            "(OInt)json.shield_turn_max;"
        ],
        [
            "this.shield_value.ini",
            "(OInt)json.shield_ini;"
        ],
        [
            "this.shield_value.max",
            "(OInt)json.shield_max;"
        ],
        [
            "this.control_damage_rate.ini",
            "(OInt)json.ctrl_d_rate_ini;"
        ],
        [
            "this.control_damage_rate.max",
            "(OInt)json.ctrl_d_rate_max;"
        ],
        [
            "this.control_damage_value.ini",
            "(OInt)json.ctrl_d_ini;"
        ],
        [
            "this.control_damage_value.max",
            "(OInt)json.ctrl_d_max;"
        ],
        [
            "this.control_damage_calc",
            "(SkillParamCalcTypes)json.ctrl_d_calc;"
        ],
        "#switch(effectType)",
        "#caseSkillEffectTypes.Teleport:",
        "#caseSkillEffectTypes.Changing:",
        "#caseSkillEffectTypes.Throw:",
        "#break;",
        "#caseSkillEffectTypes.RateDamage:",
        "#break;",
        "#break;",
        "#default:",
        "#gotocaseSkillEffectTypes.RateDamage;",
        "#else",
        "#break;",
        "#else",
        "#switch(this.select_range)",
        "#caseESelectType.LaserSpread:",
        "#break;",
        "#caseESelectType.LaserWide:",
        "#break;",
        "#caseESelectType.LaserTwin:",
        "#break;",
        "#caseESelectType.LaserTriple:",
        "#break;",
        "#switch(this.select_scope)",
        "#caseESelectType.LaserSpread:",
        "#caseESelectType.LaserWide:",
        "#caseESelectType.LaserTwin:",
        "#caseESelectType.LaserTriple:",
        "#break;",
        "#if(this.IsTargetTeleport)",
        "#if(this.IsCastSkill())",
        "#if(this.IsTargetValidGrid&&!this.IsTrickSkill())",
        "#returntrue;"
    ],
    "TowerFloorPara": [
        "#thrownewInvalidJSONException();",
        [
            "this.iname",
            "json.iname;"
        ],
        [
            "this.title",
            "json.title;"
        ],
        [
            "this.name",
            "json.name;"
        ],
        [
            "this.expr",
            "json.expr;"
        ],
        [
            "this.cond",
            "json.cond;"
        ],
        [
            "this.tower_id",
            "json.tower_id;"
        ],
        [
            "this.cond_quest",
            "json.cond_quest;"
        ],
        [
            "this.hp_recover_rate",
            "json.hp_recover_rate;"
        ],
        [
            "this.pt",
            "(short)json.pt;"
        ],
        [
            "this.lv",
            "json.lv;"
        ],
        [
            "this.joblv",
            "json.joblv;"
        ],
        [
            "this.can_help",
            "(int)json.can_help==1;"
        ],
        [
            "this.rdy_cnd",
            "json.rdy_cnd;"
        ],
        [
            "this.reward_id",
            "json.reward_id;"
        ],
        [
            "this.floor",
            "json.floor;"
        ],
        [
            "this.is_unit_chg",
            "json.is_unit_chg;"
        ],
        [
            "this.me_id",
            "json.me_id;"
        ],
        [
            "this.is_wth_no_chg",
            "json.is_wth_no_chg;"
        ],
        [
            "this.wth_set_id",
            "json.wth_set_id;"
        ],
        [
            "this.rand_tag",
            "newbyte[json.rand_tag.Length];"
        ],
        [
            "this.rand_tag[index]",
            "(byte)json.rand_tag[index];"
        ],
        [
            "this.naut",
            "json.naut;"
        ],
        "#this.map.Clear();",
        "#mapParam.Deserialize(json.map[index]);",
        "#this.map.Add(mapParam);"
    ],
    "TowerPara": [
        "#thrownewInvalidJSONException();",
        [
            "this.iname",
            "json.iname;"
        ],
        [
            "this.name",
            "json.name;"
        ],
        [
            "this.expr",
            "json.expr;"
        ],
        [
            "this.banr",
            "json.banr;"
        ],
        [
            "this.prefabPath",
            "json.item;"
        ],
        [
            "this.bg",
            "json.bg;"
        ],
        [
            "this.floor_bg_open",
            "json.floor_bg_open;"
        ],
        [
            "this.floor_bg_close",
            "json.floor_bg_close;"
        ],
        [
            "this.can_unit_recover",
            "(int)json.can_unit_recover==1;"
        ],
        [
            "this.unit_recover_minute",
            "json.unit_recover_minute;"
        ],
        [
            "this.unit_recover_coin",
            "json.unit_recover_coin;"
        ],
        [
            "this.eventURL",
            "json.eventURL;"
        ],
        [
            "this.is_down",
            "(int)json.is_down>0;"
        ],
        [
            "this.is_view_ranking",
            "(int)json.is_view_ranking>0;"
        ],
        [
            "this.unlock_level",
            "json.unlock_level;"
        ],
        [
            "this.unlock_quest",
            "json.unlock_quest;"
        ],
        [
            "this.URL",
            "json.url;"
        ]
    ],
    "ReqTowerResupon": [
        "#return;",
        "#this.Deserialize(res.stats);",
        "#else",
        "#this.Deserialize(newJSON_ReqTowerResuponse.Json_TowerStatus()",
        "#});",
        "#this.pdeck.Add(newTowerResuponse.PlayerUnit());",
        "#this.Deserialize(res.edeck);",
        "#this.UpdateCurrentFloor();",
        "#",
        "#publicvoidDeserialize(JSON_ReqTowerResuponse.Json_TowerPlayerUnit[]res)",
        "#return;",
        "#this.pdeck.Add(newTowerResuponse.PlayerUnit());",
        "#",
        "#publicvoidDeserialize(JSON_ReqTowerResuponse.Json_TowerEnemyUnit[]res)",
        "#return;",
        "#this.edeck.Add(newTowerResuponse.EnemyUnit());",
        "#",
        "#publicvoidDeserialize(ReqTowerRank.JSON_TowerRankResponsejson)",
        "#return;",
        [
            "this.SpdRank",
            "newTowerResuponse.TowerRankParam[json.speed.Length];"
        ],
        [
            "this.SpdRank[index].lv",
            "json.speed[index].lv;"
        ],
        [
            "this.SpdRank[index].name",
            "json.speed[index].name;"
        ],
        [
            "this.SpdRank[index].rank",
            "json.speed[index].rank;"
        ],
        [
            "this.SpdRank[index].score",
            "json.speed[index].score;"
        ],
        "#this.SpdRank[index].unit.Deserialize(json.speed[index].unit);",
        "#return;",
        [
            "this.TecRank",
            "newTowerResuponse.TowerRankParam[json.technical.Length];"
        ],
        [
            "this.TecRank[index].lv",
            "json.technical[index].lv;"
        ],
        [
            "this.TecRank[index].name",
            "json.technical[index].name;"
        ],
        [
            "this.TecRank[index].rank",
            "json.technical[index].rank;"
        ],
        [
            "this.TecRank[index].score",
            "json.technical[index].score;"
        ],
        "#this.TecRank[index].unit.Deserialize(json.technical[index].unit);",
        "#",
        "#privatevoidUpdateCurrentFloor()",
        "#else",
        "#return;",
        "#return;",
        "#",
        "#publicvoidDeserialize(JSON_ReqTowerResuponse.Json_TowerStatusjson)",
        [
            "this.status.fname",
            "json.fname;"
        ],
        [
            "this.status.state",
            "json.questStates;"
        ],
        "#return;",
        "#referenceQuestList.Add(towerFloors[(int)index].GetQuestParam());",
        "#while(enumerator.MoveNext())",
        "#this.SetQuestState(referenceQuestList,questParam,QuestStates.Cleared,true);",
        "#",
        "#privatevoidUpdateFloorQuestsState()",
        "#",
        "#privatevoidSetQuestState(List<QuestParam>referenceQuestList,QuestParamquestParam,QuestStatesstate,boolcond_recursive)",
        "#return;",
        "#return;",
        "#//ISSUE:objectofacompiler-generatedtypeiscreated",
        "#//ISSUE:variableofacompiler-generatedtype",
        "#foreach(stringcondQuestinquestParam.cond_quests)",
        "#//ISSUE:referencetoacompiler-generatedfield",
        "#//ISSUE:referencetoacompiler-generatedmethod",
        "#this.SetQuestState(referenceQuestList,questParam1,state,cond_recursive);",
        "#",
        "#publicTowerFloorParamGetCurrentFloor()",
        "#returnthis.currentFloor;",
        "#",
        "#publicvoidCalcDamage(List<Unit>player)",
        "#return;",
        "#//ISSUE:objectofacompiler-generatedtypeiscreated",
        "#//ISSUE:variableofacompiler-generatedtype",
        "#//ISSUE:referencetoacompiler-generatedfield",
        "#//ISSUE:referencetoacompiler-generatedfield",
        "#//ISSUE:referencetoacompiler-generatedfield",
        "#//ISSUE:referencetoacompiler-generatedfield",
        "#//ISSUE:referencetoacompiler-generatedmethod",
        "#//ISSUE:referencetoacompiler-generatedfield",
        "#unit.Damage(num,false);",
        "#",
        "#publicintGetPlayerUnitHP(UnitDatadata)",
        "#return(int)data.Status.param.hp;",
        "#return(int)data.Status.param.hp;",
        "#return(int)data.Status.param.hp-num;",
        "#",
        "#return;",
        "#unitList.Add(unit);",
        "#else",
        "#unit.Damage((int)unit.MaximumStatus.param.hp-this.edeck[index1].hp,false);",
        "#if(!x.IsGimmick)",
        "#returnfalse;",
        "#}));",
        "#enemy.Remove(unitList[index]);",
        "#",
        "#publicintCalcRecoverCost()",
        "#return0;",
        "#returnMathf.Clamp((int)Math.Ceiling((double)tower.unit_recover_coin*num),0,(int)tower.unit_recover_coin);",
        "#",
        "#publicboolExistDamagedUnit()",
        "#returnfalse;",
        "#if(this.pdeck[index].dmg>0)",
        "#returntrue;",
        "#returnfalse;",
        "#",
        "#publicintGetDiedUnitNum()",
        "#returnnum;",
        "#if(this.pdeck[index].isDied)",
        "#++num;",
        "#returnnum;",
        "#",
        "#publicList<UnitData>GetAvailableUnits()",
        "#",
        "#publicTowerResuponse.PlayerUnitFindPlayerUnit(UnitDataunit)",
        "#return(TowerResuponse.PlayerUnit)null;",
        "#",
        "#publicclassStatus",
        "#publicstringfname;",
        "#publicQuestStatesstate;",
        "#",
        "#publicclassPlayerUnit",
        "#publicstringunitname;",
        "#publicintdmg;",
        "#publicintis_died;",
        "#",
        "#publicboolisDied",
        "#get",
        "#",
        "#publicclassEnemyUnit",
        "#publiclongid;",
        "#publicstringiname;",
        "#publicstringeid;",
        "#publicinthp;",
        "#publicintjewel;",
        "#",
        "#publicclassTowerRankParam",
        "#publicstringname;",
        "#publicintlv;",
        "#publicintrank;",
        "#publicintscore;",
        "#publicstringuid;",
        "#publicUnitDataunit;"
    ],
    "ReqTowerResuponse.Json_TowerPlayerUnit": [
        "#return;",
        "#this.pdeck.Add(newTowerResuponse.PlayerUnit());"
    ],
    "ReqTowerResuponse.Json_TowerEnemyUnit": [
        "#return;",
        "#this.edeck.Add(newTowerResuponse.EnemyUnit());"
    ],
    "ReqTowerResuponse.Json_TowerStatu": [
        [
            "this.status.fname",
            "json.fname;"
        ],
        [
            "this.status.state",
            "json.questStates;"
        ],
        "#return;",
        "#referenceQuestList.Add(towerFloors[(int)index].GetQuestParam());",
        "#while(enumerator.MoveNext())",
        "#this.SetQuestState(referenceQuestList,questParam,QuestStates.Cleared,true);"
    ],
    "TowerRewardIte": [
        "#thrownewInvalidJSONException();",
        [
            "this.iname",
            "json.iname;"
        ],
        [
            "this.type",
            "(TowerRewardItem.RewardType)json.type;"
        ],
        [
            "this.num",
            "json.num;"
        ],
        [
            "this.visible",
            "(int)json.visible==1;"
        ]
    ],
    "TowerRewardPara": [
        "#thrownewInvalidJSONException();",
        [
            "this.iname",
            "json.iname;"
        ],
        "#return;",
        "#towerRewardItem.Deserialize(json.rewards[index]);",
        "#this.mTowerRewardItems.Add(towerRewardItem);"
    ],
    "TowerRoundRewardPara": [
        "#thrownewInvalidJSONException();",
        [
            "this.iname",
            "json.iname;"
        ],
        "#return;",
        "#towerRewardItem.Deserialize((JSON_TowerRewardItem)json.rewards[index]);",
        "#this.mTowerRewardItems.Add(towerRewardItem);",
        "#this.mRoundList.Add(json.rewards[index].round_num);"
    ],
    "TowerScor": [
        "#returnfalse;",
        [
            "this.Rank",
            "json.rank;"
        ],
        [
            "this.Score",
            "(OInt)json.score;"
        ],
        [
            "this.TurnCnt",
            "(OInt)json.turn;"
        ],
        [
            "this.DiedCnt",
            "(OInt)json.died;"
        ],
        [
            "this.RetireCnt",
            "(OInt)json.retire;"
        ],
        [
            "this.RecoverCnt",
            "(OInt)json.recover;"
        ],
        "#returntrue;"
    ],
    "TrickPara": [
        "#return;",
        [
            "this.mIname",
            "json.iname;"
        ],
        [
            "this.mName",
            "json.name;"
        ],
        [
            "this.mExpr",
            "json.expr;"
        ],
        [
            "this.mDamageType",
            "(eTrickDamageType)json.dmg_type;"
        ],
        [
            "this.mDamageVal",
            "(OInt)json.dmg_val;"
        ],
        [
            "this.mCalcType",
            "(SkillParamCalcTypes)json.calc;"
        ],
        [
            "this.mElem",
            "(EElement)json.elem;"
        ],
        [
            "this.mAttackDetail",
            "(AttackDetailTypes)json.atk_det;"
        ],
        [
            "this.mBuffId",
            "json.buff;"
        ],
        [
            "this.mCondId",
            "json.cond;"
        ],
        [
            "this.mKnockBackRate",
            "(OInt)json.kb_rate;"
        ],
        [
            "this.mKnockBackVal",
            "(OInt)json.kb_val;"
        ],
        [
            "this.mTarget",
            "(ESkillTarget)json.target;"
        ],
        [
            "this.mVisualType",
            "(eTrickVisualType)json.visual;"
        ],
        [
            "this.mActionCount",
            "(OInt)json.count;"
        ],
        [
            "this.mValidClock",
            "(OInt)json.clock;"
        ],
        [
            "this.mIsNoOverWrite",
            "(OBool)(json.is_no_ow!=0);"
        ],
        [
            "this.mMarkerName",
            "json.marker;"
        ],
        [
            "this.mEffectName",
            "json.effect;"
        ],
        [
            "this.mEffTarget",
            "(ESkillTarget)json.eff_target;"
        ],
        [
            "this.mEffShape",
            "(ESelectType)json.eff_shape;"
        ],
        [
            "this.mEffScope",
            "(OInt)json.eff_scope;"
        ],
        [
            "this.mEffHeight",
            "(OInt)json.eff_height;"
        ]
    ],
    "TrophyCategoryPara": [
        "#returnfalse;",
        [
            "this.iname",
            "json.iname;"
        ],
        [
            "this.name",
            "json.name;"
        ],
        [
            "this.is_not_pull",
            "json.is_not_pull==1;"
        ],
        [
            "this.days",
            "json.day_reset;"
        ],
        [
            "this.beginner",
            "json.bgnr;"
        ],
        "#this.begin_at.Set(json.begin_at,DateTime.MinValue);",
        "#this.end_at.Set(json.end_at,DateTime.MaxValue);",
        [
            "this.category",
            "json.category==0?TrophyCategorys.Other:(TrophyCategorys)json.category;"
        ],
        [
            "this.linked_quest",
            "json.linked_quest;"
        ],
        "#returntrue;"
    ],
    "TrophyPara": [
        "#returnfalse;",
        "#else",
        [
            "this.RequiredTrophies",
            "newstring[json.flg_quests.Length];"
        ],
        [
            "this.RequiredTrophies[index]",
            "json.flg_quests[index];"
        ],
        [
            "this.Objectives[index].type",
            "(TrophyConditionTypes)json.type;"
        ],
        [
            "this.Objectives[index].ival",
            "json.ival;"
        ],
        [
            "this.Objectives[index].sval",
            "newList<string>((IEnumerable<string>)json.sval);"
        ],
        [
            "this.iname",
            "json.iname;"
        ],
        [
            "this.Name",
            "json.name;"
        ],
        [
            "this.Expr",
            "json.expr;"
        ],
        [
            "this.Gold",
            "json.reward_gold;"
        ],
        [
            "this.Coin",
            "json.reward_coin;"
        ],
        [
            "this.Exp",
            "json.reward_exp;"
        ],
        [
            "this.Stamina",
            "json.reward_stamina;"
        ],
        [
            "this.ParentTrophy",
            "json.parent_iname;"
        ],
        [
            "this.help",
            "json.help;"
        ],
        "#if(!string.IsNullOrEmpty(json.category))",
        [
            "this.category_hash_code",
            "json.category.GetHashCode();"
        ],
        [
            "this.Category",
            "json.category;"
        ],
        [
            "this.DispType",
            "(TrophyDispType)json.disp;"
        ],
        [
            "this.Items",
            "TrophyParam.InitializeItems(json);"
        ],
        [
            "this.Artifacts",
            "TrophyParam.InitializeArtifacts(json);"
        ],
        "#returntrue;"
    ],
    "UnitPara": [
        "#returnfalse;",
        [
            "this.no",
            "json.no;"
        ],
        [
            "this.iname",
            "json.iname;"
        ],
        [
            "this.name",
            "json.name;"
        ],
        [
            "this.ai",
            "(OString)json.ai;"
        ],
        [
            "this.model",
            "json.mdl;"
        ],
        [
            "this.grow",
            "(OString)json.grow;"
        ],
        [
            "this.piece",
            "(OString)json.piece;"
        ],
        [
            "this.birth",
            "(OString)json.birth;"
        ],
        [
            "this.skill",
            "(OString)json.skill;"
        ],
        [
            "this.ability",
            "(OString)json.ability;"
        ],
        [
            "this.ma_quest",
            "(OString)json.ma_quest;"
        ],
        [
            "this.sw",
            "(OInt)Math.Max(json.sw,1);"
        ],
        [
            "this.sh",
            "(OInt)Math.Max(json.sh,1);"
        ],
        [
            "this.sex",
            "(ESex)json.sex;"
        ],
        [
            "this.rare",
            "(OInt)json.rare;"
        ],
        [
            "this.raremax",
            "(OInt)json.raremax;"
        ],
        [
            "this.type",
            "(EUnitType)json.type;"
        ],
        [
            "this.element",
            "(EElement)json.elem;"
        ],
        [
            "this.hero",
            "(OInt)json.hero;"
        ],
        [
            "this.search",
            "(OInt)json.search;"
        ],
        [
            "this.stopped",
            "(OBool)(json.stop!=0);"
        ],
        [
            "this.summon",
            "json.notsmn==0;"
        ],
        "#if(!string.IsNullOrEmpty(json.available_at))",
        "#try",
        [
            "this.available_at",
            "DateTime.Parse(json.available_at);"
        ],
        "#catch",
        [
            "this.height",
            "(OInt)json.height;"
        ],
        [
            "this.weight",
            "(OInt)json.weight;"
        ],
        [
            "this.jobtype",
            "(JobTypes)json.jt;"
        ],
        [
            "this.role",
            "(RoleTypes)json.role;"
        ],
        [
            "this.mov",
            "(OInt)json.mov;"
        ],
        [
            "this.jmp",
            "(OInt)json.jmp;"
        ],
        [
            "this.inimp",
            "(OInt)json.inimp;"
        ],
        [
            "this.ma_rarity",
            "(OInt)json.ma_rarity;"
        ],
        [
            "this.ma_lv",
            "(OInt)json.ma_lv;"
        ],
        [
            "this.skins",
            "newOString[json.skins.Length];"
        ],
        [
            "this.skins[index]",
            "(OString)json.skins[index];"
        ],
        [
            "this.djob",
            "(OString)json.djob;"
        ],
        [
            "this.dbuki",
            "(OString)json.dbuki;"
        ],
        [
            "this.default_skill",
            "(OString)json.dskl;"
        ],
        [
            "this.default_abilities",
            "newOString[json.dabi.Length];"
        ],
        [
            "this.default_abilities[index]",
            "(OString)json.dabi[index];"
        ],
        "#returntrue;",
        [
            "this.jobsets",
            "newOString[json.jobsets.Length];"
        ],
        [
            "this.jobsets[index]",
            "(OString)json.jobsets[index];"
        ],
        [
            "this.tags",
            "json.tag.Split(',');"
        ],
        [
            "this.ini_status.param.hp",
            "(OInt)json.hp;"
        ],
        [
            "this.ini_status.param.mp",
            "(OShort)json.mp;"
        ],
        [
            "this.ini_status.param.atk",
            "(OShort)json.atk;"
        ],
        [
            "this.ini_status.param.def",
            "(OShort)json.def;"
        ],
        [
            "this.ini_status.param.mag",
            "(OShort)json.mag;"
        ],
        [
            "this.ini_status.param.mnd",
            "(OShort)json.mnd;"
        ],
        [
            "this.ini_status.param.dex",
            "(OShort)json.dex;"
        ],
        [
            "this.ini_status.param.spd",
            "(OShort)json.spd;"
        ],
        [
            "this.ini_status.param.cri",
            "(OShort)json.cri;"
        ],
        [
            "this.ini_status.param.luk",
            "(OShort)json.luk;"
        ],
        [
            "this.ini_status.enchant_resist.poison",
            "(OInt)json.rpo;"
        ],
        [
            "this.ini_status.enchant_resist.paralyse",
            "(OInt)json.rpa;"
        ],
        [
            "this.ini_status.enchant_resist.stun",
            "(OInt)json.rst;"
        ],
        [
            "this.ini_status.enchant_resist.sleep",
            "(OInt)json.rsl;"
        ],
        [
            "this.ini_status.enchant_resist.charm",
            "(OInt)json.rch;"
        ],
        [
            "this.ini_status.enchant_resist.stone",
            "(OInt)json.rsn;"
        ],
        [
            "this.ini_status.enchant_resist.blind",
            "(OInt)json.rbl;"
        ],
        [
            "this.ini_status.enchant_resist.notskl",
            "(OInt)json.rns;"
        ],
        [
            "this.ini_status.enchant_resist.notmov",
            "(OInt)json.rnm;"
        ],
        [
            "this.ini_status.enchant_resist.notatk",
            "(OInt)json.rna;"
        ],
        [
            "this.ini_status.enchant_resist.zombie",
            "(OInt)json.rzo;"
        ],
        [
            "this.ini_status.enchant_resist.death",
            "(OInt)json.rde;"
        ],
        [
            "this.ini_status.enchant_resist.knockback",
            "(OInt)json.rkn;"
        ],
        [
            "this.ini_status.enchant_resist.resist_debuff",
            "(OInt)json.rdf;"
        ],
        [
            "this.ini_status.enchant_resist.berserk",
            "(OInt)json.rbe;"
        ],
        [
            "this.ini_status.enchant_resist.stop",
            "(OInt)json.rcs;"
        ],
        [
            "this.ini_status.enchant_resist.fast",
            "(OInt)json.rcu;"
        ],
        [
            "this.ini_status.enchant_resist.slow",
            "(OInt)json.rcd;"
        ],
        [
            "this.ini_status.enchant_resist.donsoku",
            "(OInt)json.rdo;"
        ],
        [
            "this.ini_status.enchant_resist.rage",
            "(OInt)json.rra;"
        ],
        [
            "this.ini_status.enchant_resist.single_attack",
            "(OInt)json.rsa;"
        ],
        [
            "this.ini_status.enchant_resist.area_attack",
            "(OInt)json.raa;"
        ],
        [
            "this.ini_status.enchant_resist.dec_ct",
            "(OInt)json.rdc;"
        ],
        [
            "this.ini_status.enchant_resist.inc_ct",
            "(OInt)json.ric;"
        ],
        [
            "this.max_status.param.hp",
            "(OInt)json.mhp;"
        ],
        [
            "this.max_status.param.mp",
            "(OShort)json.mmp;"
        ],
        [
            "this.max_status.param.atk",
            "(OShort)json.matk;"
        ],
        [
            "this.max_status.param.def",
            "(OShort)json.mdef;"
        ],
        [
            "this.max_status.param.mag",
            "(OShort)json.mmag;"
        ],
        [
            "this.max_status.param.mnd",
            "(OShort)json.mmnd;"
        ],
        [
            "this.max_status.param.dex",
            "(OShort)json.mdex;"
        ],
        [
            "this.max_status.param.spd",
            "(OShort)json.mspd;"
        ],
        [
            "this.max_status.param.cri",
            "(OShort)json.mcri;"
        ],
        [
            "this.max_status.param.luk",
            "(OShort)json.mluk;"
        ],
        [
            "this.max_status.enchant_resist.poison",
            "(OInt)json.mrpo;"
        ],
        [
            "this.max_status.enchant_resist.paralyse",
            "(OInt)json.mrpa;"
        ],
        [
            "this.max_status.enchant_resist.stun",
            "(OInt)json.mrst;"
        ],
        [
            "this.max_status.enchant_resist.sleep",
            "(OInt)json.mrsl;"
        ],
        [
            "this.max_status.enchant_resist.charm",
            "(OInt)json.mrch;"
        ],
        [
            "this.max_status.enchant_resist.stone",
            "(OInt)json.mrsn;"
        ],
        [
            "this.max_status.enchant_resist.blind",
            "(OInt)json.mrbl;"
        ],
        [
            "this.max_status.enchant_resist.notskl",
            "(OInt)json.mrns;"
        ],
        [
            "this.max_status.enchant_resist.notmov",
            "(OInt)json.mrnm;"
        ],
        [
            "this.max_status.enchant_resist.notatk",
            "(OInt)json.mrna;"
        ],
        [
            "this.max_status.enchant_resist.zombie",
            "(OInt)json.mrzo;"
        ],
        [
            "this.max_status.enchant_resist.death",
            "(OInt)json.mrde;"
        ],
        [
            "this.max_status.enchant_resist.knockback",
            "(OInt)json.mrkn;"
        ],
        [
            "this.max_status.enchant_resist.resist_debuff",
            "(OInt)json.mrdf;"
        ],
        [
            "this.max_status.enchant_resist.berserk",
            "(OInt)json.mrbe;"
        ],
        [
            "this.max_status.enchant_resist.stop",
            "(OInt)json.mrcs;"
        ],
        [
            "this.max_status.enchant_resist.fast",
            "(OInt)json.mrcu;"
        ],
        [
            "this.max_status.enchant_resist.slow",
            "(OInt)json.mrcd;"
        ],
        [
            "this.max_status.enchant_resist.donsoku",
            "(OInt)json.mrdo;"
        ],
        [
            "this.max_status.enchant_resist.rage",
            "(OInt)json.mrra;"
        ],
        [
            "this.max_status.enchant_resist.single_attack",
            "(OInt)json.mrsa;"
        ],
        [
            "this.max_status.enchant_resist.area_attack",
            "(OInt)json.mraa;"
        ],
        [
            "this.max_status.enchant_resist.dec_ct",
            "(OInt)json.mrdc;"
        ],
        [
            "this.max_status.enchant_resist.inc_ct",
            "(OInt)json.mric;"
        ],
        [
            "this.leader_skills[0]",
            "json.ls1;"
        ],
        [
            "this.leader_skills[1]",
            "json.ls2;"
        ],
        [
            "this.leader_skills[2]",
            "json.ls3;"
        ],
        [
            "this.leader_skills[3]",
            "json.ls4;"
        ],
        [
            "this.leader_skills[4]",
            "json.ls5;"
        ],
        [
            "this.leader_skills[5]",
            "json.ls6;"
        ],
        [
            "this.recipes[0]",
            "json.recipe1;"
        ],
        [
            "this.recipes[1]",
            "json.recipe2;"
        ],
        [
            "this.recipes[2]",
            "json.recipe3;"
        ],
        [
            "this.recipes[3]",
            "json.recipe4;"
        ],
        [
            "this.recipes[4]",
            "json.recipe5;"
        ],
        [
            "this.recipes[5]",
            "json.recipe6;"
        ],
        [
            "this.image",
            "json.img;"
        ],
        [
            "this.voice",
            "json.vce;"
        ],
        [
            "this.job_option_index",
            "newOString[json.jidx.Length];"
        ],
        [
            "this.job_option_index[index]",
            "(OString)json.jidx[index];"
        ],
        [
            "this.job_images",
            "newOString[json.jimgs.Length];"
        ],
        [
            "this.job_images[index]",
            "(OString)json.jimgs[index];"
        ],
        [
            "this.job_voices",
            "newOString[json.jvcs.Length];"
        ],
        [
            "this.job_voices[index]",
            "(OString)json.jvcs[index];"
        ],
        [
            "this.is_throw",
            "(OBool)(json.no_trw==0);"
        ],
        [
            "this.is_knock_back",
            "(OBool)(json.no_kb==0);"
        ],
        "#returntrue;"
    ],
    "UnlockPara": [
        "#returnfalse;",
        [
            "this.iname",
            "json.iname;"
        ],
        "#try",
        [
            "this.UnlockTarget",
            "(UnlockTargets)Enum.Parse(typeof(UnlockTargets),json.iname);"
        ],
        "#catch(Exceptionex)",
        "#returnfalse;",
        [
            "this.PlayerLevel",
            "json.lv;"
        ],
        [
            "this.VipRank",
            "json.vip;"
        ],
        "#returntrue;"
    ],
    "VersusCoi": [
        "#return;",
        [
            "this.iname",
            "json.iname;"
        ],
        [
            "this.coin_iname",
            "json.coin_iname;"
        ],
        [
            "this.win_cnt",
            "json.win_cnt;"
        ],
        [
            "this.lose_cnt",
            "json.lose_cnt;"
        ],
        [
            "this.draw_cnt",
            "json.draw_cnt;"
        ]
    ],
    "VersusMatchCondPara": [
        "#return;",
        [
            "this.Floor",
            "(OInt)json.floor;"
        ],
        [
            "this.LvRange",
            "(OInt)json.lvrang;"
        ],
        [
            "this.FloorRange",
            "(OInt)json.floorrange;"
        ]
    ],
    "VersusMatchingPara": [
        "#return;",
        [
            "this.MatchKey",
            "json.key;"
        ],
        [
            "this.MatchKeyHash",
            "VersusMatchingParam.CalcHash(json.key);"
        ],
        [
            "this.MatchLinePoint",
            "json.point;"
        ]
    ],
    "VersusSchedul": [
        "#return;",
        [
            "this.tower_iname",
            "json.tower_iname;"
        ],
        [
            "this.iname",
            "json.iname;"
        ],
        [
            "this.begin_at",
            "json.begin_at;"
        ],
        [
            "this.end_at",
            "json.end_at;"
        ],
        [
            "this.gift_begin_at",
            "json.gift_begin_at;"
        ],
        [
            "this.gift_end_at",
            "json.gift_end_at;"
        ],
        "#try",
        "#catch(Exceptionex)",
        "#DebugUtility.Log(ex.ToString());"
    ],
    "VersusTowerPara": [
        "#return;",
        [
            "this.VersusTowerID",
            "(OString)json.vstower_id;"
        ],
        [
            "this.FloorName",
            "(OString)json.iname;"
        ],
        [
            "this.Floor",
            "(OInt)json.floor;"
        ],
        [
            "this.RankupNum",
            "(OInt)json.rankup_num;"
        ],
        [
            "this.WinNum",
            "(OInt)json.win_num;"
        ],
        [
            "this.LoseNum",
            "(OInt)json.lose_num;"
        ],
        [
            "this.BonusNum",
            "(OInt)json.bonus_num;"
        ],
        [
            "this.DownFloor",
            "(OInt)json.downfloor;"
        ],
        [
            "this.ResetFloor",
            "(OInt)json.resetfloor;"
        ],
        "#Debug.LogError((object)\"VersusTowerParam[WinItem]isInvalid\");",
        [
            "this.WinIteminame",
            "newOString[json.winitem.Length];"
        ],
        [
            "this.WinItemNum",
            "newOInt[json.win_itemnum.Length];"
        ],
        [
            "this.WinIteminame[index]",
            "(OString)json.winitem[index];"
        ],
        [
            "this.WinItemNum[index]",
            "(OInt)json.win_itemnum[index];"
        ],
        "#Debug.LogError((object)\"VersusTowerParam[LoseItem]isInvalid\");",
        [
            "this.JoinIteminame",
            "newOString[json.joinitem.Length];"
        ],
        [
            "this.JoinItemNum",
            "newOInt[json.join_itemnum.Length];"
        ],
        [
            "this.JoinIteminame[index]",
            "(OString)json.joinitem[index];"
        ],
        [
            "this.JoinItemNum[index]",
            "(OInt)json.join_itemnum[index];"
        ],
        "#Debug.LogError((object)\"VersusTowerParam[SpecialItem]isInvalid\");",
        [
            "this.SpIteminame",
            "newOString[json.spbtl_item.Length];"
        ],
        [
            "this.SpItemnum",
            "newOInt[json.spbtl_itemnum.Length];"
        ],
        [
            "this.SpIteminame[index]",
            "(OString)json.spbtl_item[index];"
        ],
        [
            "this.SpItemnum[index]",
            "(OInt)json.spbtl_itemnum[index];"
        ],
        "#Debug.LogError((object)\"VersusTowerParam[SeasonItem]isInvalid\");",
        [
            "this.SeasonIteminame",
            "newOString[json.season_item.Length];"
        ],
        [
            "this.SeasonItemType",
            "newVERSUS_ITEM_TYPE[json.season_itype.Length];"
        ],
        [
            "this.SeasonItemnum",
            "newOInt[json.season_itemnum.Length];"
        ],
        [
            "this.SeasonIteminame[index]",
            "(OString)json.season_item[index];"
        ],
        [
            "this.SeasonItemType[index]",
            "(VERSUS_ITEM_TYPE)Enum.Parse(typeof(VERSUS_ITEM_TYPE),json.season_itype[index],true);"
        ],
        [
            "this.SeasonItemnum[index]",
            "(OInt)json.season_itemnum[index];"
        ],
        "#if(string.IsNullOrEmpty(json.arrival_item))",
        "#return;",
        [
            "this.ArrivalIteminame",
            "(OString)json.arrival_item;"
        ],
        [
            "this.ArrivalItemType",
            "(VERSUS_ITEM_TYPE)Enum.Parse(typeof(VERSUS_ITEM_TYPE),json.arrival_type,true);"
        ],
        [
            "this.ArrivalItemNum",
            "(OInt)json.arrival_num;"
        ]
    ],
    "VipPara": [
        "#returnfalse;",
        [
            "this.NextRankNeedPoint",
            "json.exp;"
        ],
        [
            "this.Ticket",
            "json.ticket;"
        ],
        [
            "this.BuyCoinBonus",
            "json.buy_coin_bonus;"
        ],
        [
            "this.BuyCoinNum",
            "json.buy_coin_num;"
        ],
        [
            "this.BuyStaminaNum",
            "json.buy_stmn_num;"
        ],
        [
            "this.ResetEliteNum",
            "json.reset_elite;"
        ],
        [
            "this.ResetArenaNum",
            "json.reset_arena;"
        ],
        "#returntrue;"
    ],
    "WeaponPara": [
        "#returnfalse;",
        [
            "this.iname",
            "json.iname;"
        ],
        [
            "this.atk",
            "(OInt)json.atk;"
        ],
        [
            "this.formula",
            "(OInt)json.formula;"
        ],
        "#returntrue;"
    ],
    "WeatherPara": [
        "#return;",
        [
            "this.mIname",
            "json.iname;"
        ],
        [
            "this.mName",
            "json.name;"
        ],
        [
            "this.mExpr",
            "json.expr;"
        ],
        [
            "this.mIcon",
            "json.icon;"
        ],
        [
            "this.mEffect",
            "json.effect;"
        ],
        "#this.mBuffIdLists.Clear();",
        "#foreach(stringbuffIdinjson.buff_ids)",
        "#this.mBuffIdLists.Add(buffId);",
        "#this.mCondIdLists.Clear();",
        "#return;",
        "#foreach(stringcondIdinjson.cond_ids)",
        "#this.mCondIdLists.Add(condId);"
    ],
    "WeatherSetPara": [
        "#return;",
        [
            "this.mIname",
            "json.iname;"
        ],
        [
            "this.mName",
            "json.name;"
        ],
        "#this.mStartWeatherIdLists.Clear();",
        "#foreach(stringstrinjson.st_wth)",
        "#this.mStartWeatherIdLists.Add(str);",
        "#this.mStartWeatherRateLists.Clear();",
        "#foreach(intnuminjson.st_rate)",
        "#this.mStartWeatherRateLists.Add(num);",
        "#if(this.mStartWeatherIdLists.Count>this.mStartWeatherRateLists.Count)",
        "#this.mStartWeatherRateLists.Add(0);",
        [
            "this.mChangeClockMin",
            "json.ch_cl_min;"
        ],
        [
            "this.mChangeClockMax",
            "json.ch_cl_max;"
        ],
        "#if(this.mChangeClockMin>this.mChangeClockMax)",
        "#this.mChangeWeatherIdLists.Clear();",
        "#foreach(stringstrinjson.ch_wth)",
        "#this.mChangeWeatherIdLists.Add(str);",
        "#this.mChangeWeatherRateLists.Clear();",
        "#foreach(intnuminjson.ch_rate)",
        "#this.mChangeWeatherRateLists.Add(num);",
        "#return;",
        "#this.mChangeWeatherRateLists.Add(0);"
    ]
}