// Decompiled with JetBrains decompiler
// Type: Win_Btn_DecideCancel_FL_C
// Assembly: Assembly-CSharp, Version=1.2.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 9BA76916-D0BD-4DB6-A90B-FE0BCC53E511
// Assembly location: C:\Users\André\Desktop\Assembly-CSharp.dll

using UnityEngine;
using UnityEngine.Events;
using UnityEngine.UI;

[AddComponentMenu("UI/Drafts/Win_Btn_DecideCancel_FL_C")]
public class Win_Btn_DecideCancel_FL_C : UIDraft
{
  [UIDraft.AutoGenerated]
  public Text Text_Message;
  [UIDraft.AutoGenerated]
  public Button Btn_Cancel;
  [UIDraft.AutoGenerated]
  public Button Btn_Decide;
  public UIUtility.DialogResultEvent OnClickYes;
  public UIUtility.DialogResultEvent OnClickNo;

  private void OnWindowClose(UIWindow window)
  {
    Object.DestroyImmediate((Object) ((Component) ((Component) this).GetComponentInParent<Canvas>()).get_gameObject());
  }

  public void BeginClose()
  {
    UIUtility.PopCanvas(true);
    UIWindow component = (UIWindow) ((Component) this).GetComponent<UIWindow>();
    component.OnWindowClose = new UIWindow.WindowEvent(this.OnWindowClose);
    component.Close();
  }

  private void OnClickButton(GameObject obj)
  {
    this.BeginClose();
    if (Object.op_Equality((Object) obj, (Object) ((Component) this.Btn_Decide).get_gameObject()))
    {
      if (this.OnClickYes == null)
        return;
      this.OnClickYes(((Component) this).get_gameObject());
    }
    else
    {
      if (this.OnClickNo == null)
        return;
      this.OnClickNo(((Component) this).get_gameObject());
    }
  }

  private void Awake()
  {
    UIUtility.AddEventListener(((Component) this.Btn_Decide).get_gameObject(), (UnityEvent) this.Btn_Decide.get_onClick(), new UIUtility.EventListener(this.OnClickButton));
    UIUtility.AddEventListener(((Component) this.Btn_Cancel).get_gameObject(), (UnityEvent) this.Btn_Cancel.get_onClick(), new UIUtility.EventListener(this.OnClickButton));
  }
}
